!function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=29)}([,function(t,e,i){var n,o,s={},r=(n=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=n.apply(this,arguments)),o}),a=function(t,e){return e?e.querySelector(t):document.querySelector(t)},l=function(t){var e={};return function(t,i){if("function"==typeof t)return t();if(void 0===e[t]){var n=a.call(this,t,i);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}}(),c=null,u=0,h=[],d=i(4);function f(t,e){for(var i=0;i<t.length;i++){var n=t[i],o=s[n.id];if(o){o.refs++;for(var r=0;r<o.parts.length;r++)o.parts[r](n.parts[r]);for(;r<n.parts.length;r++)o.parts.push(b(n.parts[r],e))}else{var a=[];for(r=0;r<n.parts.length;r++)a.push(b(n.parts[r],e));s[n.id]={id:n.id,refs:1,parts:a}}}}function p(t,e){for(var i=[],n={},o=0;o<t.length;o++){var s=t[o],r=e.base?s[0]+e.base:s[0],a={css:s[1],media:s[2],sourceMap:s[3]};n[r]?n[r].parts.push(a):i.push(n[r]={id:r,parts:[a]})}return i}function y(t,e){var i=l(t.insertInto);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var n=h[h.length-1];if("top"===t.insertAt)n?n.nextSibling?i.insertBefore(e,n.nextSibling):i.appendChild(e):i.insertBefore(e,i.firstChild),h.push(e);else if("bottom"===t.insertAt)i.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(t.insertAt.before,i);i.insertBefore(e,o)}}function v(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=h.indexOf(t);e>=0&&h.splice(e,1)}function m(t){var e=document.createElement("style");if(void 0===t.attrs.type&&(t.attrs.type="text/css"),void 0===t.attrs.nonce){var n=function(){0;return i.nc}();n&&(t.attrs.nonce=n)}return g(e,t.attrs),y(t,e),e}function g(t,e){Object.keys(e).forEach((function(i){t.setAttribute(i,e[i])}))}function b(t,e){var i,n,o,s;if(e.transform&&t.css){if(!(s="function"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=s}if(e.singleton){var r=u++;i=c||(c=m(e)),n=k.bind(null,i,r,!1),o=k.bind(null,i,r,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(i=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",g(e,t.attrs),y(t,e),e}(e),n=x.bind(null,i,e),o=function(){v(i),i.href&&URL.revokeObjectURL(i.href)}):(i=m(e),n=S.bind(null,i),o=function(){v(i)});return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else o()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=r()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var i=p(t,e);return f(i,e),function(t){for(var n=[],o=0;o<i.length;o++){var r=i[o];(a=s[r.id]).refs--,n.push(a)}t&&f(p(t,e),e);for(o=0;o<n.length;o++){var a;if(0===(a=n[o]).refs){for(var l=0;l<a.parts.length;l++)a.parts[l]();delete s[a.id]}}}};var _,w=(_=[],function(t,e){return _[t]=e,_.filter(Boolean).join("\n")});function k(t,e,i,n){var o=i?"":n.css;if(t.styleSheet)t.styleSheet.cssText=w(e,o);else{var s=document.createTextNode(o),r=t.childNodes;r[e]&&t.removeChild(r[e]),r.length?t.insertBefore(s,r[e]):t.appendChild(s)}}function S(t,e){var i=e.css,n=e.media;if(n&&t.setAttribute("media",n),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}function x(t,e,i){var n=i.css,o=i.sourceMap,s=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||s)&&(n=d(n)),o&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var r=new Blob([n],{type:"text/css"}),a=t.href;t.href=URL.createObjectURL(r),a&&URL.revokeObjectURL(a)}},function(t,e,i){var n=i(3);"string"==typeof n&&(n=[[t.i,n,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};i(1)(n,o);n.locals&&(t.exports=n.locals)},function(t,e,i){},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var i=e.protocol+"//"+e.host,n=i+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(t,e){var o,s=e.trim().replace(/^"(.*)"$/,(function(t,e){return e})).replace(/^'(.*)'$/,(function(t,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(s)?t:(o=0===s.indexOf("//")?s:0===s.indexOf("/")?i+s:n+s.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")}))}},function(t,e){new function(){this.init=function(){this.generateUI(),this.getOptions(),this.fillOptions(),this.bind([this.c.lock],"click",this.proxy("toggleLock")),this.bind([this.c.show],"click",this.proxy("toggleShow")),this.bind([this.c.close],"click",this.proxy("toggleEntry")),this.bind([this.c.url,this.c.position.x,this.c.position.y,this.c.opacity,this.c.zIndex],"keyup",this.proxy("updateOptions")),this.bind([this.c.position.x,this.c.position.y,this.c.opacity,this.c.zIndex],"keydown",this.proxy("valueChange")),this.bind([this.c.head,this.layer],"mousedown",this.proxy("dragTo")),this.bind([this.c.head,this.layer],"dragstart",(function(t){t.preventDefault()}))},this.generateUI=function(){this.pf=document.createElement("div"),this.pf.className=this.o.namespaces.wrapper,this.pf.innerHTML='<div class="pf_head" data-pf="head"><ul class="pf_layer-control"><li data-pf="show" class="pf_icon __off"></li><li data-pf="lock" class="pf_icon __unlock"></li></ul><h3 data-pf="close" class="pf_title">Toxin</h3></div><div data-pf="entry" class="pf_entry __visible"><form action="#" class="pf_form"><fieldset class="pf_field_wrap"><div class="pf_field"><label>URL</label><input type="text" name="url"/></div></fieldset><fieldset class="pf_field_group"><div class="pf_field __first"><label>X</label><input type="text" name="pos-x"/></div><div class="pf_field"><label>Y</label><input type="text" name="pos-y"/></div></fieldset><fieldset class="pf_field_group"><div class="pf_field __first"><label>Opacity</label><input type="text" name="opacity"/></div><div class="pf_field"><label>z-Index</label><input type="text" name="zindex"/></div></fieldset></form></div>',this.layer=document.createElement("div"),this.layer.className=this.o.namespaces.layer,this.c={head:this.pf.querySelector('[data-pf="head"]'),show:this.pf.querySelector('[data-pf="show"]'),lock:this.pf.querySelector('[data-pf="lock"]'),close:this.pf.querySelector('[data-pf="close"]'),entry:this.pf.querySelector('[data-pf="entry"]'),url:this.pf.querySelector('[name="url"]'),position:{x:this.pf.querySelector('[name="pos-x"]'),y:this.pf.querySelector('[name="pos-y"]')},opacity:this.pf.querySelector('[name="opacity"]'),zIndex:this.pf.querySelector('[name="zindex"]')},document.body.appendChild(this.pf),document.body.appendChild(this.layer)},this.saveOptions=function(){localStorage.Perfetto=!0,localStorage["Perfetto.o.position"]=this.o.position,localStorage["Perfetto.o.close"]=this.o.close,localStorage["Perfetto.o.layer.current"]=this.o.layer.current,localStorage["Perfetto.o.layer.show"]=this.o.layer.show,localStorage["Perfetto.o.layer.lock"]=this.o.layer.lock,localStorage["Perfetto.o.layer.url"]=this.o.layer.url,localStorage["Perfetto.o.layer.position"]=this.o.layer.position,localStorage["Perfetto.o.layer.opacity"]=this.o.layer.opacity,localStorage["Perfetto.o.layer.zIndex"]=this.o.layer.zIndex},this.getOptions=function(){if("true"===localStorage.Perfetto){var t=localStorage["Perfetto.o.position"].split(","),e=localStorage["Perfetto.o.layer.position"].split(",");this.o.position=[parseInt(t[0]),parseInt(t[1])],this.o.close="true"===localStorage["Perfetto.o.close"],this.o.layer.current=parseInt(localStorage["Perfetto.o.layer.current"]),this.o.layer.show="true"===localStorage["Perfetto.o.layer.show"],this.o.layer.lock="true"===localStorage["Perfetto.o.layer.lock"],this.o.layer.url=localStorage["Perfetto.o.layer.url"],this.o.layer.position=[parseInt(e[0]),parseInt(e[1])],this.o.layer.opacity=parseFloat(localStorage["Perfetto.o.layer.opacity"]),this.o.layer.zIndex=parseInt(localStorage["Perfetto.o.layer.zIndex"])}},this.fillOptions=function(){this.pf.style.left="".concat(this.o.position[0],"px"),this.pf.style.top="".concat(this.o.position[1],"px "),this.o.close?this.toggleEntryToHidden():this.toggleEntryToVisible(),this.o.layer.show?this.toggleShowToVisible():this.toggleShowToHidden(),this.o.layer.lock?this.toggleLockToLocked():this.toggleLockToUnlocked(),this.c.url.value=this.o.layer.url,this.changeURL(),this.c.position.x.value=this.o.layer.position[0],this.c.position.y.value=this.o.layer.position[1],this.changePosition(),this.c.opacity.value=this.o.layer.opacity,this.changeOpacity(),this.c.zIndex.value=this.o.layer.zIndex,this.changeZIndex()},this.updateOptions=function(t){switch(t.currentTarget.name){case"url":this.o.layer.url=this.c.url.value,this.changeURL();break;case"pos-x":this.o.layer.position[0]=this.c.position.x.value,this.changePosition();break;case"pos-y":this.o.layer.position[1]=this.c.position.y.value,this.changePosition();break;case"opacity":this.o.layer.opacity=this.c.opacity.value,this.changeOpacity();break;case"zindex":this.o.layer.zIndex=this.c.zIndex.value,this.changeZIndex()}this.saveOptions()},this.valueChange=function(t){if(38==t.keyCode)"opacity"==t.currentTarget.name?((e=10*t.currentTarget.value+1)>10&&(e=10),this.c.opacity.value=e/10):("pos-x"==t.currentTarget.name||"pos-y"==t.currentTarget.name)&&this.o.layer.lock||t.currentTarget.value++;else if(40==t.keyCode){var e;if("opacity"==t.currentTarget.name)(e=10*t.currentTarget.value-1)<0&&(e=0),this.c.opacity.value=e/10;else("pos-x"==t.currentTarget.name||"pos-y"==t.currentTarget.name)&&this.o.layer.lock||t.currentTarget.value--}},this.dragTo=function(t){var e=this,i=t.currentTarget;if(i==this.c.head&&(i=this.pf),i.className!=e.o.namespaces.layer||i.className==e.o.namespaces.layer&&!e.o.layer.lock){var n=function(t){var n=t.pageX-o,r=t.pageY-s;i.style.left="".concat(n,"px"),i.style.top="".concat(r,"px"),i.className==e.o.namespaces.wrapper&&(e.o.position[0]=n,e.o.position[1]=r),i.className==e.o.namespaces.layer&&(e.c.position.x.value=e.o.layer.position[0]=n,e.c.position.y.value=e.o.layer.position[1]=r),e.saveOptions()},o=t.pageX-i.offsetLeft,s=t.pageY-i.offsetTop;e.bind([document],"mousemove",n),e.bind([document],"mouseup",(function t(){e.unbind([document],"mousemove",n),e.unbind([document],"mouseup",t)}))}},this.toggleLock=function(){this.o.layer.lock?(this.toggleLockToUnlocked(),this.o.layer.lock=!1):(this.toggleLockToLocked(),this.o.layer.lock=!0),this.saveOptions()},this.toggleLockToLocked=function(){this.removeClass(this.c.lock,"__unlock"),this.addClass(this.c.lock,"__lock")},this.toggleLockToUnlocked=function(){this.removeClass(this.c.lock,"__lock"),this.addClass(this.c.lock,"__unlock")},this.toggleShow=function(){this.o.layer.show?(this.toggleShowToHidden(),this.o.layer.show=!1):(this.toggleShowToVisible(),this.o.layer.show=!0),this.saveOptions()},this.toggleShowToVisible=function(){this.removeClass(this.c.show,"__off"),this.addClass(this.c.show,"__on"),this.layer.style.display="block"},this.toggleShowToHidden=function(){this.removeClass(this.c.show,"__on"),this.addClass(this.c.show,"__off"),this.layer.style.display="none"},this.toggleEntry=function(){this.o.close?(this.toggleEntryToVisible(),this.o.close=!1):(this.toggleEntryToHidden(),this.o.close=!0),this.saveOptions()},this.toggleEntryToVisible=function(){this.addClass(this.c.entry,"__visible"),this.c.entry.style.display="block"},this.toggleEntryToHidden=function(){this.removeClass(this.c.entry,"__visible"),this.c.entry.style.display="none"},this.changeURL=function(){this.layer.innerHTML='<img src="'.concat(this.o.layer.url,'"/>')},this.changePosition=function(){this.layer.style.left="".concat(this.o.layer.position[0],"px"),this.layer.style.top="".concat(this.o.layer.position[1],"px")},this.changeOpacity=function(){this.layer.style.opacity=this.o.layer.opacity},this.changeZIndex=function(){this.layer.style.zIndex=this.o.layer.zIndex},this.hasClass=function(t,e){return new RegExp(" ".concat(e," ")).test(" ".concat(t.className," "))},this.addClass=function(t,e){this.hasClass(t,e)||(t.className+=" ".concat(e))},this.removeClass=function(t,e){var i=" ".concat(t.className.replace(/[\t\r\n]/g," ")," ");if(this.hasClass(t,e)){for(;i.indexOf(" ".concat(e," "))>=0;)i=i.replace(" ".concat(e," ")," ");t.className=i.replace(/^\s+|\s+$/g,"")}},this.bind=function(t,e,i){for(var n=0;n<t.length;n++)t[n].addEventListener?t[n].addEventListener(e,i):t[n].attachEvent("on".concat(e),i)},this.unbind=function(t,e,i){for(var n=0;n<t.length;n++)t[n].removeEventListener?t[n].removeEventListener(e,i):t[n].detachEvent("on".concat(e),i)},this.proxy=function(t,e,i){return i=i||this,e=e||[],"string"==typeof t&&(t=i[t]),function(){for(var n=e.slice(),o=0;o<arguments.length;o++)void 0!==n[o]&&null!==n[o]||(n[o]=arguments[o]);return t.apply(i,n)}},this.o={namespaces:{wrapper:"pf",layer:"pf_layer"},position:[15,15],close:!1,layer:{current:0,show:!0,lock:!1,url:"/perfetto/layers/index.jpg",position:[0,0],opacity:.5,zIndex:1e3}},this.init()}},function(t,e,i){"use strict";function n(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}i.r(e);var o=function(){function t(e,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=e,this.getElement(),this.handlersBind(),this.checkValue(),this.update=i}var e,i,o;return e=t,(i=[{key:"getElement",value:function(){var t=this;this.option=this.items.querySelector(".dropdown-counters__controls"),this.input=this.items.querySelector(".dropdown-counters__value"),this.max=Number(this.input.max),this.min=Number(this.input.min),this.value=Number(this.input.value),this.plusAll=this.items.querySelectorAll(".dropdown-counters__plus"),this.plusAll.forEach((function(e){t.plusButton=e})),this.minusAll=this.items.querySelectorAll(".dropdown-counters__minus"),this.minusAll.forEach((function(e){t.minusButton=e}))}},{key:"handlersBind",value:function(){this.handlerPlus=this.handlerPlus.bind(this),this.plusButton.addEventListener("click",this.handlerPlus),this.handlerMinus=this.handlerMinus.bind(this),this.minusButton.addEventListener("click",this.handlerMinus)}},{key:"handlerPlus",value:function(){this.upValue(this.value+1)}},{key:"handlerMinus",value:function(){this.upValue(this.value-1)}},{key:"upValue",value:function(t){t<=this.max&&t>=this.min?this.value=t:0===t&&(this.value=this.min),this.updateValue(),this.checkValue(),this.update()}},{key:"updateValue",value:function(){this.input.value=this.value}},{key:"checkValue",value:function(){this.value===this.min?this.deactivateMinus():this.activateMinus(),this.value===this.max?this.deactivatePlus():this.activatePlus()}},{key:"isMin",value:function(){return this.value===this.min}},{key:"isZerro",value:function(){return 0===this.value}},{key:"getValue",value:function(){return this.value}},{key:"activatePlus",value:function(){this.plusButton.classList.contains("dropdown-counters__plus_disabled")&&(this.plusButton.classList.remove("dropdown-counters__plus_disabled"),this.plusButton.removeAttribute("disabled"))}},{key:"deactivatePlus",value:function(){this.plusButton.classList.add("dropdown-counters__plus_disabled"),this.plusButton.setAttribute("disabled","true")}},{key:"activateMinus",value:function(){this.minusButton.classList.contains("dropdown-counters__minus_disabled")&&this.minusButton.classList.remove("dropdown-counters__minus_disabled")}},{key:"deactivateMinus",value:function(){this.minusButton.classList.add("dropdown-counters__minus_disabled")}}])&&n(e.prototype,i),o&&n(e,o),t}();function s(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);"Object"===i&&t.constructor&&(i=t.constructor.name);if("Map"===i||"Set"===i)return Array.from(t);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return r(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}function a(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var l=function(){function t(e){var i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.dropdown=e,this.findElement(),this.handlersBind(),this.defaultSum(),this.controls=s(this.values).map((function(t){return new o(t,(function(){return i.update()}))})),this.update()}var e,i,n;return e=t,(i=[{key:"findElement",value:function(){this.menu=this.dropdown.querySelector(".dropdown__menu"),this.toggle=this.dropdown.querySelector(".dropdown__section"),this.title=this.dropdown.querySelector(".dropdown__title"),this.isGuests=this.dropdown.classList.contains("dropdown_guest"),this.defaultTitle=this.dropdown.dataset.default||"",this.values=this.dropdown.querySelectorAll(".dropdown-counters"),this.buttonClear=this.dropdown.querySelector(".dropdown__button_clear")||void 0,this.buttonUse=this.dropdown.querySelector(".dropdown__button_use")||void 0}},{key:"handlersBind",value:function(){this.handlerMenu=this.handlerMenu.bind(this),this.toggle.addEventListener("click",this.handlerMenu),this.handlerDocument=this.handlerDocument.bind(this),document.addEventListener("click",this.handlerDocument),this.buttonUse&&(this.handlerUse=this.handlerUse.bind(this)),this.buttonUse.addEventListener("click",this.handlerUse),this.buttonClear&&(this.handlerClear=this.handlerClear.bind(this)),this.buttonClear.addEventListener("click",this.handlerClear)}},{key:"handlerMenu",value:function(){this.menu.classList.toggle("dropdown_active"),this.title.classList.toggle("title-active")}},{key:"handlerDocument",value:function(t){t.target.closest(".dropdown")!==this.dropdown&&this.closeDropdown()}},{key:"closeDropdown",value:function(){this.menu.classList.contains("dropdown_active")&&this.menu.classList.remove("dropdown_active")}},{key:"handlerUse",value:function(t){0!==this.sumGuests&&(t.preventDefault(),this.closeDropdown())}},{key:"handlerClear",value:function(t){t.preventDefault(),this.controls.forEach((function(t){t.upValue(0)}))}},{key:"update",value:function(){this.updateTitle(),this.checkAdultButtonUse()}},{key:"checkButtonClear",value:function(){!0==!this.controls.map((function(t){return t.isMin()})).includes(!1)?this.hiddenClearButton():this.visibleClearButton()}},{key:"checkButtonUse",value:function(){!0==!this.controls.map((function(t){return t.isZerro()})).includes(!1)?this.hiddenButtonUse():this.visibleButtonUse()}},{key:"checkAdultButtonUse",value:function(){0===this.sumAdult&&this.sumBabies>0&&this.hiddenButtonUse()}},{key:"hiddenClearButton",value:function(){this.buttonClear.style.display="none"}},{key:"visibleClearButton",value:function(){this.buttonClear.style.display="block"}},{key:"hiddenButtonUse",value:function(){this.buttonUse.style.display="none"}},{key:"visibleButtonUse",value:function(){this.buttonUse.style.display="block"}},{key:"formDeclension",value:function(t,e){var i=(t=Math.abs(t)%100)%10;return t>10&&t<20?e[2]:i>1&&i<5?e[1]:1===i?e[0]:e[2]}},{key:"defaultSum",value:function(){var t=this,e=0;this.values.forEach((function(i){t.AllInput=i.querySelectorAll(".dropdown-counters__value"),t.AllInput.forEach((function(t){e+=Number(t.value)}))})),this.DefaultSum=e}},{key:"updateTitle",value:function(){!0===this.isGuests?this.updateDropdownGuests():this.updateDropdownRoom()}},{key:"updateDropdownGuests",value:function(){var t=this,e=this.controls.map((function(t){return t.getValue()})),i=[e[0],e[1],e[2]],n=i[0],o=i[1],s=i[2];if(this.sumGuests=n+o+s,this.sumAdult=n+o,this.sumBabies=s,n+o<10?this.controls.map((function(t){return t.activatePlus()})):(this.sumAdult=10,this.length=this.controls.length,this.controls.forEach((function(e,i){i!==t.length-1&&e.deactivatePlus()}))),10===s){var r=this.controls.length;this.controls.forEach((function(t,e){e===r-1&&t.deactivatePlus()}))}n>0||o>0?(this.checkButtonClear(),this.checkButtonUse()):this.checkButtonClear(),this.messageGuests=this.formDeclension(this.sumAdult,["гость","гостя","гостей"]),this.messageNewborns=this.formDeclension(this.sumBabies,["младенец","младенца","младенцев"]),0===this.sumBabies&&0===this.sumAdult?this.title.innerHTML="Сколько гостей":0!==this.sumAdult&&0===this.sumBabies?this.title.innerHTML="".concat(this.sumAdult," ").concat(this.messageGuests):this.title.innerHTML="".concat(this.sumAdult," ").concat(this.messageGuests,", ").concat(this.sumBabies," ").concat(this.messageNewborns)}},{key:"updateDropdownRoom",value:function(){var t=this.controls.map((function(t){return t.getValue()})),e=[t[0],t[1],t[2]],i=e[0],n=e[1],o=e[2],s=i+n+o;s!==this.DefaultSum&&(this.checkButtonClear(),this.checkButtonUse());var r=this.formDeclension(i,["спальня","спальни","спален"]),a=this.formDeclension(n,["кровать","кровати","кроватей"]),l=this.formDeclension(o,["ванная","ванные","ванных"]);this.title.innerHTML=s>0&&o>0?"".concat(i," ").concat(r,", ").concat(n," ").concat(a,",").concat(o," ").concat(l)+"...":"".concat(i," ").concat(r,", ").concat(n," ").concat(a,"...")}}])&&a(e.prototype,i),n&&a(e,n),t}();window.addEventListener("load",(function(){document.querySelectorAll(".dropdown").forEach((function(t){return new l(t)}))}))},function(t,e,i){"use strict";document.querySelectorAll(".header-main").forEach((function(t){var e=t.querySelector(".burger__item"),i=t.querySelector(".header-main__nav");e.addEventListener("click",(function(){e.classList.toggle("active"),i.classList.toggle("header-main__open-menu")}))}))},,,,,,,,,,,,,,,,,,,,,,function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),i(6),i(2),i(30),i(5),i(7),i(32)},function(t,e,i){var n=i(31);"string"==typeof n&&(n=[[t.i,n,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};i(1)(n,o);n.locals&&(t.exports=n.locals)},function(t,e,i){},function(t,e,i){"use strict";var n=document.querySelector(".button_signIn"),o=document.querySelector(".button_regCreate"),s=document.querySelector(".registration-container__signin"),r=document.querySelector(".registration-container__reg"),a=document.querySelector(".registration-container");null==n||n.addEventListener("click",(function(){null==s||s.classList.toggle("registration-container_active"),null==r||r.classList.remove("registration-container_active"),window.history.pushState({param:"Value"},"","signin.html"),null==a||a.classList.remove("registration-container_reg-bg"),null==a||a.classList.add("registration-container_signIn-bg")})),null==o||o.addEventListener("click",(function(){null==r||r.classList.toggle("registration-container_active"),null==s||s.classList.remove("registration-container_active"),window.history.pushState({param:"Value"},"","registration.html"),null==a||a.classList.add("registration-container_reg-bg"),null==a||a.classList.remove("registration-container_signIn-bg")}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3NzL21haW4uc2Nzcz9hOTgzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vcGl4ZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Jsb2Nrcy9kcm9wZG93bi1jb3VudGVycy9kcm9wZG93bi1jb3VudGVycy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYmxvY2tzL2Ryb3Bkb3duL2Ryb3Bkb3duLmpzIiwid2VicGFjazovLy8uL3NyYy9ibG9ja3MvZHJvcGRvd24vZHJvcGRvd24taW5pdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYmxvY2tzL2J1cmdlci9idXJnZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uc2Nzcz83YzJmIiwid2VicGFjazovLy8uL3NyYy9ibG9ja3MvbG9naWMtcm9vbS1yZWcvbG9naWMtcm9vbS1yZWcudHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJmbiIsIm1lbW8iLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFsbCIsImF0b2IiLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJnZXRUYXJnZXQiLCJ0YXJnZXQiLCJwYXJlbnQiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0RWxlbWVudCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwib3B0aW9ucyIsImxlbmd0aCIsIml0ZW0iLCJkb21TdHlsZSIsImlkIiwicmVmcyIsImoiLCJwYXJ0cyIsInB1c2giLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsImxpc3QiLCJuZXdTdHlsZXMiLCJiYXNlIiwicGFydCIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJpbnNlcnRJbnRvIiwiRXJyb3IiLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInVuZGVmaW5lZCIsImF0dHJzIiwidHlwZSIsIm5vbmNlIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsImVsIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJvYmoiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJ0cmFuc2Zvcm0iLCJkZWZhdWx0Iiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwiYnRvYSIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsInVwZGF0ZUxpbmsiLCJocmVmIiwiYXBwbHlUb1RhZyIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwiaW5kZXgiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJibG9iIiwib2xkU3JjIiwiY29udGVudCIsImxvY2FscyIsImxvY2F0aW9uIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsInJlcGxhY2UiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwidHJpbSIsIiQxIiwidGVzdCIsImluaXQiLCJnZW5lcmF0ZVVJIiwiZ2V0T3B0aW9ucyIsImZpbGxPcHRpb25zIiwibG9jayIsInByb3h5Iiwic2hvdyIsImNsb3NlIiwidXJsIiwicG9zaXRpb24iLCJ4IiwieSIsIm9wYWNpdHkiLCJ6SW5kZXgiLCJsYXllciIsInByZXZlbnREZWZhdWx0IiwicGYiLCJjbGFzc05hbWUiLCJuYW1lc3BhY2VzIiwid3JhcHBlciIsImlubmVySFRNTCIsImVudHJ5IiwiYm9keSIsInNhdmVPcHRpb25zIiwibG9jYWxTdG9yYWdlIiwiUGVyZmV0dG8iLCJjdXJyZW50IiwicGZQb3MiLCJzcGxpdCIsImxheWVyUG9zIiwicGFyc2VJbnQiLCJwYXJzZUZsb2F0IiwibGVmdCIsInRvcCIsInRvZ2dsZUVudHJ5VG9IaWRkZW4iLCJ0b2dnbGVFbnRyeVRvVmlzaWJsZSIsInRvZ2dsZVNob3dUb1Zpc2libGUiLCJ0b2dnbGVTaG93VG9IaWRkZW4iLCJ0b2dnbGVMb2NrVG9Mb2NrZWQiLCJ0b2dnbGVMb2NrVG9VbmxvY2tlZCIsImNoYW5nZVVSTCIsImNoYW5nZVBvc2l0aW9uIiwiY2hhbmdlT3BhY2l0eSIsImNoYW5nZVpJbmRleCIsInVwZGF0ZU9wdGlvbnMiLCJjdXJyZW50VGFyZ2V0IiwidmFsdWVDaGFuZ2UiLCJrZXlDb2RlIiwiZHJhZ1RvIiwic2VsZiIsIm1vdmVBdCIsInBhZ2VYIiwic2hpZnRYIiwicGFnZVkiLCJzaGlmdFkiLCJvZmZzZXRMZWZ0Iiwib2Zmc2V0VG9wIiwiY2xlYXJFdmVudCIsInVuYmluZCIsInRvZ2dsZUxvY2siLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwidG9nZ2xlU2hvdyIsImRpc3BsYXkiLCJ0b2dnbGVFbnRyeSIsImhhc0NsYXNzIiwiZWxlbSIsIlJlZ0V4cCIsIm5ld0NsYXNzIiwiZXZlbnQiLCJjYWxsYmFjayIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudCIsImZ1bmMiLCJhcmdzIiwiY29udGV4dCIsImEiLCJzbGljZSIsIkRyb3Bkb3duQ29udHJvbCIsImVsZW1lbnQiLCJpdGVtcyIsImhhbmRsZXJzQmluZCIsImNoZWNrVmFsdWUiLCJvcHRpb24iLCJpbnB1dCIsIm1heCIsIk51bWJlciIsIm1pbiIsInBsdXNBbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwicGx1cyIsInBsdXNCdXR0b24iLCJtaW51c0FsbCIsIm1pbnVzIiwibWludXNCdXR0b24iLCJoYW5kbGVyUGx1cyIsImhhbmRsZXJNaW51cyIsInVwVmFsdWUiLCJ2YWwiLCJ1cGRhdGVWYWx1ZSIsImRlYWN0aXZhdGVNaW51cyIsImFjdGl2YXRlTWludXMiLCJkZWFjdGl2YXRlUGx1cyIsImFjdGl2YXRlUGx1cyIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicmVtb3ZlQXR0cmlidXRlIiwiYWRkIiwiRHJvcGRvd24iLCJkcm9wZG93biIsImZpbmRFbGVtZW50IiwiZGVmYXVsdFN1bSIsImNvbnRyb2xzIiwidmFsdWVzIiwibWFwIiwibWVudSIsInRvZ2dsZSIsInRpdGxlIiwiaXNHdWVzdHMiLCJkZWZhdWx0VGl0bGUiLCJkYXRhc2V0IiwiYnV0dG9uQ2xlYXIiLCJidXR0b25Vc2UiLCJoYW5kbGVyTWVudSIsImhhbmRsZXJEb2N1bWVudCIsImhhbmRsZXJVc2UiLCJoYW5kbGVyQ2xlYXIiLCJjbG9zZXN0IiwiY2xvc2VEcm9wZG93biIsInN1bUd1ZXN0cyIsInVwZGF0ZVRpdGxlIiwiY2hlY2tBZHVsdEJ1dHRvblVzZSIsImlzTWluIiwiaW5jbHVkZXMiLCJoaWRkZW5DbGVhckJ1dHRvbiIsInZpc2libGVDbGVhckJ1dHRvbiIsImlzWmVycm8iLCJoaWRkZW5CdXR0b25Vc2UiLCJ2aXNpYmxlQnV0dG9uVXNlIiwic3VtQWR1bHQiLCJzdW1CYWJpZXMiLCJudW1iZXIiLCJmb3JtIiwibjEiLCJNYXRoIiwiYWJzIiwiRGVmYXVsdFN1bSIsIkFsbElucHV0IiwidXBkYXRlRHJvcGRvd25HdWVzdHMiLCJ1cGRhdGVEcm9wZG93blJvb20iLCJhcnJheSIsImdldFZhbHVlIiwiYWR1bHRzIiwiY2hpbGRyZW4iLCJiYWJpZXMiLCJjaGVja0J1dHRvbkNsZWFyIiwiY2hlY2tCdXR0b25Vc2UiLCJtZXNzYWdlR3Vlc3RzIiwiZm9ybURlY2xlbnNpb24iLCJtZXNzYWdlTmV3Ym9ybnMiLCJCZWRyb29tIiwiQmVkIiwiQmF0aHJvb20iLCJzdW0iLCJtZXNzYWdlQmVkcm9vbSIsIm1lc3NhZ2VCZWQiLCJtZXNzYWdlQmF0aHJvb20iLCJidXJnZXIiLCJidXR0b24iLCJuYXZiYXIiLCJzaWduSW4iLCJjcmVhdGVBY291bnQiLCJmb3JtU2lnbkluIiwiZm9ybUNyZWF0ZSIsImhpc3RvcnkiLCJwdXNoU3RhdGUiLCJwYXJhbSJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGlCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJQUFJSSxFQUFLWCxPQUFPWSxPQUFPLE1BR3ZCLEdBRkExQixFQUFvQmtCLEVBQUVPLEdBQ3RCWCxPQUFPQyxlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFBVEYsRUFBbUIsSUFBSSxJQUFJTSxLQUFPTixFQUFPckIsRUFBb0JVLEVBQUVlLEVBQUlFLEVBQUssU0FBU0EsR0FBTyxPQUFPTixFQUFNTSxJQUFRQyxLQUFLLEtBQU1ELElBQzlJLE9BQU9GLEdBSVJ6QixFQUFvQjZCLEVBQUksU0FBUzFCLEdBQ2hDLElBQUlTLEVBQVNULEdBQVVBLEVBQU9xQixXQUM3QixXQUF3QixPQUFPckIsRUFBZ0IsU0FDL0MsV0FBOEIsT0FBT0EsR0FFdEMsT0FEQUgsRUFBb0JVLEVBQUVFLEVBQVEsSUFBS0EsR0FDNUJBLEdBSVJaLEVBQW9CYSxFQUFJLFNBQVNpQixFQUFRQyxHQUFZLE9BQU9qQixPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUt1QixFQUFRQyxJQUd6Ry9CLEVBQW9Ca0MsRUFBSSxHQUlqQmxDLEVBQW9CQSxFQUFvQm1DLEVBQUksSSxtQkM3RXJELElBRXdCQyxFQUNuQkMsRUFIREMsRUFBYyxHQVdkQyxHQVRvQkgsRUFTRixXQU1yQixPQUFPSSxRQUFVQyxVQUFZQSxTQUFTQyxNQUFRRixPQUFPRyxNQVo5QyxXQUVOLFlBRG9CLElBQVROLElBQXNCQSxFQUFPRCxFQUFHUSxNQUFNQyxLQUFNQyxZQUNoRFQsSUFhTFUsRUFBWSxTQUFVQyxFQUFRQyxHQUNoQyxPQUFJQSxFQUNLQSxFQUFPQyxjQUFjRixHQUV2QlAsU0FBU1MsY0FBY0YsSUFHNUJHLEVBQWEsU0FBV2YsR0FDM0IsSUFBSUMsRUFBTyxHQUVYLE9BQU8sU0FBU1csRUFBUUMsR0FNVCxHQUFzQixtQkFBWEQsRUFDSCxPQUFPQSxJQUVmLFFBQTRCLElBQWpCWCxFQUFLVyxHQUF5QixDQUN0RCxJQUFJSSxFQUFjTCxFQUFVeEMsS0FBS3NDLEtBQU1HLEVBQVFDLEdBRS9DLEdBQUlULE9BQU9hLG1CQUFxQkQsYUFBdUJaLE9BQU9hLGtCQUM3RCxJQUdDRCxFQUFjQSxFQUFZRSxnQkFBZ0JDLEtBQ3pDLE1BQU1DLEdBQ1BKLEVBQWMsS0FHaEJmLEVBQUtXLEdBQVVJLEVBRWhCLE9BQU9mLEVBQUtXLElBMUJHLEdBOEJiUyxFQUFZLEtBQ1pDLEVBQW1CLEVBQ25CQyxFQUFzQixHQUV0QkMsRUFBVSxFQUFRLEdBcUR0QixTQUFTQyxFQUFnQkMsRUFBUUMsR0FDaEMsSUFBSyxJQUFJM0QsRUFBSSxFQUFHQSxFQUFJMEQsRUFBT0UsT0FBUTVELElBQUssQ0FDdkMsSUFBSTZELEVBQU9ILEVBQU8xRCxHQUNkOEQsRUFBVzVCLEVBQVkyQixFQUFLRSxJQUVoQyxHQUFHRCxFQUFVLENBQ1pBLEVBQVNFLE9BRVQsSUFBSSxJQUFJQyxFQUFJLEVBQUdBLEVBQUlILEVBQVNJLE1BQU1OLE9BQVFLLElBQ3pDSCxFQUFTSSxNQUFNRCxHQUFHSixFQUFLSyxNQUFNRCxJQUc5QixLQUFNQSxFQUFJSixFQUFLSyxNQUFNTixPQUFRSyxJQUM1QkgsRUFBU0ksTUFBTUMsS0FBS0MsRUFBU1AsRUFBS0ssTUFBTUQsR0FBSU4sUUFFdkMsQ0FDTixJQUFJTyxFQUFRLEdBRVosSUFBUUQsRUFBSSxFQUFHQSxFQUFJSixFQUFLSyxNQUFNTixPQUFRSyxJQUNyQ0MsRUFBTUMsS0FBS0MsRUFBU1AsRUFBS0ssTUFBTUQsR0FBSU4sSUFHcEN6QixFQUFZMkIsRUFBS0UsSUFBTSxDQUFDQSxHQUFJRixFQUFLRSxHQUFJQyxLQUFNLEVBQUdFLE1BQU9BLEtBS3hELFNBQVNHLEVBQWNDLEVBQU1YLEdBSTVCLElBSEEsSUFBSUQsRUFBUyxHQUNUYSxFQUFZLEdBRVB2RSxFQUFJLEVBQUdBLEVBQUlzRSxFQUFLVixPQUFRNUQsSUFBSyxDQUNyQyxJQUFJNkQsRUFBT1MsRUFBS3RFLEdBQ1orRCxFQUFLSixFQUFRYSxLQUFPWCxFQUFLLEdBQUtGLEVBQVFhLEtBQU9YLEVBQUssR0FJbERZLEVBQU8sQ0FBQ0MsSUFIRmIsRUFBSyxHQUdPYyxNQUZWZCxFQUFLLEdBRW1CZSxVQURwQmYsRUFBSyxJQUdqQlUsRUFBVVIsR0FDVFEsRUFBVVIsR0FBSUcsTUFBTUMsS0FBS00sR0FEWGYsRUFBT1MsS0FBS0ksRUFBVVIsR0FBTSxDQUFDQSxHQUFJQSxFQUFJRyxNQUFPLENBQUNPLEtBSWpFLE9BQU9mLEVBR1IsU0FBU21CLEVBQW9CbEIsRUFBU21CLEdBQ3JDLElBQUlsQyxFQUFTRyxFQUFXWSxFQUFRb0IsWUFFaEMsSUFBS25DLEVBQ0osTUFBTSxJQUFJb0MsTUFBTSwrR0FHakIsSUFBSUMsRUFBZ0MxQixFQUFvQkEsRUFBb0JLLE9BQVMsR0FFckYsR0FBeUIsUUFBckJELEVBQVF1QixTQUNORCxFQUVNQSxFQUE4QkUsWUFDeEN2QyxFQUFPd0MsYUFBYU4sRUFBT0csRUFBOEJFLGFBRXpEdkMsRUFBT3lDLFlBQVlQLEdBSm5CbEMsRUFBT3dDLGFBQWFOLEVBQU9sQyxFQUFPMEMsWUFNbkMvQixFQUFvQlksS0FBS1csUUFDbkIsR0FBeUIsV0FBckJuQixFQUFRdUIsU0FDbEJ0QyxFQUFPeUMsWUFBWVAsT0FDYixJQUFnQyxpQkFBckJuQixFQUFRdUIsV0FBeUJ2QixFQUFRdUIsU0FBU0ssT0FJbkUsTUFBTSxJQUFJUCxNQUFNLDhMQUhoQixJQUFJRyxFQUFjcEMsRUFBV1ksRUFBUXVCLFNBQVNLLE9BQVEzQyxHQUN0REEsRUFBT3dDLGFBQWFOLEVBQU9LLElBTTdCLFNBQVNLLEVBQW9CVixHQUM1QixHQUF5QixPQUFyQkEsRUFBTVcsV0FBcUIsT0FBTyxFQUN0Q1gsRUFBTVcsV0FBV0MsWUFBWVosR0FFN0IsSUFBSWEsRUFBTXBDLEVBQW9CcUMsUUFBUWQsR0FDbkNhLEdBQU8sR0FDVHBDLEVBQW9Cc0MsT0FBT0YsRUFBSyxHQUlsQyxTQUFTRyxFQUFvQm5DLEdBQzVCLElBQUltQixFQUFRekMsU0FBUzBELGNBQWMsU0FNbkMsUUFKMEJDLElBQXZCckMsRUFBUXNDLE1BQU1DLE9BQ2hCdkMsRUFBUXNDLE1BQU1DLEtBQU8saUJBR0tGLElBQXhCckMsRUFBUXNDLE1BQU1FLE1BQXFCLENBQ3JDLElBQUlBLEVBZ0NOLFdBQ0ssRUFJSixPQUFPLEtBckNNQyxHQUNSRCxJQUNIeEMsRUFBUXNDLE1BQU1FLE1BQVFBLEdBT3hCLE9BSEFFLEVBQVN2QixFQUFPbkIsRUFBUXNDLE9BQ3hCcEIsRUFBbUJsQixFQUFTbUIsR0FFckJBLEVBaUJSLFNBQVN1QixFQUFVQyxFQUFJTCxHQUN0QnZGLE9BQU82RixLQUFLTixHQUFPTyxTQUFRLFNBQVVqRixHQUNwQytFLEVBQUdHLGFBQWFsRixFQUFLMEUsRUFBTTFFLE9BWTdCLFNBQVM2QyxFQUFVc0MsRUFBSy9DLEdBQ3ZCLElBQUltQixFQUFPNkIsRUFBUUMsRUFBUUMsRUFHM0IsR0FBSWxELEVBQVFtRCxXQUFhSixFQUFJaEMsSUFBSyxDQUs5QixLQUpBbUMsRUFBc0MsbUJBQXRCbEQsRUFBUW1ELFVBQ3hCbkQsRUFBUW1ELFVBQVVKLEVBQUloQyxLQUN0QmYsRUFBUW1ELFVBQVVDLFFBQVFMLEVBQUloQyxNQVM3QixPQUFPLGFBSlBnQyxFQUFJaEMsSUFBTW1DLEVBVWYsR0FBSWxELEVBQVFOLFVBQVcsQ0FDdEIsSUFBSTJELEVBQWExRCxJQUVqQndCLEVBQVF6QixJQUFjQSxFQUFZeUMsRUFBbUJuQyxJQUVyRGdELEVBQVNNLEVBQW9CekYsS0FBSyxLQUFNc0QsRUFBT2tDLEdBQVksR0FDM0RKLEVBQVNLLEVBQW9CekYsS0FBSyxLQUFNc0QsRUFBT2tDLEdBQVksUUFHM0ROLEVBQUk5QixXQUNXLG1CQUFSc0MsS0FDd0IsbUJBQXhCQSxJQUFJQyxpQkFDb0IsbUJBQXhCRCxJQUFJRSxpQkFDSyxtQkFBVEMsTUFDUyxtQkFBVEMsTUFFUHhDLEVBbEVGLFNBQTRCbkIsR0FDM0IsSUFBSTRELEVBQU9sRixTQUFTMEQsY0FBYyxRQVVsQyxZQVIwQkMsSUFBdkJyQyxFQUFRc0MsTUFBTUMsT0FDaEJ2QyxFQUFRc0MsTUFBTUMsS0FBTyxZQUV0QnZDLEVBQVFzQyxNQUFNdUIsSUFBTSxhQUVwQm5CLEVBQVNrQixFQUFNNUQsRUFBUXNDLE9BQ3ZCcEIsRUFBbUJsQixFQUFTNEQsR0FFckJBLEVBdURFRSxDQUFrQjlELEdBQzFCZ0QsRUFBU2UsRUFBV2xHLEtBQUssS0FBTXNELEVBQU9uQixHQUN0Q2lELEVBQVMsV0FDUnBCLEVBQW1CVixHQUVoQkEsRUFBTTZDLE1BQU1ULElBQUlFLGdCQUFnQnRDLEVBQU02QyxTQUcxQzdDLEVBQVFnQixFQUFtQm5DLEdBQzNCZ0QsRUFBU2lCLEVBQVdwRyxLQUFLLEtBQU1zRCxHQUMvQjhCLEVBQVMsV0FDUnBCLEVBQW1CVixLQU1yQixPQUZBNkIsRUFBT0QsR0FFQSxTQUFzQm1CLEdBQzVCLEdBQUlBLEVBQVEsQ0FDWCxHQUNDQSxFQUFPbkQsTUFBUWdDLEVBQUloQyxLQUNuQm1ELEVBQU9sRCxRQUFVK0IsRUFBSS9CLE9BQ3JCa0QsRUFBT2pELFlBQWM4QixFQUFJOUIsVUFFekIsT0FHRCtCLEVBQU9ELEVBQU1tQixRQUViakIsS0ExUEg3RyxFQUFPRCxRQUFVLFNBQVN3RSxFQUFNWCxHQUMvQixHQUFxQixvQkFBVm1FLE9BQXlCQSxPQUNYLGlCQUFiekYsU0FBdUIsTUFBTSxJQUFJMkMsTUFBTSxpRUFHbkRyQixFQUFVQSxHQUFXLElBRWJzQyxNQUFpQyxpQkFBbEJ0QyxFQUFRc0MsTUFBcUJ0QyxFQUFRc0MsTUFBUSxHQUkvRHRDLEVBQVFOLFdBQTBDLGtCQUF0Qk0sRUFBUU4sWUFBeUJNLEVBQVFOLFVBQVlsQixLQUcxRXdCLEVBQVFvQixhQUFZcEIsRUFBUW9CLFdBQWEsUUFHaERwQixFQUFRdUIsV0FBVXZCLEVBQVF1QixTQUFXLFVBRTFDLElBQUl4QixFQUFTVyxFQUFhQyxFQUFNWCxHQUloQyxPQUZBRixFQUFlQyxFQUFRQyxHQUVoQixTQUFpQm9FLEdBR3ZCLElBRkEsSUFBSUMsRUFBWSxHQUVQaEksRUFBSSxFQUFHQSxFQUFJMEQsRUFBT0UsT0FBUTVELElBQUssQ0FDdkMsSUFBSTZELEVBQU9ILEVBQU8xRCxJQUNkOEQsRUFBVzVCLEVBQVkyQixFQUFLRSxLQUV2QkMsT0FDVGdFLEVBQVU3RCxLQUFLTCxHQUdiaUUsR0FFRnRFLEVBRGdCWSxFQUFhMEQsRUFBU3BFLEdBQ1pBLEdBRzNCLElBQVMzRCxFQUFJLEVBQUdBLEVBQUlnSSxFQUFVcEUsT0FBUTVELElBQUssQ0FDMUMsSUFBSThELEVBRUosR0FBcUIsS0FGakJBLEVBQVdrRSxFQUFVaEksSUFFYmdFLEtBQVksQ0FDdkIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlILEVBQVNJLE1BQU1OLE9BQVFLLElBQUtILEVBQVNJLE1BQU1ELFlBRXhEL0IsRUFBWTRCLEVBQVNDLFFBa05oQyxJQUNLa0UsRUFEREMsR0FDQ0QsRUFBWSxHQUVULFNBQVVFLEVBQU9DLEdBR3ZCLE9BRkFILEVBQVVFLEdBQVNDLEVBRVpILEVBQVVJLE9BQU9DLFNBQVNDLEtBQUssUUFJeEMsU0FBU3RCLEVBQXFCbkMsRUFBT3FELEVBQU92QixFQUFRRixHQUNuRCxJQUFJaEMsRUFBTWtDLEVBQVMsR0FBS0YsRUFBSWhDLElBRTVCLEdBQUlJLEVBQU0wRCxXQUNUMUQsRUFBTTBELFdBQVdDLFFBQVVQLEVBQVlDLEVBQU96RCxPQUN4QyxDQUNOLElBQUlnRSxFQUFVckcsU0FBU3NHLGVBQWVqRSxHQUNsQ2tFLEVBQWE5RCxFQUFNOEQsV0FFbkJBLEVBQVdULElBQVFyRCxFQUFNWSxZQUFZa0QsRUFBV1QsSUFFaERTLEVBQVdoRixPQUNka0IsRUFBTU0sYUFBYXNELEVBQVNFLEVBQVdULElBRXZDckQsRUFBTU8sWUFBWXFELElBS3JCLFNBQVNkLEVBQVk5QyxFQUFPNEIsR0FDM0IsSUFBSWhDLEVBQU1nQyxFQUFJaEMsSUFDVkMsRUFBUStCLEVBQUkvQixNQU1oQixHQUpHQSxHQUNGRyxFQUFNMkIsYUFBYSxRQUFTOUIsR0FHMUJHLEVBQU0wRCxXQUNSMUQsRUFBTTBELFdBQVdDLFFBQVUvRCxNQUNyQixDQUNOLEtBQU1JLEVBQU1RLFlBQ1hSLEVBQU1ZLFlBQVlaLEVBQU1RLFlBR3pCUixFQUFNTyxZQUFZaEQsU0FBU3NHLGVBQWVqRSxLQUk1QyxTQUFTZ0QsRUFBWUgsRUFBTTVELEVBQVMrQyxHQUNuQyxJQUFJaEMsRUFBTWdDLEVBQUloQyxJQUNWRSxFQUFZOEIsRUFBSTlCLFVBUWhCaUUsT0FBZ0Q3QyxJQUFsQ3JDLEVBQVFtRix1QkFBdUNsRSxHQUU3RGpCLEVBQVFtRix1QkFBeUJELEtBQ3BDbkUsRUFBTWxCLEVBQVFrQixJQUdYRSxJQUVIRixHQUFPLHVEQUF5RDRDLEtBQUt5QixTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVV0RSxNQUFnQixPQUdqSSxJQUFJdUUsRUFBTyxJQUFJOUIsS0FBSyxDQUFDM0MsR0FBTSxDQUFFd0IsS0FBTSxhQUUvQmtELEVBQVM3QixFQUFLSSxLQUVsQkosRUFBS0ksS0FBT1QsSUFBSUMsZ0JBQWdCZ0MsR0FFN0JDLEdBQVFsQyxJQUFJRSxnQkFBZ0JnQyxLLGdCQzdZaEMsSUFBSUMsRUFBVSxFQUFRLEdBRUEsaUJBQVpBLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3RKLEVBQU9DLEVBQUlxSixFQUFTLE1BT2hFLElBQUkxRixFQUFVLENBQUMsS0FBTSxFQUVyQixlQVBJbUQsRUFRSixnQkFBcUJkLEdBRVIsRUFBUSxFQUFSLENBQTZEcUQsRUFBUzFGLEdBRWhGMEYsRUFBUUMsU0FBUXZKLEVBQU9ELFFBQVV1SixFQUFRQyxTLGdDQ0g1Q3ZKLEVBQU9ELFFBQVUsU0FBVTRFLEdBRXpCLElBQUk2RSxFQUE2QixvQkFBWG5ILFFBQTBCQSxPQUFPbUgsU0FFdkQsSUFBS0EsRUFDSCxNQUFNLElBQUl2RSxNQUFNLG9DQUluQixJQUFLTixHQUFzQixpQkFBUkEsRUFDakIsT0FBT0EsRUFHUixJQUFJOEUsRUFBVUQsRUFBU0UsU0FBVyxLQUFPRixFQUFTRyxLQUM5Q0MsRUFBYUgsRUFBVUQsRUFBU0ssU0FBU0MsUUFBUSxZQUFhLEtBMkRuRSxPQS9CZW5GLEVBQUltRixRQUFRLHVEQUF1RCxTQUFTQyxFQUFXQyxHQUVyRyxJQVdJQyxFQVhBQyxFQUFrQkYsRUFDcEJHLE9BQ0FMLFFBQVEsWUFBWSxTQUFTcEosRUFBRzBKLEdBQUssT0FBT0EsS0FDNUNOLFFBQVEsWUFBWSxTQUFTcEosRUFBRzBKLEdBQUssT0FBT0EsS0FHOUMsTUFBSSxvREFBb0RDLEtBQUtILEdBQ3BESCxHQVFSRSxFQUZxQyxJQUFsQ0MsRUFBZ0JyRSxRQUFRLE1BRWxCcUUsRUFDa0MsSUFBakNBLEVBQWdCckUsUUFBUSxLQUV6QjRELEVBQVVTLEVBR1ZOLEVBQWFNLEVBQWdCSixRQUFRLFFBQVMsSUFJakQsT0FBU1osS0FBS0MsVUFBVWMsR0FBVSxVLGNDekUxQixJQUFJLFdBQ25CdkgsS0FBSzRILEtBQU8sV0FDVjVILEtBQUs2SCxhQUNMN0gsS0FBSzhILGFBQ0w5SCxLQUFLK0gsY0FFTC9ILEtBQUtqQixLQUFLLENBQUNpQixLQUFLcEMsRUFBRW9LLE1BQU8sUUFBU2hJLEtBQUtpSSxNQUFNLGVBQzdDakksS0FBS2pCLEtBQUssQ0FBQ2lCLEtBQUtwQyxFQUFFc0ssTUFBTyxRQUFTbEksS0FBS2lJLE1BQU0sZUFDN0NqSSxLQUFLakIsS0FBSyxDQUFDaUIsS0FBS3BDLEVBQUV1SyxPQUFRLFFBQVNuSSxLQUFLaUksTUFBTSxnQkFDOUNqSSxLQUFLakIsS0FDSCxDQUNFaUIsS0FBS3BDLEVBQUV3SyxJQUNQcEksS0FBS3BDLEVBQUV5SyxTQUFTQyxFQUNoQnRJLEtBQUtwQyxFQUFFeUssU0FBU0UsRUFDaEJ2SSxLQUFLcEMsRUFBRTRLLFFBQ1B4SSxLQUFLcEMsRUFBRTZLLFFBRVQsUUFDQXpJLEtBQUtpSSxNQUFNLGtCQUViakksS0FBS2pCLEtBQ0gsQ0FDRWlCLEtBQUtwQyxFQUFFeUssU0FBU0MsRUFDaEJ0SSxLQUFLcEMsRUFBRXlLLFNBQVNFLEVBQ2hCdkksS0FBS3BDLEVBQUU0SyxRQUNQeEksS0FBS3BDLEVBQUU2SyxRQUVULFVBQ0F6SSxLQUFLaUksTUFBTSxnQkFHYmpJLEtBQUtqQixLQUFLLENBQUNpQixLQUFLcEMsRUFBRThDLEtBQU1WLEtBQUswSSxPQUFRLFlBQWExSSxLQUFLaUksTUFBTSxXQUM3RGpJLEtBQUtqQixLQUFLLENBQUNpQixLQUFLcEMsRUFBRThDLEtBQU1WLEtBQUswSSxPQUFRLGFBQWEsU0FBQy9ILEdBQVFBLEVBQUVnSSxxQkFHL0QzSSxLQUFLNkgsV0FBYSxXQXVDaEI3SCxLQUFLNEksR0FBS2hKLFNBQVMwRCxjQUFjLE9BQ2pDdEQsS0FBSzRJLEdBQUdDLFVBQVk3SSxLQUFLaEMsRUFBRThLLFdBQVdDLFFBQ3RDL0ksS0FBSzRJLEdBQUdJLFVBeENTLDgxQkEwQ2pCaEosS0FBSzBJLE1BQVE5SSxTQUFTMEQsY0FBYyxPQUNwQ3RELEtBQUswSSxNQUFNRyxVQUFZN0ksS0FBS2hDLEVBQUU4SyxXQUFXSixNQUV6QzFJLEtBQUtwQyxFQUFJLENBQ1A4QyxLQUFNVixLQUFLNEksR0FBR3ZJLGNBQWMsb0JBQzVCNkgsS0FBTWxJLEtBQUs0SSxHQUFHdkksY0FBYyxvQkFDNUIySCxLQUFNaEksS0FBSzRJLEdBQUd2SSxjQUFjLG9CQUM1QjhILE1BQU9uSSxLQUFLNEksR0FBR3ZJLGNBQWMscUJBQzdCNEksTUFBT2pKLEtBQUs0SSxHQUFHdkksY0FBYyxxQkFDN0IrSCxJQUFLcEksS0FBSzRJLEdBQUd2SSxjQUFjLGdCQUMzQmdJLFNBQVUsQ0FDUkMsRUFBR3RJLEtBQUs0SSxHQUFHdkksY0FBYyxrQkFDekJrSSxFQUFHdkksS0FBSzRJLEdBQUd2SSxjQUFjLG1CQUUzQm1JLFFBQVN4SSxLQUFLNEksR0FBR3ZJLGNBQWMsb0JBQy9Cb0ksT0FBUXpJLEtBQUs0SSxHQUFHdkksY0FBYyxvQkFHaENULFNBQVNzSixLQUFLdEcsWUFBWTVDLEtBQUs0SSxJQUMvQmhKLFNBQVNzSixLQUFLdEcsWUFBWTVDLEtBQUswSSxRQUdqQzFJLEtBQUttSixZQUFjLFdBQ2pCQyxhQUFhQyxVQUFXLEVBQ3hCRCxhQUFhLHVCQUF5QnBKLEtBQUtoQyxFQUFFcUssU0FDN0NlLGFBQWEsb0JBQXNCcEosS0FBS2hDLEVBQUVtSyxNQUMxQ2lCLGFBQWEsNEJBQThCcEosS0FBS2hDLEVBQUUwSyxNQUFNWSxRQUN4REYsYUFBYSx5QkFBMkJwSixLQUFLaEMsRUFBRTBLLE1BQU1SLEtBQ3JEa0IsYUFBYSx5QkFBMkJwSixLQUFLaEMsRUFBRTBLLE1BQU1WLEtBQ3JEb0IsYUFBYSx3QkFBMEJwSixLQUFLaEMsRUFBRTBLLE1BQU1OLElBQ3BEZ0IsYUFBYSw2QkFBK0JwSixLQUFLaEMsRUFBRTBLLE1BQU1MLFNBQ3pEZSxhQUFhLDRCQUE4QnBKLEtBQUtoQyxFQUFFMEssTUFBTUYsUUFDeERZLGFBQWEsMkJBQTZCcEosS0FBS2hDLEVBQUUwSyxNQUFNRCxRQUd6RHpJLEtBQUs4SCxXQUFhLFdBQ2hCLEdBQThCLFNBQTFCc0IsYUFBYUMsU0FBcUIsQ0FDcEMsSUFBTUUsRUFBUUgsYUFBYSx1QkFBdUJJLE1BQU0sS0FDbERDLEVBQVdMLGFBQWEsNkJBQTZCSSxNQUFNLEtBRWpFeEosS0FBS2hDLEVBQUVxSyxTQUFXLENBQUNxQixTQUFTSCxFQUFNLElBQUtHLFNBQVNILEVBQU0sS0FDdER2SixLQUFLaEMsRUFBRW1LLE1BQTZDLFNBQXJDaUIsYUFBYSxvQkFDNUJwSixLQUFLaEMsRUFBRTBLLE1BQU1ZLFFBQVVJLFNBQVNOLGFBQWEsNkJBQzdDcEosS0FBS2hDLEVBQUUwSyxNQUFNUixLQUFpRCxTQUExQ2tCLGFBQWEseUJBQ2pDcEosS0FBS2hDLEVBQUUwSyxNQUFNVixLQUFpRCxTQUExQ29CLGFBQWEseUJBQ2pDcEosS0FBS2hDLEVBQUUwSyxNQUFNTixJQUFNZ0IsYUFBYSx3QkFDaENwSixLQUFLaEMsRUFBRTBLLE1BQU1MLFNBQVcsQ0FBQ3FCLFNBQVNELEVBQVMsSUFBS0MsU0FBU0QsRUFBUyxLQUNsRXpKLEtBQUtoQyxFQUFFMEssTUFBTUYsUUFBVW1CLFdBQVdQLGFBQWEsNkJBQy9DcEosS0FBS2hDLEVBQUUwSyxNQUFNRCxPQUFTaUIsU0FBU04sYUFBYSw4QkFJaERwSixLQUFLK0gsWUFBYyxXQUNqQi9ILEtBQUs0SSxHQUFHdkcsTUFBTXVILEtBQWQsVUFBd0I1SixLQUFLaEMsRUFBRXFLLFNBQVMsR0FBeEMsTUFDQXJJLEtBQUs0SSxHQUFHdkcsTUFBTXdILElBQWQsVUFBdUI3SixLQUFLaEMsRUFBRXFLLFNBQVMsR0FBdkMsT0FFSXJJLEtBQUtoQyxFQUFFbUssTUFDVG5JLEtBQUs4SixzQkFFTDlKLEtBQUsrSix1QkFHSC9KLEtBQUtoQyxFQUFFMEssTUFBTVIsS0FDZmxJLEtBQUtnSyxzQkFFTGhLLEtBQUtpSyxxQkFHSGpLLEtBQUtoQyxFQUFFMEssTUFBTVYsS0FDZmhJLEtBQUtrSyxxQkFFTGxLLEtBQUttSyx1QkFHUG5LLEtBQUtwQyxFQUFFd0ssSUFBSTVKLE1BQVF3QixLQUFLaEMsRUFBRTBLLE1BQU1OLElBQ2hDcEksS0FBS29LLFlBRUxwSyxLQUFLcEMsRUFBRXlLLFNBQVNDLEVBQUU5SixNQUFRd0IsS0FBS2hDLEVBQUUwSyxNQUFNTCxTQUFTLEdBQ2hEckksS0FBS3BDLEVBQUV5SyxTQUFTRSxFQUFFL0osTUFBUXdCLEtBQUtoQyxFQUFFMEssTUFBTUwsU0FBUyxHQUNoRHJJLEtBQUtxSyxpQkFFTHJLLEtBQUtwQyxFQUFFNEssUUFBUWhLLE1BQVF3QixLQUFLaEMsRUFBRTBLLE1BQU1GLFFBQ3BDeEksS0FBS3NLLGdCQUVMdEssS0FBS3BDLEVBQUU2SyxPQUFPakssTUFBUXdCLEtBQUtoQyxFQUFFMEssTUFBTUQsT0FDbkN6SSxLQUFLdUssZ0JBR1B2SyxLQUFLd0ssY0FBZ0IsU0FBVTdKLEdBQzdCLE9BQVFBLEVBQUU4SixjQUFjM00sTUFDdEIsSUFBSyxNQUNIa0MsS0FBS2hDLEVBQUUwSyxNQUFNTixJQUFNcEksS0FBS3BDLEVBQUV3SyxJQUFJNUosTUFDOUJ3QixLQUFLb0ssWUFDTCxNQUVGLElBQUssUUFDSHBLLEtBQUtoQyxFQUFFMEssTUFBTUwsU0FBUyxHQUFLckksS0FBS3BDLEVBQUV5SyxTQUFTQyxFQUFFOUosTUFDN0N3QixLQUFLcUssaUJBQ0wsTUFFRixJQUFLLFFBQ0hySyxLQUFLaEMsRUFBRTBLLE1BQU1MLFNBQVMsR0FBS3JJLEtBQUtwQyxFQUFFeUssU0FBU0UsRUFBRS9KLE1BQzdDd0IsS0FBS3FLLGlCQUNMLE1BRUYsSUFBSyxVQUNIckssS0FBS2hDLEVBQUUwSyxNQUFNRixRQUFVeEksS0FBS3BDLEVBQUU0SyxRQUFRaEssTUFDdEN3QixLQUFLc0ssZ0JBQ0wsTUFFRixJQUFLLFNBQ0h0SyxLQUFLaEMsRUFBRTBLLE1BQU1ELE9BQVN6SSxLQUFLcEMsRUFBRTZLLE9BQU9qSyxNQUNwQ3dCLEtBQUt1SyxlQUlUdkssS0FBS21KLGVBR1BuSixLQUFLMEssWUFBYyxTQUFVL0osR0FDM0IsR0FBaUIsSUFBYkEsRUFBRWdLLFFBQ3dCLFdBQXhCaEssRUFBRThKLGNBQWMzTSxPQUNkVSxFQUFnQyxHQUF4Qm1DLEVBQUU4SixjQUFjak0sTUFBYSxHQUM3QixLQUFJQSxFQUFRLElBQ3hCd0IsS0FBS3BDLEVBQUU0SyxRQUFRaEssTUFBUUEsRUFBUSxLQUNFLFNBQXhCbUMsRUFBRThKLGNBQWMzTSxNQUEyQyxTQUF4QjZDLEVBQUU4SixjQUFjM00sT0FDdkRrQyxLQUFLaEMsRUFBRTBLLE1BQU1WLE1BRWxCckgsRUFBRThKLGNBQWNqTSxhQUViLEdBQWlCLElBQWJtQyxFQUFFZ0ssUUFBZSxDQUV4QixJQUFJbk0sRUFETixHQUE0QixXQUF4Qm1DLEVBQUU4SixjQUFjM00sTUFDZFUsRUFBZ0MsR0FBeEJtQyxFQUFFOEosY0FBY2pNLE1BQWEsR0FDN0IsSUFBR0EsRUFBUSxHQUN2QndCLEtBQUtwQyxFQUFFNEssUUFBUWhLLE1BQVFBLEVBQVEsUUFDRSxTQUF4Qm1DLEVBQUU4SixjQUFjM00sTUFBMkMsU0FBeEI2QyxFQUFFOEosY0FBYzNNLE9BQ3ZEa0MsS0FBS2hDLEVBQUUwSyxNQUFNVixNQUVsQnJILEVBQUU4SixjQUFjak0sVUFLdEJ3QixLQUFLNEssT0FBUyxTQUFVakssR0FDdEIsSUFBTWtLLEVBQU83SyxLQUNUNkQsRUFBS2xELEVBQUU4SixjQUlYLEdBRkk1RyxHQUFNN0QsS0FBS3BDLEVBQUU4QyxPQUFNbUQsRUFBSzdELEtBQUs0SSxJQUU3Qi9FLEVBQUdnRixXQUFhZ0MsRUFBSzdNLEVBQUU4SyxXQUFXSixPQUFVN0UsRUFBR2dGLFdBQWFnQyxFQUFLN00sRUFBRThLLFdBQVdKLFFBQVVtQyxFQUFLN00sRUFBRTBLLE1BQU1WLEtBQU8sS0FJckc4QyxFQUFULFNBQWdCbkssR0FDZCxJQUFNMkgsRUFBSTNILEVBQUVvSyxNQUFRQyxFQUNkekMsRUFBSTVILEVBQUVzSyxNQUFRQyxFQUVwQnJILEVBQUd4QixNQUFNdUgsS0FBVCxVQUFtQnRCLEVBQW5CLE1BQ0F6RSxFQUFHeEIsTUFBTXdILElBQVQsVUFBa0J0QixFQUFsQixNQUVJMUUsRUFBR2dGLFdBQWFnQyxFQUFLN00sRUFBRThLLFdBQVdDLFVBQ3BDOEIsRUFBSzdNLEVBQUVxSyxTQUFTLEdBQUtDLEVBQ3JCdUMsRUFBSzdNLEVBQUVxSyxTQUFTLEdBQUtFLEdBR25CMUUsRUFBR2dGLFdBQWFnQyxFQUFLN00sRUFBRThLLFdBQVdKLFFBQ3BDbUMsRUFBS2pOLEVBQUV5SyxTQUFTQyxFQUFFOUosTUFBUXFNLEVBQUs3TSxFQUFFMEssTUFBTUwsU0FBUyxHQUFLQyxFQUNyRHVDLEVBQUtqTixFQUFFeUssU0FBU0UsRUFBRS9KLE1BQVFxTSxFQUFLN00sRUFBRTBLLE1BQU1MLFNBQVMsR0FBS0UsR0FHdkRzQyxFQUFLMUIsZUFwQkQ2QixFQUFTckssRUFBRW9LLE1BQVFsSCxFQUFHc0gsV0FDdEJELEVBQVN2SyxFQUFFc0ssTUFBUXBILEVBQUd1SCxVQTJCNUJQLEVBQUs5TCxLQUFLLENBQUNhLFVBQVcsWUFBYWtMLEdBQ25DRCxFQUFLOUwsS0FBSyxDQUFDYSxVQUFXLFdBTnRCLFNBQVN5TCxJQUNQUixFQUFLUyxPQUFPLENBQUMxTCxVQUFXLFlBQWFrTCxHQUNyQ0QsRUFBS1MsT0FBTyxDQUFDMUwsVUFBVyxVQUFXeUwsUUFRekNyTCxLQUFLdUwsV0FBYSxXQUNadkwsS0FBS2hDLEVBQUUwSyxNQUFNVixNQUNmaEksS0FBS21LLHVCQUNMbkssS0FBS2hDLEVBQUUwSyxNQUFNVixNQUFPLElBRXBCaEksS0FBS2tLLHFCQUNMbEssS0FBS2hDLEVBQUUwSyxNQUFNVixNQUFPLEdBR3RCaEksS0FBS21KLGVBR1BuSixLQUFLa0ssbUJBQXFCLFdBQ3hCbEssS0FBS3dMLFlBQVl4TCxLQUFLcEMsRUFBRW9LLEtBQU0sWUFDOUJoSSxLQUFLeUwsU0FBU3pMLEtBQUtwQyxFQUFFb0ssS0FBTSxXQUc3QmhJLEtBQUttSyxxQkFBdUIsV0FDMUJuSyxLQUFLd0wsWUFBWXhMLEtBQUtwQyxFQUFFb0ssS0FBTSxVQUM5QmhJLEtBQUt5TCxTQUFTekwsS0FBS3BDLEVBQUVvSyxLQUFNLGFBRzdCaEksS0FBSzBMLFdBQWEsV0FDWjFMLEtBQUtoQyxFQUFFMEssTUFBTVIsTUFDZmxJLEtBQUtpSyxxQkFDTGpLLEtBQUtoQyxFQUFFMEssTUFBTVIsTUFBTyxJQUVwQmxJLEtBQUtnSyxzQkFDTGhLLEtBQUtoQyxFQUFFMEssTUFBTVIsTUFBTyxHQUd0QmxJLEtBQUttSixlQUdQbkosS0FBS2dLLG9CQUFzQixXQUN6QmhLLEtBQUt3TCxZQUFZeEwsS0FBS3BDLEVBQUVzSyxLQUFNLFNBQzlCbEksS0FBS3lMLFNBQVN6TCxLQUFLcEMsRUFBRXNLLEtBQU0sUUFDM0JsSSxLQUFLMEksTUFBTXJHLE1BQU1zSixRQUFVLFNBRzdCM0wsS0FBS2lLLG1CQUFxQixXQUN4QmpLLEtBQUt3TCxZQUFZeEwsS0FBS3BDLEVBQUVzSyxLQUFNLFFBQzlCbEksS0FBS3lMLFNBQVN6TCxLQUFLcEMsRUFBRXNLLEtBQU0sU0FDM0JsSSxLQUFLMEksTUFBTXJHLE1BQU1zSixRQUFVLFFBRzdCM0wsS0FBSzRMLFlBQWMsV0FDYjVMLEtBQUtoQyxFQUFFbUssT0FDVG5JLEtBQUsrSix1QkFDTC9KLEtBQUtoQyxFQUFFbUssT0FBUSxJQUVmbkksS0FBSzhKLHNCQUNMOUosS0FBS2hDLEVBQUVtSyxPQUFRLEdBR2pCbkksS0FBS21KLGVBR1BuSixLQUFLK0oscUJBQXVCLFdBQzFCL0osS0FBS3lMLFNBQVN6TCxLQUFLcEMsRUFBRXFMLE1BQU8sYUFDNUJqSixLQUFLcEMsRUFBRXFMLE1BQU01RyxNQUFNc0osUUFBVSxTQUcvQjNMLEtBQUs4SixvQkFBc0IsV0FDekI5SixLQUFLd0wsWUFBWXhMLEtBQUtwQyxFQUFFcUwsTUFBTyxhQUMvQmpKLEtBQUtwQyxFQUFFcUwsTUFBTTVHLE1BQU1zSixRQUFVLFFBRy9CM0wsS0FBS29LLFVBQVksV0FDZnBLLEtBQUswSSxNQUFNTSxVQUFYLG9CQUFvQ2hKLEtBQUtoQyxFQUFFMEssTUFBTU4sSUFBakQsUUFHRnBJLEtBQUtxSyxlQUFpQixXQUNwQnJLLEtBQUswSSxNQUFNckcsTUFBTXVILEtBQWpCLFVBQTJCNUosS0FBS2hDLEVBQUUwSyxNQUFNTCxTQUFTLEdBQWpELE1BQ0FySSxLQUFLMEksTUFBTXJHLE1BQU13SCxJQUFqQixVQUEwQjdKLEtBQUtoQyxFQUFFMEssTUFBTUwsU0FBUyxHQUFoRCxPQUdGckksS0FBS3NLLGNBQWdCLFdBQ25CdEssS0FBSzBJLE1BQU1yRyxNQUFNbUcsUUFBVXhJLEtBQUtoQyxFQUFFMEssTUFBTUYsU0FHMUN4SSxLQUFLdUssYUFBZSxXQUNsQnZLLEtBQUswSSxNQUFNckcsTUFBTW9HLE9BQVN6SSxLQUFLaEMsRUFBRTBLLE1BQU1ELFFBR3pDekksS0FBSzZMLFNBQVcsU0FBVUMsRUFBTWpELEdBQzlCLE9BQU8sSUFBSWtELE9BQUosV0FBZWxELEVBQWYsTUFBNkJsQixLQUE3QixXQUFzQ21FLEVBQUtqRCxVQUEzQyxPQUdUN0ksS0FBS3lMLFNBQVcsU0FBVUssRUFBTWpELEdBQ3pCN0ksS0FBSzZMLFNBQVNDLEVBQU1qRCxLQUN2QmlELEVBQUtqRCxXQUFMLFdBQXNCQSxLQUkxQjdJLEtBQUt3TCxZQUFjLFNBQVVNLEVBQU1qRCxHQUNqQyxJQUFJbUQsRUFBVyxJQUFILE9BQU9GLEVBQUtqRCxVQUFVekIsUUFBUSxZQUFhLEtBQTNDLEtBQ1osR0FBSXBILEtBQUs2TCxTQUFTQyxFQUFNakQsR0FBWSxDQUNsQyxLQUFPbUQsRUFBUzdJLFFBQVQsV0FBcUIwRixFQUFyQixPQUFzQyxHQUMzQ21ELEVBQVdBLEVBQVM1RSxRQUFULFdBQXFCeUIsRUFBckIsS0FBbUMsS0FFaERpRCxFQUFLakQsVUFBWW1ELEVBQVM1RSxRQUFRLGFBQWMsTUFJcERwSCxLQUFLakIsS0FBTyxTQUFVK00sRUFBTUcsRUFBT0MsR0FDakMsSUFBSyxJQUFJM08sRUFBSSxFQUFHQSxFQUFJdU8sRUFBSzNLLE9BQVE1RCxJQUMzQnVPLEVBQUt2TyxHQUFHNE8saUJBQ1ZMLEVBQUt2TyxHQUFHNE8saUJBQWlCRixFQUFPQyxHQUVoQ0osRUFBS3ZPLEdBQUc2TyxZQUFSLFlBQXlCSCxHQUFTQyxJQUt4Q2xNLEtBQUtzTCxPQUFTLFNBQVVRLEVBQU1HLEVBQU9DLEdBQ25DLElBQUssSUFBSTNPLEVBQUksRUFBR0EsRUFBSXVPLEVBQUszSyxPQUFRNUQsSUFDM0J1TyxFQUFLdk8sR0FBRzhPLG9CQUNWUCxFQUFLdk8sR0FBRzhPLG9CQUFvQkosRUFBT0MsR0FFbkNKLEVBQUt2TyxHQUFHK08sWUFBUixZQUF5QkwsR0FBU0MsSUFLeENsTSxLQUFLaUksTUFBUSxTQUFVc0UsRUFBTUMsRUFBTUMsR0FNakMsT0FMQUEsRUFBVUEsR0FBV3pNLEtBQ3JCd00sRUFBT0EsR0FBUSxHQUVLLGlCQUFURCxJQUFtQkEsRUFBT0UsRUFBUUYsSUFFdEMsV0FHTCxJQUZBLElBQU1HLEVBQUlGLEVBQUtHLFFBRU5wUCxFQUFJLEVBQUdBLEVBQUkwQyxVQUFVa0IsT0FBUTVELFNBQXlCLElBQVRtUCxFQUFFblAsSUFBK0IsT0FBVG1QLEVBQUVuUCxLQUFhbVAsRUFBRW5QLEdBQUswQyxVQUFVMUMsSUFFOUcsT0FBT2dQLEVBQUt4TSxNQUFNME0sRUFBU0MsS0FJL0IxTSxLQUFLaEMsRUFBSSxDQUNQOEssV0FBWSxDQUNWQyxRQUFTLEtBQ1RMLE1BQU8sWUFFVEwsU0FBVSxDQUFDLEdBQUksSUFDZkYsT0FBTyxFQUNQTyxNQUFPLENBQ0xZLFFBQVMsRUFDVHBCLE1BQU0sRUFDTkYsTUFBTSxFQUNOSSxJQUFLLDZCQUNMQyxTQUFVLENBQUMsRUFBRyxHQUNkRyxRQUFTLEdBQ1RDLE9BQVEsTUFJWnpJLEtBQUs0SCxTLDhNQzdhRGdGLEUsV0FDSixXQUFZQyxFQUFTM0ksSSw0RkFBUSxTQUMzQmxFLEtBQUs4TSxNQUFRRCxFQUNiN00sS0FBS00sYUFDTE4sS0FBSytNLGVBQ0wvTSxLQUFLZ04sYUFDTGhOLEtBQUtrRSxPQUFTQSxFLDREQUdILFdBQ1hsRSxLQUFLaU4sT0FBU2pOLEtBQUs4TSxNQUFNek0sY0FBYyxnQ0FFdkNMLEtBQUtrTixNQUFRbE4sS0FBSzhNLE1BQU16TSxjQUFjLDZCQUN0Q0wsS0FBS21OLElBQU1DLE9BQU9wTixLQUFLa04sTUFBTUMsS0FDN0JuTixLQUFLcU4sSUFBTUQsT0FBT3BOLEtBQUtrTixNQUFNRyxLQUM3QnJOLEtBQUt4QixNQUFRNE8sT0FBT3BOLEtBQUtrTixNQUFNMU8sT0FDL0J3QixLQUFLc04sUUFBVXROLEtBQUs4TSxNQUFNUyxpQkFBaUIsNEJBQzNDdk4sS0FBS3NOLFFBQVF2SixTQUFRLFNBQUN5SixHQUNwQixFQUFLQyxXQUFhRCxLQUVwQnhOLEtBQUswTixTQUFXMU4sS0FBSzhNLE1BQU1TLGlCQUFpQiw2QkFDNUN2TixLQUFLME4sU0FBUzNKLFNBQVEsU0FBQzRKLEdBQ3JCLEVBQUtDLFlBQWNELE8scUNBS3JCM04sS0FBSzZOLFlBQWM3TixLQUFLNk4sWUFBWTlPLEtBQUtpQixNQUN6Q0EsS0FBS3lOLFdBQVd0QixpQkFBaUIsUUFBU25NLEtBQUs2TixhQUMvQzdOLEtBQUs4TixhQUFlOU4sS0FBSzhOLGFBQWEvTyxLQUFLaUIsTUFDM0NBLEtBQUs0TixZQUFZekIsaUJBQWlCLFFBQVNuTSxLQUFLOE4sZ0Isb0NBSWhEOU4sS0FBSytOLFFBQVEvTixLQUFLeEIsTUFBUSxLLHFDQUkxQndCLEtBQUsrTixRQUFRL04sS0FBS3hCLE1BQVEsSyw4QkFHcEJ3UCxHQUNGQSxHQUFPaE8sS0FBS21OLEtBQU9hLEdBQU9oTyxLQUFLcU4sSUFDakNyTixLQUFLeEIsTUFBUXdQLEVBQ0ksSUFBUkEsSUFDVGhPLEtBQUt4QixNQUFRd0IsS0FBS3FOLEtBR3BCck4sS0FBS2lPLGNBQ0xqTyxLQUFLZ04sYUFDTGhOLEtBQUtrRSxXLG9DQUlMbEUsS0FBS2tOLE1BQU0xTyxNQUFRd0IsS0FBS3hCLFEsbUNBSXBCd0IsS0FBS3hCLFFBQVV3QixLQUFLcU4sSUFDdEJyTixLQUFLa08sa0JBRUxsTyxLQUFLbU8sZ0JBR0huTyxLQUFLeEIsUUFBVXdCLEtBQUttTixJQUN0Qm5OLEtBQUtvTyxpQkFFTHBPLEtBQUtxTyxpQiw4QkFLUCxPQUFPck8sS0FBS3hCLFFBQVV3QixLQUFLcU4sTSxnQ0FJM0IsT0FBc0IsSUFBZnJOLEtBQUt4QixRLGlDQUlaLE9BQU93QixLQUFLeEIsUSxxQ0FJUndCLEtBQUt5TixXQUFXYSxVQUFVQyxTQUFTLHNDQUNyQ3ZPLEtBQUt5TixXQUFXYSxVQUFVbkssT0FBTyxvQ0FDakNuRSxLQUFLeU4sV0FBV2UsZ0JBQWdCLGUsdUNBS2xDeE8sS0FBS3lOLFdBQVdhLFVBQVVHLElBQUksb0NBQzlCek8sS0FBS3lOLFdBQVd6SixhQUFhLFdBQVksVSxzQ0FLdkNoRSxLQUFLNE4sWUFBWVUsVUFBVUMsU0FBUyxzQ0FFcEN2TyxLQUFLNE4sWUFBWVUsVUFBVW5LLE9BQU8sdUMsd0NBS3BDbkUsS0FBSzROLFlBQVlVLFVBQVVHLElBQUksMEMsbzdCQ3BHN0JDLEUsV0FDSixXQUFZQyxHQUFVLFksNEZBQUEsU0FDcEIzTyxLQUFLMk8sU0FBV0EsRUFDaEIzTyxLQUFLNE8sY0FDTDVPLEtBQUsrTSxlQUNML00sS0FBSzZPLGFBQ0w3TyxLQUFLOE8sU0FBVyxFQUFJOU8sS0FBSytPLFFBQVFDLEtBQy9CLFNBQUM1TixHQUFELE9BQVUsSUFBSXdMLEVBQWdCeEwsR0FBTSxrQkFBTSxFQUFLOEMsZUFFakRsRSxLQUFLa0UsUyw2REFJTGxFLEtBQUtpUCxLQUFPalAsS0FBSzJPLFNBQVN0TyxjQUFjLG1CQUN4Q0wsS0FBS2tQLE9BQVNsUCxLQUFLMk8sU0FBU3RPLGNBQWMsc0JBQzFDTCxLQUFLbVAsTUFBUW5QLEtBQUsyTyxTQUFTdE8sY0FBYyxvQkFDekNMLEtBQUtvUCxTQUFXcFAsS0FBSzJPLFNBQVNMLFVBQVVDLFNBQVMsa0JBQ2pEdk8sS0FBS3FQLGFBQWVyUCxLQUFLMk8sU0FBU1csUUFBZCxTQUFpQyxHQUNyRHRQLEtBQUsrTyxPQUFTL08sS0FBSzJPLFNBQVNwQixpQkFBaUIsc0JBQzdDdk4sS0FBS3VQLFlBQWN2UCxLQUFLMk8sU0FBU3RPLGNBQWMsaUNBQThCa0QsRUFDN0V2RCxLQUFLd1AsVUFBWXhQLEtBQUsyTyxTQUFTdE8sY0FBYywrQkFBNEJrRCxJLHFDQUl6RXZELEtBQUt5UCxZQUFjelAsS0FBS3lQLFlBQVkxUSxLQUFLaUIsTUFDekNBLEtBQUtrUCxPQUFPL0MsaUJBQWlCLFFBQVNuTSxLQUFLeVAsYUFDM0N6UCxLQUFLMFAsZ0JBQWtCMVAsS0FBSzBQLGdCQUFnQjNRLEtBQUtpQixNQUNqREosU0FBU3VNLGlCQUFpQixRQUFTbk0sS0FBSzBQLGlCQUNwQzFQLEtBQUt3UCxZQUFXeFAsS0FBSzJQLFdBQWEzUCxLQUFLMlAsV0FBVzVRLEtBQUtpQixPQUMzREEsS0FBS3dQLFVBQVVyRCxpQkFBaUIsUUFBU25NLEtBQUsyUCxZQUMxQzNQLEtBQUt1UCxjQUFhdlAsS0FBSzRQLGFBQWU1UCxLQUFLNFAsYUFBYTdRLEtBQUtpQixPQUNqRUEsS0FBS3VQLFlBQVlwRCxpQkFBaUIsUUFBU25NLEtBQUs0UCxnQixvQ0FJaEQ1UCxLQUFLaVAsS0FBS1gsVUFBVVksT0FBTyxtQkFDM0JsUCxLQUFLbVAsTUFBTWIsVUFBVVksT0FBTyxrQixzQ0FHZGpELEdBQ1ZBLEVBQU05TCxPQUFPMFAsUUFBUSxlQUFpQjdQLEtBQUsyTyxVQUM3QzNPLEtBQUs4UCxrQixzQ0FLbUI5UCxLQUFLaVAsS0FBS1gsVUFBVUMsU0FBUyxvQkFFckR2TyxLQUFLaVAsS0FBS1gsVUFBVW5LLE9BQU8scUIsaUNBSXBCOEgsR0FDYyxJQUFuQmpNLEtBQUsrUCxZQUNQOUQsRUFBTXRELGlCQUNOM0ksS0FBSzhQLG1CLG1DQUlJN0QsR0FDWEEsRUFBTXRELGlCQUNOM0ksS0FBSzhPLFNBQVMvSyxTQUFRLFNBQUM4SSxHQUNyQkEsRUFBUWtCLFFBQVEsUSwrQkFLbEIvTixLQUFLZ1EsY0FDTGhRLEtBQUtpUSx3QiwwQ0FLVSxJQURDalEsS0FBSzhPLFNBQVNFLEtBQUksU0FBQzVOLEdBQUQsT0FBVUEsRUFBSzhPLFdBQVNDLFVBQVMsR0FFakVuUSxLQUFLb1Esb0JBRUxwUSxLQUFLcVEsdUIsd0NBUVksSUFIQ3JRLEtBQUs4TyxTQUN4QkUsS0FBSSxTQUFDNU4sR0FBRCxPQUFVQSxFQUFLa1AsYUFDbkJILFVBQVMsR0FFUm5RLEtBQUt1USxrQkFFTHZRLEtBQUt3USxxQiw0Q0FLZSxJQUFsQnhRLEtBQUt5USxVQUFrQnpRLEtBQUswUSxVQUFZLEdBQzFDMVEsS0FBS3VRLG9CLDBDQUtQdlEsS0FBS3VQLFlBQVlsTixNQUFNc0osUUFBVSxTLDJDQUlqQzNMLEtBQUt1UCxZQUFZbE4sTUFBTXNKLFFBQVUsVSx3Q0FJakMzTCxLQUFLd1AsVUFBVW5OLE1BQU1zSixRQUFVLFMseUNBSS9CM0wsS0FBS3dQLFVBQVVuTixNQUFNc0osUUFBVSxVLHFDQUdsQmdGLEVBQVFDLEdBRXJCLElBQU1DLEdBRE5GLEVBQVNHLEtBQUtDLElBQUlKLEdBQVUsS0FDUixHQUNwQixPQUFJQSxFQUFTLElBQU1BLEVBQVMsR0FDbkJDLEVBQUssR0FFVkMsRUFBSyxHQUFLQSxFQUFLLEVBQ1ZELEVBQUssR0FFSCxJQUFQQyxFQUNLRCxFQUFLLEdBRVBBLEVBQUssSyxtQ0FHRCxXQUNQSSxFQUFhLEVBQ2pCaFIsS0FBSytPLE9BQU9oTCxTQUFRLFNBQUMzQyxHQUNuQixFQUFLNlAsU0FBVzdQLEVBQUttTSxpQkFBaUIsNkJBRXRDLEVBQUswRCxTQUFTbE4sU0FBUSxTQUFDRixHQUNyQm1OLEdBQWM1RCxPQUFPdkosRUFBR3JGLGFBRzVCd0IsS0FBS2dSLFdBQWFBLEkscUNBS0ksSUFBbEJoUixLQUFLb1AsU0FDUHBQLEtBQUtrUix1QkFFTGxSLEtBQUttUix1Qiw2Q0FJYyxXQUNmQyxFQUFRcFIsS0FBSzhPLFNBQVNFLEtBQUksU0FBQzVOLEdBQUQsT0FBVUEsRUFBS2lRLGNBRDFCLEVBS1QsQ0FBQ0QsRUFBTSxHQUNqQkEsRUFBTSxHQUNOQSxFQUFNLElBSkRFLEVBSGMsS0FJbkJDLEVBSm1CLEtBS25CQyxFQUxtQixLQTBCckIsR0FqQkF4UixLQUFLK1AsVUFBWXVCLEVBQVNDLEVBQVdDLEVBQ3JDeFIsS0FBS3lRLFNBQVdhLEVBQVNDLEVBQ3pCdlIsS0FBSzBRLFVBQVljLEVBRWJGLEVBQVNDLEVBQVcsR0FFdEJ2UixLQUFLOE8sU0FBU0UsS0FBSSxTQUFDNU4sR0FBRCxPQUFVQSxFQUFLaU4sbUJBR2pDck8sS0FBS3lRLFNBQVcsR0FDaEJ6USxLQUFLbUIsT0FBU25CLEtBQUs4TyxTQUFTM04sT0FDNUJuQixLQUFLOE8sU0FBUy9LLFNBQVEsU0FBQzNDLEVBQU1zRSxHQUN2QkEsSUFBVSxFQUFLdkUsT0FBUSxHQUN6QkMsRUFBS2dOLHFCQUlJLEtBQVhvRCxFQUFlLENBQ2pCLElBQUlyUSxFQUFTbkIsS0FBSzhPLFNBQVMzTixPQUMzQm5CLEtBQUs4TyxTQUFTL0ssU0FBUSxTQUFDM0MsRUFBTXNFLEdBQ3ZCQSxJQUFVdkUsRUFBUSxHQUNwQkMsRUFBS2dOLG9CQUtQa0QsRUFBUyxHQUFLQyxFQUFXLEdBQzNCdlIsS0FBS3lSLG1CQUNMelIsS0FBSzBSLGtCQUVMMVIsS0FBS3lSLG1CQVVQelIsS0FBSzJSLGNBQWdCM1IsS0FBSzRSLGVBQWU1UixLQUFLeVEsU0FOM0IsQ0FBQyxRQUNsQixRQUNBLFdBTUZ6USxLQUFLNlIsZ0JBQWtCN1IsS0FBSzRSLGVBQWU1UixLQUFLMFEsVUFMM0IsQ0FBQyxXQUNwQixXQUNBLGNBSXFCLElBQW5CMVEsS0FBSzBRLFdBQXFDLElBQWxCMVEsS0FBS3lRLFNBQy9CelEsS0FBS21QLE1BQU1uRyxVQUFZLGlCQUNJLElBQWxCaEosS0FBS3lRLFVBQXFDLElBQW5CelEsS0FBSzBRLFVBQ3JDMVEsS0FBS21QLE1BQU1uRyxVQUFYLFVBQTBCaEosS0FBS3lRLFNBQS9CLFlBQTJDelEsS0FBSzJSLGVBRWhEM1IsS0FBS21QLE1BQU1uRyxVQUFYLFVBQTBCaEosS0FBS3lRLFNBQS9CLFlBQTJDelEsS0FBSzJSLGNBQWhELGFBQWtFM1IsS0FBSzBRLFVBQXZFLFlBQW9GMVEsS0FBSzZSLG1CLDJDQUszRixJQUFNVCxFQUFRcFIsS0FBSzhPLFNBQVNFLEtBQUksU0FBQzVOLEdBQUQsT0FBVUEsRUFBS2lRLGNBRDVCLEVBS0wsQ0FBQ0QsRUFBTSxHQUNuQkEsRUFBTSxHQUNOQSxFQUFNLElBSkRVLEVBSFksS0FJakJDLEVBSmlCLEtBS2pCQyxFQUxpQixLQVNmQyxFQUFNSCxFQUFVQyxFQUFNQyxFQUV0QkMsSUFBUWpTLEtBQUtnUixhQUNqQmhSLEtBQUt5UixtQkFDSHpSLEtBQUswUixrQkFHUCxJQVVNUSxFQUFpQmxTLEtBQUs0UixlQUFlRSxFQVZ2QixDQUFDLFVBQ25CLFVBQ0EsV0FTSUssRUFBYW5TLEtBQUs0UixlQUFlRyxFQVJ2QixDQUFDLFVBQ2YsVUFDQSxhQU9JSyxFQUFrQnBTLEtBQUs0UixlQUFlSSxFQU52QixDQUFDLFNBQ3BCLFNBQ0EsV0FPQWhTLEtBQUttUCxNQUFNbkcsVUFEVGlKLEVBQU0sR0FBS0QsRUFBVyxFQUNELFVBQUdGLEVBQUgsWUFBY0ksRUFBZCxhQUFpQ0gsRUFBakMsWUFBd0NJLEVBQXhDLFlBQXNESCxFQUF0RCxZQUFrRUksR0FDdkYsTUFDRyxVQUEwQk4sRUFBMUIsWUFBcUNJLEVBQXJDLGFBQXdESCxFQUF4RCxZQUErREksRUFBL0QsWSxnQ0NqUFh4UyxPQUFPd00saUJBQWlCLFFBSnhCLFdBQ0V2TSxTQUFTMk4saUJBQWlCLGFBQWF4SixTQUFRLFNBQUMzQyxHQUFELE9BQVUsSUFBSXNOLEVBQVN0TixVLDZCQ0Z4RXhCLFNBQVMyTixpQkFBaUIsZ0JBQWdCeEosU0FBUSxTQUFVc08sR0FDeEQsSUFBSUMsRUFBU0QsRUFBT2hTLGNBQWMsaUJBQzlCa1MsRUFBU0YsRUFBT2hTLGNBQWMscUJBQ2xDaVMsRUFBT25HLGlCQUFpQixTQUN4QixXQUNJbUcsRUFBT2hFLFVBQVVZLE9BQU8sVUFDeEJxRCxFQUFPakUsVUFBVVksT0FBTyxpQyxrRENOaENqUixPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sSUFDdEQsRUFBUSxHQUNSLEVBQVEsR0FDUixFQUFRLElBQ1IsRUFBUSxHQUNSLEVBQVEsR0FDUixFQUFRLEssZ0JDTlIsSUFBSW9JLEVBQVUsRUFBUSxJQUVBLGlCQUFaQSxJQUFzQkEsRUFBVSxDQUFDLENBQUN0SixFQUFPQyxFQUFJcUosRUFBUyxNQU9oRSxJQUFJMUYsRUFBVSxDQUFDLEtBQU0sRUFFckIsZUFQSW1ELEVBUUosZ0JBQXFCZCxHQUVSLEVBQVEsRUFBUixDQUFnRXFELEVBQVMxRixHQUVuRjBGLEVBQVFDLFNBQVF2SixFQUFPRCxRQUFVdUosRUFBUUMsUywrQ0NoQjVDLElBQUkyTCxFQUFTNVMsU0FBU1MsY0FBYyxrQkFDaENvUyxFQUFlN1MsU0FBU1MsY0FBYyxxQkFDdENxUyxFQUFhOVMsU0FBU1MsY0FBYyxtQ0FDcENzUyxFQUFhL1MsU0FBU1MsY0FBYyxnQ0FDcEN1RyxFQUFVaEgsU0FBU1MsY0FBYywyQkFDckNtUyxTQUFnREEsRUFBT3JHLGlCQUFpQixTQUV4RSxXQUNJdUcsU0FBd0RBLEVBQVdwRSxVQUFVWSxPQUFPLGlDQUNwRnlELFNBQXdEQSxFQUFXckUsVUFBVW5LLE9BQU8saUNBQ3BGeEUsT0FBT2lULFFBQVFDLFVBQVUsQ0FBRUMsTUFBTyxTQUFXLEdBQUksZUFDakRsTSxTQUFrREEsRUFBUTBILFVBQVVuSyxPQUFPLGlDQUMzRXlDLFNBQWtEQSxFQUFRMEgsVUFBVUcsSUFBSSx1Q0FONUVnRSxTQUE0REEsRUFBYXRHLGlCQUFpQixTQVExRixXQUNJd0csU0FBd0RBLEVBQVdyRSxVQUFVWSxPQUFPLGlDQUNwRndELFNBQXdEQSxFQUFXcEUsVUFBVW5LLE9BQU8saUNBQ3BGeEUsT0FBT2lULFFBQVFDLFVBQVUsQ0FBRUMsTUFBTyxTQUFXLEdBQUkscUJBQ2pEbE0sU0FBa0RBLEVBQVEwSCxVQUFVRyxJQUFJLGlDQUN4RTdILFNBQWtEQSxFQUFRMEgsVUFBVW5LLE9BQU8iLCJmaWxlIjoicmVnaXN0cmF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDI5KTtcbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0zIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0zIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIi8qKlxuXG4gKiBQZXJmZXR0byAtIFBpeGVsIFBlcmZlY3RcblxuICpcbiAqIEBhdXRob3IgICAgICBBcnRlbSBUZXJla2hpblxuICogQHZlcnNpb24gICAgIDAuMC4xXG4gKiBAZGVtbyAgICAgICAgaHR0cDovL3d3dy5sZXRzY29kZS5tZS9wZXJmZXR0by9cbiAqL1xuXG5jb25zdCBQZXJmZXR0byA9IG5ldyBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmdlbmVyYXRlVUkoKTtcbiAgICB0aGlzLmdldE9wdGlvbnMoKTtcbiAgICB0aGlzLmZpbGxPcHRpb25zKCk7XG5cbiAgICB0aGlzLmJpbmQoW3RoaXMuYy5sb2NrXSwgJ2NsaWNrJywgdGhpcy5wcm94eSgndG9nZ2xlTG9jaycpKTtcbiAgICB0aGlzLmJpbmQoW3RoaXMuYy5zaG93XSwgJ2NsaWNrJywgdGhpcy5wcm94eSgndG9nZ2xlU2hvdycpKTtcbiAgICB0aGlzLmJpbmQoW3RoaXMuYy5jbG9zZV0sICdjbGljaycsIHRoaXMucHJveHkoJ3RvZ2dsZUVudHJ5JykpO1xuICAgIHRoaXMuYmluZChcbiAgICAgIFtcbiAgICAgICAgdGhpcy5jLnVybCxcbiAgICAgICAgdGhpcy5jLnBvc2l0aW9uLngsXG4gICAgICAgIHRoaXMuYy5wb3NpdGlvbi55LFxuICAgICAgICB0aGlzLmMub3BhY2l0eSxcbiAgICAgICAgdGhpcy5jLnpJbmRleCxcbiAgICAgIF0sXG4gICAgICAna2V5dXAnLFxuICAgICAgdGhpcy5wcm94eSgndXBkYXRlT3B0aW9ucycpLFxuICAgICk7XG4gICAgdGhpcy5iaW5kKFxuICAgICAgW1xuICAgICAgICB0aGlzLmMucG9zaXRpb24ueCxcbiAgICAgICAgdGhpcy5jLnBvc2l0aW9uLnksXG4gICAgICAgIHRoaXMuYy5vcGFjaXR5LFxuICAgICAgICB0aGlzLmMuekluZGV4LFxuICAgICAgXSxcbiAgICAgICdrZXlkb3duJyxcbiAgICAgIHRoaXMucHJveHkoJ3ZhbHVlQ2hhbmdlJyksXG4gICAgKTtcblxuICAgIHRoaXMuYmluZChbdGhpcy5jLmhlYWQsIHRoaXMubGF5ZXJdLCAnbW91c2Vkb3duJywgdGhpcy5wcm94eSgnZHJhZ1RvJykpO1xuICAgIHRoaXMuYmluZChbdGhpcy5jLmhlYWQsIHRoaXMubGF5ZXJdLCAnZHJhZ3N0YXJ0JywgKGUpID0+IHsgZS5wcmV2ZW50RGVmYXVsdCgpOyB9KTtcbiAgfTtcblxuICB0aGlzLmdlbmVyYXRlVUkgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgdGVtcGxhdGUgPSAnPGRpdiBjbGFzcz1cInBmX2hlYWRcIiBkYXRhLXBmPVwiaGVhZFwiPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzx1bCBjbGFzcz1cInBmX2xheWVyLWNvbnRyb2xcIj4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPGxpIGRhdGEtcGY9XCJzaG93XCIgY2xhc3M9XCJwZl9pY29uIF9fb2ZmXCI+PC9saT4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPGxpIGRhdGEtcGY9XCJsb2NrXCIgY2xhc3M9XCJwZl9pY29uIF9fdW5sb2NrXCI+PC9saT4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICArICc8L3VsPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzxoMyBkYXRhLXBmPVwiY2xvc2VcIiBjbGFzcz1cInBmX3RpdGxlXCI+VG94aW48L2gzPidcbiAgICAgICAgICAgICAgICAgICAgICAgKyAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICArICc8ZGl2IGRhdGEtcGY9XCJlbnRyeVwiIGNsYXNzPVwicGZfZW50cnkgX192aXNpYmxlXCI+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPGZvcm0gYWN0aW9uPVwiI1wiIGNsYXNzPVwicGZfZm9ybVwiPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8ZmllbGRzZXQgY2xhc3M9XCJwZl9maWVsZF93cmFwXCI+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8ZGl2IGNsYXNzPVwicGZfZmllbGRcIj4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8bGFiZWw+VVJMPC9sYWJlbD4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwidXJsXCIvPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzwvZmllbGRzZXQ+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzxmaWVsZHNldCBjbGFzcz1cInBmX2ZpZWxkX2dyb3VwXCI+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8ZGl2IGNsYXNzPVwicGZfZmllbGQgX19maXJzdFwiPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzxsYWJlbD5YPC9sYWJlbD4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwicG9zLXhcIi8+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzxkaXYgY2xhc3M9XCJwZl9maWVsZFwiPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzxsYWJlbD5ZPC9sYWJlbD4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwicG9zLXlcIi8+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPC9maWVsZHNldD4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPGZpZWxkc2V0IGNsYXNzPVwicGZfZmllbGRfZ3JvdXBcIj4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzxkaXYgY2xhc3M9XCJwZl9maWVsZCBfX2ZpcnN0XCI+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPGxhYmVsPk9wYWNpdHk8L2xhYmVsPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJvcGFjaXR5XCIvPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8ZGl2IGNsYXNzPVwicGZfZmllbGRcIj4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8bGFiZWw+ei1JbmRleDwvbGFiZWw+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInppbmRleFwiLz4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJzwvZGl2PidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8L2ZpZWxkc2V0PidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICArICc8L2Zvcm0+J1xuICAgICAgICAgICAgICAgICAgICAgICArICc8L2Rpdj4nO1xuXG4gICAgdGhpcy5wZiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRoaXMucGYuY2xhc3NOYW1lID0gdGhpcy5vLm5hbWVzcGFjZXMud3JhcHBlcjtcbiAgICB0aGlzLnBmLmlubmVySFRNTCA9IHRlbXBsYXRlO1xuXG4gICAgdGhpcy5sYXllciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRoaXMubGF5ZXIuY2xhc3NOYW1lID0gdGhpcy5vLm5hbWVzcGFjZXMubGF5ZXI7XG5cbiAgICB0aGlzLmMgPSB7XG4gICAgICBoZWFkOiB0aGlzLnBmLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXBmPVwiaGVhZFwiXScpLFxuICAgICAgc2hvdzogdGhpcy5wZi5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wZj1cInNob3dcIl0nKSxcbiAgICAgIGxvY2s6IHRoaXMucGYucXVlcnlTZWxlY3RvcignW2RhdGEtcGY9XCJsb2NrXCJdJyksXG4gICAgICBjbG9zZTogdGhpcy5wZi5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wZj1cImNsb3NlXCJdJyksXG4gICAgICBlbnRyeTogdGhpcy5wZi5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wZj1cImVudHJ5XCJdJyksXG4gICAgICB1cmw6IHRoaXMucGYucXVlcnlTZWxlY3RvcignW25hbWU9XCJ1cmxcIl0nKSxcbiAgICAgIHBvc2l0aW9uOiB7XG4gICAgICAgIHg6IHRoaXMucGYucXVlcnlTZWxlY3RvcignW25hbWU9XCJwb3MteFwiXScpLFxuICAgICAgICB5OiB0aGlzLnBmLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwicG9zLXlcIl0nKSxcbiAgICAgIH0sXG4gICAgICBvcGFjaXR5OiB0aGlzLnBmLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwib3BhY2l0eVwiXScpLFxuICAgICAgekluZGV4OiB0aGlzLnBmLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwiemluZGV4XCJdJyksXG4gICAgfTtcblxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5wZik7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmxheWVyKTtcbiAgfTtcblxuICB0aGlzLnNhdmVPcHRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgIGxvY2FsU3RvcmFnZS5QZXJmZXR0byA9IHRydWU7XG4gICAgbG9jYWxTdG9yYWdlWydQZXJmZXR0by5vLnBvc2l0aW9uJ10gPSB0aGlzLm8ucG9zaXRpb247XG4gICAgbG9jYWxTdG9yYWdlWydQZXJmZXR0by5vLmNsb3NlJ10gPSB0aGlzLm8uY2xvc2U7XG4gICAgbG9jYWxTdG9yYWdlWydQZXJmZXR0by5vLmxheWVyLmN1cnJlbnQnXSA9IHRoaXMuby5sYXllci5jdXJyZW50O1xuICAgIGxvY2FsU3RvcmFnZVsnUGVyZmV0dG8uby5sYXllci5zaG93J10gPSB0aGlzLm8ubGF5ZXIuc2hvdztcbiAgICBsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8ubGF5ZXIubG9jayddID0gdGhpcy5vLmxheWVyLmxvY2s7XG4gICAgbG9jYWxTdG9yYWdlWydQZXJmZXR0by5vLmxheWVyLnVybCddID0gdGhpcy5vLmxheWVyLnVybDtcbiAgICBsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8ubGF5ZXIucG9zaXRpb24nXSA9IHRoaXMuby5sYXllci5wb3NpdGlvbjtcbiAgICBsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8ubGF5ZXIub3BhY2l0eSddID0gdGhpcy5vLmxheWVyLm9wYWNpdHk7XG4gICAgbG9jYWxTdG9yYWdlWydQZXJmZXR0by5vLmxheWVyLnpJbmRleCddID0gdGhpcy5vLmxheWVyLnpJbmRleDtcbiAgfTtcblxuICB0aGlzLmdldE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGxvY2FsU3RvcmFnZS5QZXJmZXR0byA9PT0gJ3RydWUnKSB7XG4gICAgICBjb25zdCBwZlBvcyA9IGxvY2FsU3RvcmFnZVsnUGVyZmV0dG8uby5wb3NpdGlvbiddLnNwbGl0KCcsJyk7XG4gICAgICBjb25zdCBsYXllclBvcyA9IGxvY2FsU3RvcmFnZVsnUGVyZmV0dG8uby5sYXllci5wb3NpdGlvbiddLnNwbGl0KCcsJyk7XG5cbiAgICAgIHRoaXMuby5wb3NpdGlvbiA9IFtwYXJzZUludChwZlBvc1swXSksIHBhcnNlSW50KHBmUG9zWzFdKV07XG4gICAgICB0aGlzLm8uY2xvc2UgPSBsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8uY2xvc2UnXSA9PT0gJ3RydWUnO1xuICAgICAgdGhpcy5vLmxheWVyLmN1cnJlbnQgPSBwYXJzZUludChsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8ubGF5ZXIuY3VycmVudCddKTtcbiAgICAgIHRoaXMuby5sYXllci5zaG93ID0gbG9jYWxTdG9yYWdlWydQZXJmZXR0by5vLmxheWVyLnNob3cnXSA9PT0gJ3RydWUnO1xuICAgICAgdGhpcy5vLmxheWVyLmxvY2sgPSBsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8ubGF5ZXIubG9jayddID09PSAndHJ1ZSc7XG4gICAgICB0aGlzLm8ubGF5ZXIudXJsID0gbG9jYWxTdG9yYWdlWydQZXJmZXR0by5vLmxheWVyLnVybCddO1xuICAgICAgdGhpcy5vLmxheWVyLnBvc2l0aW9uID0gW3BhcnNlSW50KGxheWVyUG9zWzBdKSwgcGFyc2VJbnQobGF5ZXJQb3NbMV0pXTtcbiAgICAgIHRoaXMuby5sYXllci5vcGFjaXR5ID0gcGFyc2VGbG9hdChsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8ubGF5ZXIub3BhY2l0eSddKTtcbiAgICAgIHRoaXMuby5sYXllci56SW5kZXggPSBwYXJzZUludChsb2NhbFN0b3JhZ2VbJ1BlcmZldHRvLm8ubGF5ZXIuekluZGV4J10pO1xuICAgIH1cbiAgfTtcblxuICB0aGlzLmZpbGxPcHRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMucGYuc3R5bGUubGVmdCA9IGAke3RoaXMuby5wb3NpdGlvblswXX1weGA7XG4gICAgdGhpcy5wZi5zdHlsZS50b3AgPSBgJHt0aGlzLm8ucG9zaXRpb25bMV19cHggYDtcblxuICAgIGlmICh0aGlzLm8uY2xvc2UpIHtcbiAgICAgIHRoaXMudG9nZ2xlRW50cnlUb0hpZGRlbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRvZ2dsZUVudHJ5VG9WaXNpYmxlKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuby5sYXllci5zaG93KSB7XG4gICAgICB0aGlzLnRvZ2dsZVNob3dUb1Zpc2libGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50b2dnbGVTaG93VG9IaWRkZW4oKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5vLmxheWVyLmxvY2spIHtcbiAgICAgIHRoaXMudG9nZ2xlTG9ja1RvTG9ja2VkKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudG9nZ2xlTG9ja1RvVW5sb2NrZWQoKTtcbiAgICB9XG5cbiAgICB0aGlzLmMudXJsLnZhbHVlID0gdGhpcy5vLmxheWVyLnVybDtcbiAgICB0aGlzLmNoYW5nZVVSTCgpO1xuXG4gICAgdGhpcy5jLnBvc2l0aW9uLngudmFsdWUgPSB0aGlzLm8ubGF5ZXIucG9zaXRpb25bMF07XG4gICAgdGhpcy5jLnBvc2l0aW9uLnkudmFsdWUgPSB0aGlzLm8ubGF5ZXIucG9zaXRpb25bMV07XG4gICAgdGhpcy5jaGFuZ2VQb3NpdGlvbigpO1xuXG4gICAgdGhpcy5jLm9wYWNpdHkudmFsdWUgPSB0aGlzLm8ubGF5ZXIub3BhY2l0eTtcbiAgICB0aGlzLmNoYW5nZU9wYWNpdHkoKTtcblxuICAgIHRoaXMuYy56SW5kZXgudmFsdWUgPSB0aGlzLm8ubGF5ZXIuekluZGV4O1xuICAgIHRoaXMuY2hhbmdlWkluZGV4KCk7XG4gIH07XG5cbiAgdGhpcy51cGRhdGVPcHRpb25zID0gZnVuY3Rpb24gKGUpIHtcbiAgICBzd2l0Y2ggKGUuY3VycmVudFRhcmdldC5uYW1lKSB7XG4gICAgICBjYXNlICd1cmwnOlxuICAgICAgICB0aGlzLm8ubGF5ZXIudXJsID0gdGhpcy5jLnVybC52YWx1ZTtcbiAgICAgICAgdGhpcy5jaGFuZ2VVUkwoKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3Bvcy14JzpcbiAgICAgICAgdGhpcy5vLmxheWVyLnBvc2l0aW9uWzBdID0gdGhpcy5jLnBvc2l0aW9uLngudmFsdWU7XG4gICAgICAgIHRoaXMuY2hhbmdlUG9zaXRpb24oKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3Bvcy15JzpcbiAgICAgICAgdGhpcy5vLmxheWVyLnBvc2l0aW9uWzFdID0gdGhpcy5jLnBvc2l0aW9uLnkudmFsdWU7XG4gICAgICAgIHRoaXMuY2hhbmdlUG9zaXRpb24oKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ29wYWNpdHknOlxuICAgICAgICB0aGlzLm8ubGF5ZXIub3BhY2l0eSA9IHRoaXMuYy5vcGFjaXR5LnZhbHVlO1xuICAgICAgICB0aGlzLmNoYW5nZU9wYWNpdHkoKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3ppbmRleCc6XG4gICAgICAgIHRoaXMuby5sYXllci56SW5kZXggPSB0aGlzLmMuekluZGV4LnZhbHVlO1xuICAgICAgICB0aGlzLmNoYW5nZVpJbmRleCgpO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLnNhdmVPcHRpb25zKCk7XG4gIH07XG5cbiAgdGhpcy52YWx1ZUNoYW5nZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKGUua2V5Q29kZSA9PSAzOCkge1xuICAgICAgaWYgKGUuY3VycmVudFRhcmdldC5uYW1lID09ICdvcGFjaXR5Jykge1xuICAgICAgICB2YXIgdmFsdWUgPSBlLmN1cnJlbnRUYXJnZXQudmFsdWUgKiAxMCArIDE7XG4gICAgICAgIGlmICh2YWx1ZSA+IDEwKSB2YWx1ZSA9IDEwO1xuICAgICAgICB0aGlzLmMub3BhY2l0eS52YWx1ZSA9IHZhbHVlIC8gMTA7XG4gICAgICB9IGVsc2UgaWYgKGUuY3VycmVudFRhcmdldC5uYW1lID09ICdwb3MteCcgfHwgZS5jdXJyZW50VGFyZ2V0Lm5hbWUgPT0gJ3Bvcy15Jykge1xuICAgICAgICBpZiAoIXRoaXMuby5sYXllci5sb2NrKSBlLmN1cnJlbnRUYXJnZXQudmFsdWUrKztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGUuY3VycmVudFRhcmdldC52YWx1ZSsrO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09IDQwKSB7XG4gICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0Lm5hbWUgPT0gJ29wYWNpdHknKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IGUuY3VycmVudFRhcmdldC52YWx1ZSAqIDEwIC0gMTtcbiAgICAgICAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAwO1xuICAgICAgICB0aGlzLmMub3BhY2l0eS52YWx1ZSA9IHZhbHVlIC8gMTA7XG4gICAgICB9IGVsc2UgaWYgKGUuY3VycmVudFRhcmdldC5uYW1lID09ICdwb3MteCcgfHwgZS5jdXJyZW50VGFyZ2V0Lm5hbWUgPT0gJ3Bvcy15Jykge1xuICAgICAgICBpZiAoIXRoaXMuby5sYXllci5sb2NrKSBlLmN1cnJlbnRUYXJnZXQudmFsdWUtLTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGUuY3VycmVudFRhcmdldC52YWx1ZS0tO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB0aGlzLmRyYWdUbyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgbGV0IGVsID0gZS5jdXJyZW50VGFyZ2V0O1xuXG4gICAgaWYgKGVsID09IHRoaXMuYy5oZWFkKSBlbCA9IHRoaXMucGY7XG5cbiAgICBpZiAoZWwuY2xhc3NOYW1lICE9IHNlbGYuby5uYW1lc3BhY2VzLmxheWVyIHx8IChlbC5jbGFzc05hbWUgPT0gc2VsZi5vLm5hbWVzcGFjZXMubGF5ZXIgJiYgIXNlbGYuby5sYXllci5sb2NrKSkge1xuICAgICAgY29uc3Qgc2hpZnRYID0gZS5wYWdlWCAtIGVsLm9mZnNldExlZnQ7XG4gICAgICBjb25zdCBzaGlmdFkgPSBlLnBhZ2VZIC0gZWwub2Zmc2V0VG9wO1xuXG4gICAgICBmdW5jdGlvbiBtb3ZlQXQoZSkge1xuICAgICAgICBjb25zdCB4ID0gZS5wYWdlWCAtIHNoaWZ0WDtcbiAgICAgICAgY29uc3QgeSA9IGUucGFnZVkgLSBzaGlmdFk7XG5cbiAgICAgICAgZWwuc3R5bGUubGVmdCA9IGAke3h9cHhgO1xuICAgICAgICBlbC5zdHlsZS50b3AgPSBgJHt5fXB4YDtcblxuICAgICAgICBpZiAoZWwuY2xhc3NOYW1lID09IHNlbGYuby5uYW1lc3BhY2VzLndyYXBwZXIpIHtcbiAgICAgICAgICBzZWxmLm8ucG9zaXRpb25bMF0gPSB4O1xuICAgICAgICAgIHNlbGYuby5wb3NpdGlvblsxXSA9IHk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWwuY2xhc3NOYW1lID09IHNlbGYuby5uYW1lc3BhY2VzLmxheWVyKSB7XG4gICAgICAgICAgc2VsZi5jLnBvc2l0aW9uLngudmFsdWUgPSBzZWxmLm8ubGF5ZXIucG9zaXRpb25bMF0gPSB4O1xuICAgICAgICAgIHNlbGYuYy5wb3NpdGlvbi55LnZhbHVlID0gc2VsZi5vLmxheWVyLnBvc2l0aW9uWzFdID0geTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNlbGYuc2F2ZU9wdGlvbnMoKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gY2xlYXJFdmVudCgpIHtcbiAgICAgICAgc2VsZi51bmJpbmQoW2RvY3VtZW50XSwgJ21vdXNlbW92ZScsIG1vdmVBdCk7XG4gICAgICAgIHNlbGYudW5iaW5kKFtkb2N1bWVudF0sICdtb3VzZXVwJywgY2xlYXJFdmVudCk7XG4gICAgICB9XG5cbiAgICAgIHNlbGYuYmluZChbZG9jdW1lbnRdLCAnbW91c2Vtb3ZlJywgbW92ZUF0KTtcbiAgICAgIHNlbGYuYmluZChbZG9jdW1lbnRdLCAnbW91c2V1cCcsIGNsZWFyRXZlbnQpO1xuICAgIH1cbiAgfTtcblxuICB0aGlzLnRvZ2dsZUxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuby5sYXllci5sb2NrKSB7XG4gICAgICB0aGlzLnRvZ2dsZUxvY2tUb1VubG9ja2VkKCk7XG4gICAgICB0aGlzLm8ubGF5ZXIubG9jayA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRvZ2dsZUxvY2tUb0xvY2tlZCgpO1xuICAgICAgdGhpcy5vLmxheWVyLmxvY2sgPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMuc2F2ZU9wdGlvbnMoKTtcbiAgfTtcblxuICB0aGlzLnRvZ2dsZUxvY2tUb0xvY2tlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnJlbW92ZUNsYXNzKHRoaXMuYy5sb2NrLCAnX191bmxvY2snKTtcbiAgICB0aGlzLmFkZENsYXNzKHRoaXMuYy5sb2NrLCAnX19sb2NrJyk7XG4gIH07XG5cbiAgdGhpcy50b2dnbGVMb2NrVG9VbmxvY2tlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnJlbW92ZUNsYXNzKHRoaXMuYy5sb2NrLCAnX19sb2NrJyk7XG4gICAgdGhpcy5hZGRDbGFzcyh0aGlzLmMubG9jaywgJ19fdW5sb2NrJyk7XG4gIH07XG5cbiAgdGhpcy50b2dnbGVTaG93ID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLm8ubGF5ZXIuc2hvdykge1xuICAgICAgdGhpcy50b2dnbGVTaG93VG9IaWRkZW4oKTtcbiAgICAgIHRoaXMuby5sYXllci5zaG93ID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudG9nZ2xlU2hvd1RvVmlzaWJsZSgpO1xuICAgICAgdGhpcy5vLmxheWVyLnNob3cgPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMuc2F2ZU9wdGlvbnMoKTtcbiAgfTtcblxuICB0aGlzLnRvZ2dsZVNob3dUb1Zpc2libGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5yZW1vdmVDbGFzcyh0aGlzLmMuc2hvdywgJ19fb2ZmJyk7XG4gICAgdGhpcy5hZGRDbGFzcyh0aGlzLmMuc2hvdywgJ19fb24nKTtcbiAgICB0aGlzLmxheWVyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICB9O1xuXG4gIHRoaXMudG9nZ2xlU2hvd1RvSGlkZGVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMucmVtb3ZlQ2xhc3ModGhpcy5jLnNob3csICdfX29uJyk7XG4gICAgdGhpcy5hZGRDbGFzcyh0aGlzLmMuc2hvdywgJ19fb2ZmJyk7XG4gICAgdGhpcy5sYXllci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB9O1xuXG4gIHRoaXMudG9nZ2xlRW50cnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuby5jbG9zZSkge1xuICAgICAgdGhpcy50b2dnbGVFbnRyeVRvVmlzaWJsZSgpO1xuICAgICAgdGhpcy5vLmNsb3NlID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudG9nZ2xlRW50cnlUb0hpZGRlbigpO1xuICAgICAgdGhpcy5vLmNsb3NlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB0aGlzLnNhdmVPcHRpb25zKCk7XG4gIH07XG5cbiAgdGhpcy50b2dnbGVFbnRyeVRvVmlzaWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmFkZENsYXNzKHRoaXMuYy5lbnRyeSwgJ19fdmlzaWJsZScpO1xuICAgIHRoaXMuYy5lbnRyeS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgfTtcblxuICB0aGlzLnRvZ2dsZUVudHJ5VG9IaWRkZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5yZW1vdmVDbGFzcyh0aGlzLmMuZW50cnksICdfX3Zpc2libGUnKTtcbiAgICB0aGlzLmMuZW50cnkuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfTtcblxuICB0aGlzLmNoYW5nZVVSTCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxheWVyLmlubmVySFRNTCA9IGA8aW1nIHNyYz1cIiR7dGhpcy5vLmxheWVyLnVybH1cIi8+YDtcbiAgfTtcblxuICB0aGlzLmNoYW5nZVBvc2l0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMubGF5ZXIuc3R5bGUubGVmdCA9IGAke3RoaXMuby5sYXllci5wb3NpdGlvblswXX1weGA7XG4gICAgdGhpcy5sYXllci5zdHlsZS50b3AgPSBgJHt0aGlzLm8ubGF5ZXIucG9zaXRpb25bMV19cHhgO1xuICB9O1xuXG4gIHRoaXMuY2hhbmdlT3BhY2l0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxheWVyLnN0eWxlLm9wYWNpdHkgPSB0aGlzLm8ubGF5ZXIub3BhY2l0eTtcbiAgfTtcblxuICB0aGlzLmNoYW5nZVpJbmRleCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxheWVyLnN0eWxlLnpJbmRleCA9IHRoaXMuby5sYXllci56SW5kZXg7XG4gIH07XG5cbiAgdGhpcy5oYXNDbGFzcyA9IGZ1bmN0aW9uIChlbGVtLCBjbGFzc05hbWUpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cChgICR7Y2xhc3NOYW1lfSBgKS50ZXN0KGAgJHtlbGVtLmNsYXNzTmFtZX0gYCk7XG4gIH07XG5cbiAgdGhpcy5hZGRDbGFzcyA9IGZ1bmN0aW9uIChlbGVtLCBjbGFzc05hbWUpIHtcbiAgICBpZiAoIXRoaXMuaGFzQ2xhc3MoZWxlbSwgY2xhc3NOYW1lKSkge1xuICAgICAgZWxlbS5jbGFzc05hbWUgKz0gYCAke2NsYXNzTmFtZX1gO1xuICAgIH1cbiAgfTtcblxuICB0aGlzLnJlbW92ZUNsYXNzID0gZnVuY3Rpb24gKGVsZW0sIGNsYXNzTmFtZSkge1xuICAgIGxldCBuZXdDbGFzcyA9IGAgJHtlbGVtLmNsYXNzTmFtZS5yZXBsYWNlKC9bXFx0XFxyXFxuXS9nLCAnICcpfSBgO1xuICAgIGlmICh0aGlzLmhhc0NsYXNzKGVsZW0sIGNsYXNzTmFtZSkpIHtcbiAgICAgIHdoaWxlIChuZXdDbGFzcy5pbmRleE9mKGAgJHtjbGFzc05hbWV9IGApID49IDApIHtcbiAgICAgICAgbmV3Q2xhc3MgPSBuZXdDbGFzcy5yZXBsYWNlKGAgJHtjbGFzc05hbWV9IGAsICcgJyk7XG4gICAgICB9XG4gICAgICBlbGVtLmNsYXNzTmFtZSA9IG5ld0NsYXNzLnJlcGxhY2UoL15cXHMrfFxccyskL2csICcnKTtcbiAgICB9XG4gIH07XG5cbiAgdGhpcy5iaW5kID0gZnVuY3Rpb24gKGVsZW0sIGV2ZW50LCBjYWxsYmFjaykge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGVsZW1baV0uYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBlbGVtW2ldLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGNhbGxiYWNrKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1baV0uYXR0YWNoRXZlbnQoYG9uJHtldmVudH1gLCBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHRoaXMudW5iaW5kID0gZnVuY3Rpb24gKGVsZW0sIGV2ZW50LCBjYWxsYmFjaykge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGVsZW1baV0ucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBlbGVtW2ldLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGNhbGxiYWNrKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1baV0uZGV0YWNoRXZlbnQoYG9uJHtldmVudH1gLCBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHRoaXMucHJveHkgPSBmdW5jdGlvbiAoZnVuYywgYXJncywgY29udGV4dCkge1xuICAgIGNvbnRleHQgPSBjb250ZXh0IHx8IHRoaXM7XG4gICAgYXJncyA9IGFyZ3MgfHwgW107XG5cbiAgICBpZiAodHlwZW9mIGZ1bmMgPT09ICdzdHJpbmcnKSBmdW5jID0gY29udGV4dFtmdW5jXTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCBhID0gYXJncy5zbGljZSgpO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgaWYgKHR5cGVvZiBhW2ldID09PSAndW5kZWZpbmVkJyB8fCBhW2ldID09PSBudWxsKSBhW2ldID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICByZXR1cm4gZnVuYy5hcHBseShjb250ZXh0LCBhKTtcbiAgICB9O1xuICB9O1xuXG4gIHRoaXMubyA9IHtcbiAgICBuYW1lc3BhY2VzOiB7XG4gICAgICB3cmFwcGVyOiAncGYnLFxuICAgICAgbGF5ZXI6ICdwZl9sYXllcicsXG4gICAgfSxcbiAgICBwb3NpdGlvbjogWzE1LCAxNV0sXG4gICAgY2xvc2U6IGZhbHNlLFxuICAgIGxheWVyOiB7XG4gICAgICBjdXJyZW50OiAwLFxuICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgIGxvY2s6IGZhbHNlLFxuICAgICAgdXJsOiAnL3BlcmZldHRvL2xheWVycy9pbmRleC5qcGcnLFxuICAgICAgcG9zaXRpb246IFswLCAwXSxcbiAgICAgIG9wYWNpdHk6IDAuNSxcbiAgICAgIHpJbmRleDogMTAwMCxcbiAgICB9LFxuICB9O1xuXG4gIHRoaXMuaW5pdCgpO1xufSgpO1xuIiwiY2xhc3MgRHJvcGRvd25Db250cm9sIHtcbiAgY29uc3RydWN0b3IoZWxlbWVudCwgdXBkYXRlKSB7XG4gICAgdGhpcy5pdGVtcyA9IGVsZW1lbnQ7XG4gICAgdGhpcy5nZXRFbGVtZW50KCk7XG4gICAgdGhpcy5oYW5kbGVyc0JpbmQoKTtcbiAgICB0aGlzLmNoZWNrVmFsdWUoKTtcbiAgICB0aGlzLnVwZGF0ZSA9IHVwZGF0ZTtcbiAgfVxuXG4gIGdldEVsZW1lbnQoKSB7XG4gICAgdGhpcy5vcHRpb24gPSB0aGlzLml0ZW1zLnF1ZXJ5U2VsZWN0b3IoJy5kcm9wZG93bi1jb3VudGVyc19fY29udHJvbHMnKTtcblxuICAgIHRoaXMuaW5wdXQgPSB0aGlzLml0ZW1zLnF1ZXJ5U2VsZWN0b3IoJy5kcm9wZG93bi1jb3VudGVyc19fdmFsdWUnKTtcbiAgICB0aGlzLm1heCA9IE51bWJlcih0aGlzLmlucHV0Lm1heCk7XG4gICAgdGhpcy5taW4gPSBOdW1iZXIodGhpcy5pbnB1dC5taW4pO1xuICAgIHRoaXMudmFsdWUgPSBOdW1iZXIodGhpcy5pbnB1dC52YWx1ZSk7XG4gICAgdGhpcy5wbHVzQWxsID0gdGhpcy5pdGVtcy5xdWVyeVNlbGVjdG9yQWxsKCcuZHJvcGRvd24tY291bnRlcnNfX3BsdXMnKTtcbiAgICB0aGlzLnBsdXNBbGwuZm9yRWFjaCgocGx1cykgPT4ge1xuICAgICAgdGhpcy5wbHVzQnV0dG9uID0gcGx1cztcbiAgICB9KTtcbiAgICB0aGlzLm1pbnVzQWxsID0gdGhpcy5pdGVtcy5xdWVyeVNlbGVjdG9yQWxsKCcuZHJvcGRvd24tY291bnRlcnNfX21pbnVzJyk7XG4gICAgdGhpcy5taW51c0FsbC5mb3JFYWNoKChtaW51cykgPT4ge1xuICAgICAgdGhpcy5taW51c0J1dHRvbiA9IG1pbnVzO1xuICAgIH0pO1xuICB9XG5cbiAgaGFuZGxlcnNCaW5kKCkge1xuICAgIHRoaXMuaGFuZGxlclBsdXMgPSB0aGlzLmhhbmRsZXJQbHVzLmJpbmQodGhpcyk7XG4gICAgdGhpcy5wbHVzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVyUGx1cyk7XG4gICAgdGhpcy5oYW5kbGVyTWludXMgPSB0aGlzLmhhbmRsZXJNaW51cy5iaW5kKHRoaXMpO1xuICAgIHRoaXMubWludXNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZXJNaW51cyk7XG4gIH1cblxuICBoYW5kbGVyUGx1cygpIHtcbiAgICB0aGlzLnVwVmFsdWUodGhpcy52YWx1ZSArIDEpO1xuICB9XG5cbiAgaGFuZGxlck1pbnVzKCkge1xuICAgIHRoaXMudXBWYWx1ZSh0aGlzLnZhbHVlIC0gMSk7XG4gIH1cblxuICB1cFZhbHVlKHZhbCkge1xuICAgIGlmICh2YWwgPD0gdGhpcy5tYXggJiYgdmFsID49IHRoaXMubWluKSB7XG4gICAgICB0aGlzLnZhbHVlID0gdmFsO1xuICAgIH0gZWxzZSBpZiAodmFsID09PSAwKSB7XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5taW47XG4gICAgfVxuXG4gICAgdGhpcy51cGRhdGVWYWx1ZSgpO1xuICAgIHRoaXMuY2hlY2tWYWx1ZSgpO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICB1cGRhdGVWYWx1ZSgpIHtcbiAgICB0aGlzLmlucHV0LnZhbHVlID0gdGhpcy52YWx1ZTtcbiAgfVxuXG4gIGNoZWNrVmFsdWUoKSB7XG4gICAgaWYgKHRoaXMudmFsdWUgPT09IHRoaXMubWluKSB7XG4gICAgICB0aGlzLmRlYWN0aXZhdGVNaW51cygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFjdGl2YXRlTWludXMoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy52YWx1ZSA9PT0gdGhpcy5tYXgpIHtcbiAgICAgIHRoaXMuZGVhY3RpdmF0ZVBsdXMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hY3RpdmF0ZVBsdXMoKTtcbiAgICB9XG4gIH1cblxuICBpc01pbigpIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZSA9PT0gdGhpcy5taW47XG4gIH1cblxuICBpc1plcnJvKCkge1xuICAgIHJldHVybiB0aGlzLnZhbHVlID09PSAwO1xuICB9XG5cbiAgZ2V0VmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gIH1cblxuICBhY3RpdmF0ZVBsdXMoKSB7XG4gICAgaWYgKHRoaXMucGx1c0J1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2Ryb3Bkb3duLWNvdW50ZXJzX19wbHVzX2Rpc2FibGVkJykpIHtcbiAgICAgIHRoaXMucGx1c0J1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdkcm9wZG93bi1jb3VudGVyc19fcGx1c19kaXNhYmxlZCcpO1xuICAgICAgdGhpcy5wbHVzQnV0dG9uLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgICB9XG4gIH1cblxuICBkZWFjdGl2YXRlUGx1cygpIHtcbiAgICB0aGlzLnBsdXNCdXR0b24uY2xhc3NMaXN0LmFkZCgnZHJvcGRvd24tY291bnRlcnNfX3BsdXNfZGlzYWJsZWQnKTtcbiAgICB0aGlzLnBsdXNCdXR0b24uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICd0cnVlJyk7XG4gIH1cblxuICBhY3RpdmF0ZU1pbnVzKCkge1xuICAgIGlmIChcbiAgICAgIHRoaXMubWludXNCdXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdkcm9wZG93bi1jb3VudGVyc19fbWludXNfZGlzYWJsZWQnKVxuICAgICkge1xuICAgICAgdGhpcy5taW51c0J1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdkcm9wZG93bi1jb3VudGVyc19fbWludXNfZGlzYWJsZWQnKTtcbiAgICB9XG4gIH1cblxuICBkZWFjdGl2YXRlTWludXMoKSB7XG4gICAgdGhpcy5taW51c0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdkcm9wZG93bi1jb3VudGVyc19fbWludXNfZGlzYWJsZWQnKTtcbiAgfVxufVxuXG5leHBvcnQge1xuICBEcm9wZG93bkNvbnRyb2wsXG59O1xuIiwiaW1wb3J0IHtcbiAgRHJvcGRvd25Db250cm9sLFxufSBmcm9tICcuLi9kcm9wZG93bi1jb3VudGVycy9kcm9wZG93bi1jb3VudGVycyc7XG5cbmNsYXNzIERyb3Bkb3duIHtcbiAgY29uc3RydWN0b3IoZHJvcGRvd24pIHtcbiAgICB0aGlzLmRyb3Bkb3duID0gZHJvcGRvd247XG4gICAgdGhpcy5maW5kRWxlbWVudCgpO1xuICAgIHRoaXMuaGFuZGxlcnNCaW5kKCk7XG4gICAgdGhpcy5kZWZhdWx0U3VtKCk7XG4gICAgdGhpcy5jb250cm9scyA9IFsuLi50aGlzLnZhbHVlc10ubWFwKFxuICAgICAgKGl0ZW0pID0+IG5ldyBEcm9wZG93bkNvbnRyb2woaXRlbSwgKCkgPT4gdGhpcy51cGRhdGUoKSksXG4gICAgKTtcbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9XG5cbiAgZmluZEVsZW1lbnQoKSB7XG4gICAgdGhpcy5tZW51ID0gdGhpcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yKCcuZHJvcGRvd25fX21lbnUnKTtcbiAgICB0aGlzLnRvZ2dsZSA9IHRoaXMuZHJvcGRvd24ucXVlcnlTZWxlY3RvcignLmRyb3Bkb3duX19zZWN0aW9uJyk7XG4gICAgdGhpcy50aXRsZSA9IHRoaXMuZHJvcGRvd24ucXVlcnlTZWxlY3RvcignLmRyb3Bkb3duX190aXRsZScpO1xuICAgIHRoaXMuaXNHdWVzdHMgPSB0aGlzLmRyb3Bkb3duLmNsYXNzTGlzdC5jb250YWlucygnZHJvcGRvd25fZ3Vlc3QnKTtcbiAgICB0aGlzLmRlZmF1bHRUaXRsZSA9IHRoaXMuZHJvcGRvd24uZGF0YXNldC5kZWZhdWx0IHx8ICcnO1xuICAgIHRoaXMudmFsdWVzID0gdGhpcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yQWxsKCcuZHJvcGRvd24tY291bnRlcnMnKTtcbiAgICB0aGlzLmJ1dHRvbkNsZWFyID0gdGhpcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yKCcuZHJvcGRvd25fX2J1dHRvbl9jbGVhcicpIHx8IHVuZGVmaW5lZDtcbiAgICB0aGlzLmJ1dHRvblVzZSA9IHRoaXMuZHJvcGRvd24ucXVlcnlTZWxlY3RvcignLmRyb3Bkb3duX19idXR0b25fdXNlJykgfHwgdW5kZWZpbmVkO1xuICB9XG5cbiAgaGFuZGxlcnNCaW5kKCkge1xuICAgIHRoaXMuaGFuZGxlck1lbnUgPSB0aGlzLmhhbmRsZXJNZW51LmJpbmQodGhpcyk7XG4gICAgdGhpcy50b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZXJNZW51KTtcbiAgICB0aGlzLmhhbmRsZXJEb2N1bWVudCA9IHRoaXMuaGFuZGxlckRvY3VtZW50LmJpbmQodGhpcyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZXJEb2N1bWVudCk7XG4gICAgaWYgKHRoaXMuYnV0dG9uVXNlKSB0aGlzLmhhbmRsZXJVc2UgPSB0aGlzLmhhbmRsZXJVc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmJ1dHRvblVzZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlclVzZSk7XG4gICAgaWYgKHRoaXMuYnV0dG9uQ2xlYXIpIHRoaXMuaGFuZGxlckNsZWFyID0gdGhpcy5oYW5kbGVyQ2xlYXIuYmluZCh0aGlzKTtcbiAgICB0aGlzLmJ1dHRvbkNsZWFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVyQ2xlYXIpO1xuICB9XG5cbiAgaGFuZGxlck1lbnUoKSB7XG4gICAgdGhpcy5tZW51LmNsYXNzTGlzdC50b2dnbGUoJ2Ryb3Bkb3duX2FjdGl2ZScpO1xuICAgIHRoaXMudGl0bGUuY2xhc3NMaXN0LnRvZ2dsZSgndGl0bGUtYWN0aXZlJyk7XG4gIH1cblxuICBoYW5kbGVyRG9jdW1lbnQoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5kcm9wZG93bicpICE9PSB0aGlzLmRyb3Bkb3duKSB7XG4gICAgICB0aGlzLmNsb3NlRHJvcGRvd24oKTtcbiAgICB9XG4gIH1cblxuICBjbG9zZURyb3Bkb3duKCkge1xuICAgIGNvbnN0IGlzRHJvcGRvd25DbG9zZWQgPSAgdGhpcy5tZW51LmNsYXNzTGlzdC5jb250YWlucygnZHJvcGRvd25fYWN0aXZlJyk7XG4gICAgaWYgKGlzRHJvcGRvd25DbG9zZWQpIHtcbiAgICAgIHRoaXMubWVudS5jbGFzc0xpc3QucmVtb3ZlKCdkcm9wZG93bl9hY3RpdmUnKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVyVXNlKGV2ZW50KSB7XG4gICAgaWYgKHRoaXMuc3VtR3Vlc3RzICE9PSAwKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5jbG9zZURyb3Bkb3duKCk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlckNsZWFyKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmNvbnRyb2xzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgIGVsZW1lbnQudXBWYWx1ZSgwKTtcbiAgICB9KTtcbiAgfVxuXG4gIHVwZGF0ZSgpIHtcbiAgICB0aGlzLnVwZGF0ZVRpdGxlKCk7XG4gICAgdGhpcy5jaGVja0FkdWx0QnV0dG9uVXNlKCk7XG4gIH1cblxuICBjaGVja0J1dHRvbkNsZWFyKCkge1xuICAgIGNvbnN0IGFsbE1pbiA9ICF0aGlzLmNvbnRyb2xzLm1hcCgoaXRlbSkgPT4gaXRlbS5pc01pbigpKS5pbmNsdWRlcyhmYWxzZSk7XG4gICAgaWYgKGFsbE1pbiA9PT0gdHJ1ZSkge1xuICAgICAgdGhpcy5oaWRkZW5DbGVhckJ1dHRvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnZpc2libGVDbGVhckJ1dHRvbigpO1xuICAgIH1cbiAgfVxuXG4gIGNoZWNrQnV0dG9uVXNlKCkge1xuICAgIGNvbnN0IGlzQWxsWmVycm8gPSAhdGhpcy5jb250cm9sc1xuICAgIC5tYXAoKGl0ZW0pID0+IGl0ZW0uaXNaZXJybygpKVxuICAgIC5pbmNsdWRlcyhmYWxzZSk7XG4gICAgaWYgKGlzQWxsWmVycm8gPT09IHRydWUpIHtcbiAgICAgIHRoaXMuaGlkZGVuQnV0dG9uVXNlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmlzaWJsZUJ1dHRvblVzZSgpO1xuICAgIH1cbiAgfVxuXG4gIGNoZWNrQWR1bHRCdXR0b25Vc2UoKSB7XG4gICAgaWYgKHRoaXMuc3VtQWR1bHQgPT09IDAgJiYgdGhpcy5zdW1CYWJpZXMgPiAwKSB7XG4gICAgICB0aGlzLmhpZGRlbkJ1dHRvblVzZSgpO1xuICAgIH1cbiAgfVxuXG4gIGhpZGRlbkNsZWFyQnV0dG9uKCkge1xuICAgIHRoaXMuYnV0dG9uQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gIH1cblxuICB2aXNpYmxlQ2xlYXJCdXR0b24oKSB7XG4gICAgdGhpcy5idXR0b25DbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiXG4gIH1cblxuICBoaWRkZW5CdXR0b25Vc2UoKSB7XG4gICAgdGhpcy5idXR0b25Vc2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gIH1cblxuICB2aXNpYmxlQnV0dG9uVXNlKCkge1xuICAgIHRoaXMuYnV0dG9uVXNlLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCJcbiAgfVxuXG4gIGZvcm1EZWNsZW5zaW9uKG51bWJlciwgZm9ybSkge1xuICAgIG51bWJlciA9IE1hdGguYWJzKG51bWJlcikgJSAxMDA7XG4gICAgY29uc3QgbjEgPSBudW1iZXIgJSAxMDtcbiAgICBpZiAobnVtYmVyID4gMTAgJiYgbnVtYmVyIDwgMjApIHtcbiAgICAgIHJldHVybiBmb3JtWzJdO1xuICAgIH1cbiAgICBpZiAobjEgPiAxICYmIG4xIDwgNSkge1xuICAgICAgcmV0dXJuIGZvcm1bMV07XG4gICAgfVxuICAgIGlmIChuMSA9PT0gMSkge1xuICAgICAgcmV0dXJuIGZvcm1bMF07XG4gICAgfVxuICAgIHJldHVybiBmb3JtWzJdO1xuICB9XG5cbiAgZGVmYXVsdFN1bSgpIHtcbiAgICBsZXQgRGVmYXVsdFN1bSA9IDBcbiAgICB0aGlzLnZhbHVlcy5mb3JFYWNoKChpdGVtKT0+IHtcbiAgICAgIHRoaXMuQWxsSW5wdXQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcm9wZG93bi1jb3VudGVyc19fdmFsdWUnKVxuXG4gICAgICB0aGlzLkFsbElucHV0LmZvckVhY2goKGVsKT0+IHtcbiAgICAgICAgRGVmYXVsdFN1bSArPSBOdW1iZXIoZWwudmFsdWUpXG4gICAgICB9KX0pXG5cbiAgICB0aGlzLkRlZmF1bHRTdW0gPSBEZWZhdWx0U3VtXG4gIH1cblxuICAvLyDQu9C+0LPQuNC60LAg0LLRgdC10YUg0LfQsNCz0L7Qu9C+0LLQutC+0LJcbiAgdXBkYXRlVGl0bGUoKSB7XG4gICAgaWYgKHRoaXMuaXNHdWVzdHMgPT09IHRydWUpIHtcbiAgICAgIHRoaXMudXBkYXRlRHJvcGRvd25HdWVzdHMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy51cGRhdGVEcm9wZG93blJvb20oKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVEcm9wZG93bkd1ZXN0cygpIHtcbiAgICBjb25zdCBhcnJheSA9IHRoaXMuY29udHJvbHMubWFwKChpdGVtKSA9PiBpdGVtLmdldFZhbHVlKCkpO1xuXG4gICAgY29uc3QgW2FkdWx0cyxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgYmFiaWVzXSA9IFthcnJheVswXSxcbiAgICAgIGFycmF5WzFdLFxuICAgICAgYXJyYXlbMl1dO1xuXG4gICAgdGhpcy5zdW1HdWVzdHMgPSBhZHVsdHMgKyBjaGlsZHJlbiArIGJhYmllcztcbiAgICB0aGlzLnN1bUFkdWx0ID0gYWR1bHRzICsgY2hpbGRyZW47XG4gICAgdGhpcy5zdW1CYWJpZXMgPSBiYWJpZXM7XG5cbiAgICBpZiAoYWR1bHRzICsgY2hpbGRyZW4gPCAxMCkge1xuXG4gICAgICB0aGlzLmNvbnRyb2xzLm1hcCgoaXRlbSkgPT4gaXRlbS5hY3RpdmF0ZVBsdXMoKSk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdW1BZHVsdCA9IDEwXG4gICAgICB0aGlzLmxlbmd0aCA9IHRoaXMuY29udHJvbHMubGVuZ3RoXG4gICAgICB0aGlzLmNvbnRyb2xzLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIGlmIChpbmRleCAhPT0gdGhpcy5sZW5ndGggLTEpIHtcbiAgICAgICAgICBpdGVtLmRlYWN0aXZhdGVQbHVzKClcbiAgICAgICAgfSBcbiAgICAgIH0pXG4gICAgfVxuICAgIGlmIChiYWJpZXMgPT09IDEwKSB7XG4gICAgICBsZXQgbGVuZ3RoID0gdGhpcy5jb250cm9scy5sZW5ndGhcbiAgICAgIHRoaXMuY29udHJvbHMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKGluZGV4ID09PSBsZW5ndGggLTEpIHtcbiAgICAgICAgICBpdGVtLmRlYWN0aXZhdGVQbHVzKClcbiAgICAgICAgfSBcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgaWYgKGFkdWx0cyA+IDAgfHwgY2hpbGRyZW4gPiAwKSB7XG4gICAgICB0aGlzLmNoZWNrQnV0dG9uQ2xlYXIoKTtcbiAgICAgIHRoaXMuY2hlY2tCdXR0b25Vc2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jaGVja0J1dHRvbkNsZWFyKCk7XG5cbiAgICB9XG5cbiAgICBjb25zdCBmb3JtR3Vlc3RzID0gWyfQs9C+0YHRgtGMJyxcbiAgICAgICfQs9C+0YHRgtGPJyxcbiAgICAgICfQs9C+0YHRgtC10LknXTtcbiAgICBjb25zdCBmb3JtTmV3Ym9ybnMgPSBbJ9C80LvQsNC00LXQvdC10YYnLFxuICAgICAgJ9C80LvQsNC00LXQvdGG0LAnLFxuICAgICAgJ9C80LvQsNC00LXQvdGG0LXQsiddO1xuICAgIHRoaXMubWVzc2FnZUd1ZXN0cyA9IHRoaXMuZm9ybURlY2xlbnNpb24odGhpcy5zdW1BZHVsdCwgZm9ybUd1ZXN0cyk7XG5cbiAgICB0aGlzLm1lc3NhZ2VOZXdib3JucyA9IHRoaXMuZm9ybURlY2xlbnNpb24odGhpcy5zdW1CYWJpZXMsIGZvcm1OZXdib3Jucyk7XG4gICAgaWYgKHRoaXMuc3VtQmFiaWVzID09PSAwICYmIHRoaXMuc3VtQWR1bHQgPT09IDApIHtcbiAgICAgIHRoaXMudGl0bGUuaW5uZXJIVE1MID0gJ9Ch0LrQvtC70YzQutC+INCz0L7RgdGC0LXQuSc7XG4gICAgfSBlbHNlIGlmICh0aGlzLnN1bUFkdWx0ICE9PSAwICYmIHRoaXMuc3VtQmFiaWVzID09PSAwKSB7XG4gICAgICB0aGlzLnRpdGxlLmlubmVySFRNTCA9IGAke3RoaXMuc3VtQWR1bHR9ICR7dGhpcy5tZXNzYWdlR3Vlc3RzfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudGl0bGUuaW5uZXJIVE1MID0gYCR7dGhpcy5zdW1BZHVsdH0gJHt0aGlzLm1lc3NhZ2VHdWVzdHN9LCAke3RoaXMuc3VtQmFiaWVzfSAke3RoaXMubWVzc2FnZU5ld2Jvcm5zfWA7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlRHJvcGRvd25Sb29tKCkge1xuICAgIGNvbnN0IGFycmF5ID0gdGhpcy5jb250cm9scy5tYXAoKGl0ZW0pID0+IGl0ZW0uZ2V0VmFsdWUoKSk7XG5cbiAgICBjb25zdCBbQmVkcm9vbSxcbiAgICAgIEJlZCxcbiAgICAgIEJhdGhyb29tXSA9IFthcnJheVswXSxcbiAgICAgIGFycmF5WzFdLFxuICAgICAgYXJyYXlbMl1dO1xuXG4gICAgbGV0IHN1bSA9IEJlZHJvb20gKyBCZWQgKyBCYXRocm9vbVxuXG4gICAgaWYgKHN1bSAhPT0gdGhpcy5EZWZhdWx0U3VtKSB7XG4gICAgdGhpcy5jaGVja0J1dHRvbkNsZWFyKCk7XG4gICAgICB0aGlzLmNoZWNrQnV0dG9uVXNlKCk7XG4gICAgfSBcblxuICAgIGNvbnN0IGZvcm1CZWRyb29tID0gWyfRgdC/0LDQu9GM0L3RjycsXG4gICAgICAn0YHQv9Cw0LvRjNC90LgnLFxuICAgICAgJ9GB0L/QsNC70LXQvSddO1xuICAgIGNvbnN0IGZvcm1CZWQgPSBbJ9C60YDQvtCy0LDRgtGMJyxcbiAgICAgICfQutGA0L7QstCw0YLQuCcsXG4gICAgICAn0LrRgNC+0LLQsNGC0LXQuSddO1xuICAgIGNvbnN0IGZvcm1CYXRocm9vbSA9IFsn0LLQsNC90L3QsNGPJyxcbiAgICAgICfQstCw0L3QvdGL0LUnLFxuICAgICAgJ9Cy0LDQvdC90YvRhSddO1xuXG4gICAgY29uc3QgbWVzc2FnZUJlZHJvb20gPSB0aGlzLmZvcm1EZWNsZW5zaW9uKEJlZHJvb20sIGZvcm1CZWRyb29tKTtcbiAgICBjb25zdCBtZXNzYWdlQmVkID0gdGhpcy5mb3JtRGVjbGVuc2lvbihCZWQsIGZvcm1CZWQpO1xuICAgIGNvbnN0IG1lc3NhZ2VCYXRocm9vbSA9IHRoaXMuZm9ybURlY2xlbnNpb24oQmF0aHJvb20sIGZvcm1CYXRocm9vbSk7XG5cbiAgICBpZiAoc3VtID4gMCAmJiBCYXRocm9vbSA+IDApIHtcbiAgICAgIHRoaXMudGl0bGUuaW5uZXJIVE1MID0gYCR7QmVkcm9vbX0gJHttZXNzYWdlQmVkcm9vbX0sICR7QmVkfSAke21lc3NhZ2VCZWR9LCR7QmF0aHJvb219ICR7bWVzc2FnZUJhdGhyb29tfWBcbiAgICAgICsgJy4uLic7XG4gICAgfSBlbHNlIHRoaXMudGl0bGUuaW5uZXJIVE1MID0gYCR7QmVkcm9vbX0gJHttZXNzYWdlQmVkcm9vbX0sICR7QmVkfSAke21lc3NhZ2VCZWR9Li4uYDtcbiAgfVxufVxuZXhwb3J0IHtcbiAgRHJvcGRvd24sXG59OyIsImltcG9ydCB7IERyb3Bkb3duIH0gZnJvbSAnLi9kcm9wZG93bic7XG5cbmZ1bmN0aW9uIG9uTG9hZCgpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRyb3Bkb3duJykuZm9yRWFjaCgoaXRlbSkgPT4gbmV3IERyb3Bkb3duKGl0ZW0pKTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBvbkxvYWQpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaGVhZGVyLW1haW4nKS5mb3JFYWNoKGZ1bmN0aW9uIChidXJnZXIpIHtcbiAgICB2YXIgYnV0dG9uID0gYnVyZ2VyLnF1ZXJ5U2VsZWN0b3IoJy5idXJnZXJfX2l0ZW0nKTtcbiAgICB2YXIgbmF2YmFyID0gYnVyZ2VyLnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXItbWFpbl9fbmF2Jyk7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tNZW51KTtcbiAgICBmdW5jdGlvbiBjbGlja01lbnUoKSB7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKTtcbiAgICAgICAgbmF2YmFyLmNsYXNzTGlzdC50b2dnbGUoJ2hlYWRlci1tYWluX19vcGVuLW1lbnUnKTtcbiAgICB9XG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xucmVxdWlyZShcIi4uLy4uL2Jsb2Nrcy9kcm9wZG93bi9kcm9wZG93bi1pbml0XCIpO1xucmVxdWlyZShcIi4uLy4uL3Njc3MvbWFpbi5zY3NzXCIpO1xucmVxdWlyZShcIi4vcmVnaXN0cmF0aW9uLnNjc3NcIik7XG5yZXF1aXJlKFwiLi4vLi4vLi4vcGl4ZWxcIik7XG5yZXF1aXJlKFwiLi4vLi4vYmxvY2tzL2J1cmdlci9idXJnZXJcIik7XG5yZXF1aXJlKFwiLi4vLi4vYmxvY2tzL2xvZ2ljLXJvb20tcmVnL2xvZ2ljLXJvb20tcmVnXCIpO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZWdpc3RyYXRpb24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3JlZ2lzdHJhdGlvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3JlZ2lzdHJhdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgc2lnbkluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbl9zaWduSW4nKTtcbnZhciBjcmVhdGVBY291bnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uX3JlZ0NyZWF0ZScpO1xudmFyIGZvcm1TaWduSW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVnaXN0cmF0aW9uLWNvbnRhaW5lcl9fc2lnbmluJyk7XG52YXIgZm9ybUNyZWF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZWdpc3RyYXRpb24tY29udGFpbmVyX19yZWcnKTtcbnZhciBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJlZ2lzdHJhdGlvbi1jb250YWluZXInKTtcbnNpZ25JbiA9PT0gbnVsbCB8fCBzaWduSW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNpZ25Jbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNpZ24pO1xuY3JlYXRlQWNvdW50ID09PSBudWxsIHx8IGNyZWF0ZUFjb3VudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY3JlYXRlQWNvdW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmVnKTtcbmZ1bmN0aW9uIHNpZ24oKSB7XG4gICAgZm9ybVNpZ25JbiA9PT0gbnVsbCB8fCBmb3JtU2lnbkluID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmb3JtU2lnbkluLmNsYXNzTGlzdC50b2dnbGUoJ3JlZ2lzdHJhdGlvbi1jb250YWluZXJfYWN0aXZlJyk7XG4gICAgZm9ybUNyZWF0ZSA9PT0gbnVsbCB8fCBmb3JtQ3JlYXRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmb3JtQ3JlYXRlLmNsYXNzTGlzdC5yZW1vdmUoJ3JlZ2lzdHJhdGlvbi1jb250YWluZXJfYWN0aXZlJyk7XG4gICAgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKHsgcGFyYW06ICdWYWx1ZScgfSwgJycsICdzaWduaW4uaHRtbCcpO1xuICAgIGNvbnRlbnQgPT09IG51bGwgfHwgY29udGVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX3JlZy1iZycpO1xuICAgIGNvbnRlbnQgPT09IG51bGwgfHwgY29udGVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudC5jbGFzc0xpc3QuYWRkKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX3NpZ25Jbi1iZycpO1xufVxuZnVuY3Rpb24gcmVnKCkge1xuICAgIGZvcm1DcmVhdGUgPT09IG51bGwgfHwgZm9ybUNyZWF0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZm9ybUNyZWF0ZS5jbGFzc0xpc3QudG9nZ2xlKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX2FjdGl2ZScpO1xuICAgIGZvcm1TaWduSW4gPT09IG51bGwgfHwgZm9ybVNpZ25JbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogZm9ybVNpZ25Jbi5jbGFzc0xpc3QucmVtb3ZlKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX2FjdGl2ZScpO1xuICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSh7IHBhcmFtOiAnVmFsdWUnIH0sICcnLCAncmVnaXN0cmF0aW9uLmh0bWwnKTtcbiAgICBjb250ZW50ID09PSBudWxsIHx8IGNvbnRlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgncmVnaXN0cmF0aW9uLWNvbnRhaW5lcl9yZWctYmcnKTtcbiAgICBjb250ZW50ID09PSBudWxsIHx8IGNvbnRlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnQuY2xhc3NMaXN0LnJlbW92ZSgncmVnaXN0cmF0aW9uLWNvbnRhaW5lcl9zaWduSW4tYmcnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=