!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=31)}([,function(t,e,n){var i,s,o={},r=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===s&&(s=i.apply(this,arguments)),s}),u=function(t,e){return e?e.querySelector(t):document.querySelector(t)},a=function(t){var e={};return function(t,n){if("function"==typeof t)return t();if(void 0===e[t]){var i=u.call(this,t,n);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}}(),l=null,c=0,h=[],d=n(4);function f(t,e){for(var n=0;n<t.length;n++){var i=t[n],s=o[i.id];if(s){s.refs++;for(var r=0;r<s.parts.length;r++)s.parts[r](i.parts[r]);for(;r<i.parts.length;r++)s.parts.push(g(i.parts[r],e))}else{var u=[];for(r=0;r<i.parts.length;r++)u.push(g(i.parts[r],e));o[i.id]={id:i.id,refs:1,parts:u}}}}function p(t,e){for(var n=[],i={},s=0;s<t.length;s++){var o=t[s],r=e.base?o[0]+e.base:o[0],u={css:o[1],media:o[2],sourceMap:o[3]};i[r]?i[r].parts.push(u):n.push(i[r]={id:r,parts:[u]})}return n}function v(t,e){var n=a(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=h[h.length-1];if("top"===t.insertAt)i?i.nextSibling?n.insertBefore(e,i.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),h.push(e);else if("bottom"===t.insertAt)n.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var s=a(t.insertAt.before,n);n.insertBefore(e,s)}}function m(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=h.indexOf(t);e>=0&&h.splice(e,1)}function y(t){var e=document.createElement("style");if(void 0===t.attrs.type&&(t.attrs.type="text/css"),void 0===t.attrs.nonce){var i=function(){0;return n.nc}();i&&(t.attrs.nonce=i)}return b(e,t.attrs),v(t,e),e}function b(t,e){Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])}))}function g(t,e){var n,i,s,o;if(e.transform&&t.css){if(!(o="function"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=o}if(e.singleton){var r=c++;n=l||(l=y(e)),i=k.bind(null,n,r,!1),s=k.bind(null,n,r,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",b(e,t.attrs),v(t,e),e}(e),i=L.bind(null,n,e),s=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(e),i=B.bind(null,n),s=function(){m(n)});return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else s()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=r()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=p(t,e);return f(n,e),function(t){for(var i=[],s=0;s<n.length;s++){var r=n[s];(u=o[r.id]).refs--,i.push(u)}t&&f(p(t,e),e);for(s=0;s<i.length;s++){var u;if(0===(u=i[s]).refs){for(var a=0;a<u.parts.length;a++)u.parts[a]();delete o[u.id]}}}};var w,_=(w=[],function(t,e){return w[t]=e,w.filter(Boolean).join("\n")});function k(t,e,n,i){var s=n?"":i.css;if(t.styleSheet)t.styleSheet.cssText=_(e,s);else{var o=document.createTextNode(s),r=t.childNodes;r[e]&&t.removeChild(r[e]),r.length?t.insertBefore(o,r[e]):t.appendChild(o)}}function B(t,e){var n=e.css,i=e.media;if(i&&t.setAttribute("media",i),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function L(t,e,n){var i=n.css,s=n.sourceMap,o=void 0===e.convertToAbsoluteUrls&&s;(e.convertToAbsoluteUrls||o)&&(i=d(i)),s&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */");var r=new Blob([i],{type:"text/css"}),u=t.href;t.href=URL.createObjectURL(r),u&&URL.revokeObjectURL(u)}},function(t,e,n){var i=n(3);"string"==typeof i&&(i=[[t.i,i,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};n(1)(i,s);i.locals&&(t.exports=i.locals)},function(t,e,n){},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,i=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(t,e){var s,o=e.trim().replace(/^"(.*)"$/,(function(t,e){return e})).replace(/^'(.*)'$/,(function(t,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?t:(s=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:i+o.replace(/^\.\//,""),"url("+JSON.stringify(s)+")")}))}},function(t,e,n){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}n.r(e);var s=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=e,this.getElement(),this.handlersBind(),this.checkValue(),this.update=n}var e,n,s;return e=t,(n=[{key:"getElement",value:function(){var t=this;this.option=this.items.querySelector(".dropdown-counters__controls"),this.input=this.items.querySelector(".dropdown-counters__value"),this.max=Number(this.input.max),this.min=Number(this.input.min),this.value=Number(this.input.value),this.plusAll=this.items.querySelectorAll(".dropdown-counters__plus"),this.plusAll.forEach((function(e){t.plusButton=e})),this.minusAll=this.items.querySelectorAll(".dropdown-counters__minus"),this.minusAll.forEach((function(e){t.minusButton=e}))}},{key:"handlersBind",value:function(){this.handlerPlus=this.handlerPlus.bind(this),this.plusButton.addEventListener("click",this.handlerPlus),this.handlerMinus=this.handlerMinus.bind(this),this.minusButton.addEventListener("click",this.handlerMinus)}},{key:"handlerPlus",value:function(){this.upValue(this.value+1)}},{key:"handlerMinus",value:function(){this.upValue(this.value-1)}},{key:"upValue",value:function(t){t<=this.max&&t>=this.min?this.value=t:0===t&&(this.value=this.min),this.updateValue(),this.checkValue(),this.update()}},{key:"updateValue",value:function(){this.input.value=this.value}},{key:"checkValue",value:function(){this.value===this.min?this.deactivateMinus():this.activateMinus(),this.value===this.max?this.deactivatePlus():this.activatePlus()}},{key:"isMin",value:function(){return this.value===this.min}},{key:"isZerro",value:function(){return 0===this.value}},{key:"getValue",value:function(){return this.value}},{key:"activatePlus",value:function(){this.plusButton.classList.contains("dropdown-counters__plus_disabled")&&(this.plusButton.classList.remove("dropdown-counters__plus_disabled"),this.plusButton.removeAttribute("disabled"))}},{key:"deactivatePlus",value:function(){this.plusButton.classList.add("dropdown-counters__plus_disabled"),this.plusButton.setAttribute("disabled","true")}},{key:"activateMinus",value:function(){this.minusButton.classList.contains("dropdown-counters__minus_disabled")&&this.minusButton.classList.remove("dropdown-counters__minus_disabled")}},{key:"deactivateMinus",value:function(){this.minusButton.classList.add("dropdown-counters__minus_disabled")}}])&&i(e.prototype,n),s&&i(e,s),t}();function o(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var a=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.dropdown=e,this.findElement(),this.handlersBind(),this.defaultSum(),this.controls=o(this.values).map((function(t){return new s(t,(function(){return n.update()}))})),this.update()}var e,n,i;return e=t,(n=[{key:"findElement",value:function(){this.menu=this.dropdown.querySelector(".dropdown__menu"),this.toggle=this.dropdown.querySelector(".dropdown__section"),this.title=this.dropdown.querySelector(".dropdown__title"),this.isGuests=this.dropdown.classList.contains("dropdown_guest"),this.defaultTitle=this.dropdown.dataset.default||"",this.values=this.dropdown.querySelectorAll(".dropdown-counters"),this.buttonClear=this.dropdown.querySelector(".dropdown__button_clear")||void 0,this.buttonUse=this.dropdown.querySelector(".dropdown__button_use")||void 0}},{key:"handlersBind",value:function(){this.handlerMenu=this.handlerMenu.bind(this),this.toggle.addEventListener("click",this.handlerMenu),this.handlerDocument=this.handlerDocument.bind(this),document.addEventListener("click",this.handlerDocument),this.buttonUse&&(this.handlerUse=this.handlerUse.bind(this)),this.buttonUse.addEventListener("click",this.handlerUse),this.buttonClear&&(this.handlerClear=this.handlerClear.bind(this)),this.buttonClear.addEventListener("click",this.handlerClear)}},{key:"handlerMenu",value:function(){this.menu.classList.toggle("dropdown_active"),this.title.classList.toggle("title-active")}},{key:"handlerDocument",value:function(t){t.target.closest(".dropdown")!==this.dropdown&&this.closeDropdown()}},{key:"closeDropdown",value:function(){this.menu.classList.contains("dropdown_active")&&this.menu.classList.remove("dropdown_active")}},{key:"handlerUse",value:function(t){0!==this.sumGuests&&(t.preventDefault(),this.closeDropdown())}},{key:"handlerClear",value:function(t){t.preventDefault(),this.controls.forEach((function(t){t.upValue(0)}))}},{key:"update",value:function(){this.updateTitle(),this.checkAdultButtonUse()}},{key:"checkButtonClear",value:function(){!0==!this.controls.map((function(t){return t.isMin()})).includes(!1)?this.hiddenClearButton():this.visibleClearButton()}},{key:"checkButtonUse",value:function(){!0==!this.controls.map((function(t){return t.isZerro()})).includes(!1)?this.hiddenButtonUse():this.visibleButtonUse()}},{key:"checkAdultButtonUse",value:function(){0===this.sumAdult&&this.sumBabies>0&&this.hiddenButtonUse()}},{key:"hiddenClearButton",value:function(){this.buttonClear.style.display="none"}},{key:"visibleClearButton",value:function(){this.buttonClear.style.display="block"}},{key:"hiddenButtonUse",value:function(){this.buttonUse.style.display="none"}},{key:"visibleButtonUse",value:function(){this.buttonUse.style.display="block"}},{key:"formDeclension",value:function(t,e){var n=(t=Math.abs(t)%100)%10;return t>10&&t<20?e[2]:n>1&&n<5?e[1]:1===n?e[0]:e[2]}},{key:"defaultSum",value:function(){var t=this,e=0;this.values.forEach((function(n){t.AllInput=n.querySelectorAll(".dropdown-counters__value"),t.AllInput.forEach((function(t){e+=Number(t.value)}))})),this.DefaultSum=e}},{key:"updateTitle",value:function(){!0===this.isGuests?this.updateDropdownGuests():this.updateDropdownRoom()}},{key:"updateDropdownGuests",value:function(){var t=this,e=this.controls.map((function(t){return t.getValue()})),n=[e[0],e[1],e[2]],i=n[0],s=n[1],o=n[2];if(this.sumGuests=i+s+o,this.sumAdult=i+s,this.sumBabies=o,i+s<10?this.controls.map((function(t){return t.activatePlus()})):(this.sumAdult=10,this.length=this.controls.length,this.controls.forEach((function(e,n){n!==t.length-1&&e.deactivatePlus()}))),10===o){var r=this.controls.length;this.controls.forEach((function(t,e){e===r-1&&t.deactivatePlus()}))}i>0||s>0?(this.checkButtonClear(),this.checkButtonUse()):this.checkButtonClear(),this.messageGuests=this.formDeclension(this.sumAdult,["гость","гостя","гостей"]),this.messageNewborns=this.formDeclension(this.sumBabies,["младенец","младенца","младенцев"]),0===this.sumBabies&&0===this.sumAdult?this.title.innerHTML="Сколько гостей":0!==this.sumAdult&&0===this.sumBabies?this.title.innerHTML="".concat(this.sumAdult," ").concat(this.messageGuests):this.title.innerHTML="".concat(this.sumAdult," ").concat(this.messageGuests,", ").concat(this.sumBabies," ").concat(this.messageNewborns)}},{key:"updateDropdownRoom",value:function(){var t=this.controls.map((function(t){return t.getValue()})),e=[t[0],t[1],t[2]],n=e[0],i=e[1],s=e[2],o=n+i+s;o!==this.DefaultSum&&(this.checkButtonClear(),this.checkButtonUse());var r=this.formDeclension(n,["спальня","спальни","спален"]),u=this.formDeclension(i,["кровать","кровати","кроватей"]),a=this.formDeclension(s,["ванная","ванные","ванных"]);this.title.innerHTML=o>0&&s>0?"".concat(n," ").concat(r,", ").concat(i," ").concat(u,",").concat(s," ").concat(a)+"...":"".concat(n," ").concat(r,", ").concat(i," ").concat(u,"...")}}])&&u(e.prototype,n),i&&u(e,i),t}();window.addEventListener("load",(function(){document.querySelectorAll(".dropdown").forEach((function(t){return new a(t)}))}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(7);document.querySelectorAll(".js-header-main").forEach((function(t){new i.Burger(t)}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Burger=void 0;var i=function(){function t(t){this.header=t,this.elements=this.findElement(),this.bindEventListeners()}return t.prototype.findElement=function(){return[this.header.querySelector(".js-header-nav"),this.header.querySelector(".js-burger__item")]},t.prototype.bindEventListeners=function(){this.handleButtonClick=this.handleButtonClick.bind(this),this.elements[1].addEventListener("click",this.handleButtonClick)},t.prototype.handleButtonClick=function(){this.elements[1].classList.toggle("js-active"),this.elements[0].classList.toggle("js__open-menu")},t}();e.Burger=i},,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(5),n(2),n(32),n(6),n(34)},function(t,e,n){var i=n(33);"string"==typeof i&&(i=[[t.i,i,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};n(1)(i,s);i.locals&&(t.exports=i.locals)},function(t,e,n){},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(35);document.querySelectorAll(".js-registration-container").forEach((function(t){new i.LogicRoomReg(t)}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.LogicRoomReg=void 0;var i=function(){function t(t){this.room=t,this.elements=this.findElement(),this.bindEventListeners()}return t.prototype.findElement=function(){var t=this.room.querySelector(".js-button_signIn"),e=this.room.querySelector(".js-button_regCreate"),n=this.room.querySelector(".js-registration-container__signing");return[t,e,this.room.querySelector(".js-registration-container__reg"),n]},t.prototype.bindEventListeners=function(){this.handleSignInButtonClick=this.handleSignInButtonClick.bind(this),this.elements[0].addEventListener("click",this.handleSignInButtonClick),this.handleAccountButtonClick=this.handleAccountButtonClick.bind(this),this.elements[1].addEventListener("click",this.handleAccountButtonClick)},t.prototype.handleAccountButtonClick=function(){this.elements[2].classList.toggle("registration-container_active"),this.elements[3].classList.remove("registration-container_active"),window.history.pushState({param:"Value"},"","registration.html"),this.room.classList.add("registration-container_reg-bg"),this.room.classList.remove("registration-container_signIn-bg")},t.prototype.handleSignInButtonClick=function(){this.elements[3].classList.toggle("registration-container_active"),this.elements[2].classList.remove("registration-container_active"),window.history.pushState({param:"Value"},"","signing.html"),this.room.classList.remove("registration-container_reg-bg"),this.room.classList.add("registration-container_signIn-bg")},t}();e.LogicRoomReg=i}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,