!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=29)}([,function(t,e,n){var i,r,s={},o=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=i.apply(this,arguments)),r}),u=function(t,e){return e?e.querySelector(t):document.querySelector(t)},a=function(t){var e={};return function(t,n){if("function"==typeof t)return t();if(void 0===e[t]){var i=u.call(this,t,n);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}}(),l=null,c=0,d=[],h=n(4);function f(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=s[i.id];if(r){r.refs++;for(var o=0;o<r.parts.length;o++)r.parts[o](i.parts[o]);for(;o<i.parts.length;o++)r.parts.push(g(i.parts[o],e))}else{var u=[];for(o=0;o<i.parts.length;o++)u.push(g(i.parts[o],e));s[i.id]={id:i.id,refs:1,parts:u}}}}function p(t,e){for(var n=[],i={},r=0;r<t.length;r++){var s=t[r],o=e.base?s[0]+e.base:s[0],u={css:s[1],media:s[2],sourceMap:s[3]};i[o]?i[o].parts.push(u):n.push(i[o]={id:o,parts:[u]})}return n}function v(t,e){var n=a(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=d[d.length-1];if("top"===t.insertAt)i?i.nextSibling?n.insertBefore(e,i.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),d.push(e);else if("bottom"===t.insertAt)n.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=a(t.insertAt.before,n);n.insertBefore(e,r)}}function m(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=d.indexOf(t);e>=0&&d.splice(e,1)}function y(t){var e=document.createElement("style");if(void 0===t.attrs.type&&(t.attrs.type="text/css"),void 0===t.attrs.nonce){var i=function(){0;return n.nc}();i&&(t.attrs.nonce=i)}return b(e,t.attrs),v(t,e),e}function b(t,e){Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])}))}function g(t,e){var n,i,r,s;if(e.transform&&t.css){if(!(s="function"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=s}if(e.singleton){var o=c++;n=l||(l=y(e)),i=k.bind(null,n,o,!1),r=k.bind(null,n,o,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",b(e,t.attrs),v(t,e),e}(e),i=B.bind(null,n,e),r=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(e),i=L.bind(null,n),r=function(){m(n)});return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else r()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=o()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=p(t,e);return f(n,e),function(t){for(var i=[],r=0;r<n.length;r++){var o=n[r];(u=s[o.id]).refs--,i.push(u)}t&&f(p(t,e),e);for(r=0;r<i.length;r++){var u;if(0===(u=i[r]).refs){for(var a=0;a<u.parts.length;a++)u.parts[a]();delete s[u.id]}}}};var w,_=(w=[],function(t,e){return w[t]=e,w.filter(Boolean).join("\n")});function k(t,e,n,i){var r=n?"":i.css;if(t.styleSheet)t.styleSheet.cssText=_(e,r);else{var s=document.createTextNode(r),o=t.childNodes;o[e]&&t.removeChild(o[e]),o.length?t.insertBefore(s,o[e]):t.appendChild(s)}}function L(t,e){var n=e.css,i=e.media;if(i&&t.setAttribute("media",i),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function B(t,e,n){var i=n.css,r=n.sourceMap,s=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||s)&&(i=h(i)),r&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var o=new Blob([i],{type:"text/css"}),u=t.href;t.href=URL.createObjectURL(o),u&&URL.revokeObjectURL(u)}},function(t,e,n){var i=n(3);"string"==typeof i&&(i=[[t.i,i,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(i,r);i.locals&&(t.exports=i.locals)},function(t,e,n){},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,i=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(t,e){var r,s=e.trim().replace(/^"(.*)"$/,(function(t,e){return e})).replace(/^'(.*)'$/,(function(t,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(s)?t:(r=0===s.indexOf("//")?s:0===s.indexOf("/")?n+s:i+s.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")}))}},function(t,e,n){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}n.r(e);var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=e,this.getElement(),this.handlersBind(),this.checkValue(),this.update=n}var e,n,r;return e=t,(n=[{key:"getElement",value:function(){var t=this;this.option=this.items.querySelector(".dropdown-counters__controls"),this.input=this.items.querySelector(".dropdown-counters__value"),this.max=Number(this.input.max),this.min=Number(this.input.min),this.value=Number(this.input.value),this.plusAll=this.items.querySelectorAll(".dropdown-counters__plus"),this.plusAll.forEach((function(e){t.plusButton=e})),this.minusAll=this.items.querySelectorAll(".dropdown-counters__minus"),this.minusAll.forEach((function(e){t.minusButton=e}))}},{key:"handlersBind",value:function(){this.handlerPlus=this.handlerPlus.bind(this),this.plusButton.addEventListener("click",this.handlerPlus),this.handlerMinus=this.handlerMinus.bind(this),this.minusButton.addEventListener("click",this.handlerMinus)}},{key:"handlerPlus",value:function(){this.upValue(this.value+1)}},{key:"handlerMinus",value:function(){this.upValue(this.value-1)}},{key:"upValue",value:function(t){t<=this.max&&t>=this.min?this.value=t:0===t&&(this.value=this.min),this.updateValue(),this.checkValue(),this.update()}},{key:"updateValue",value:function(){this.input.value=this.value}},{key:"checkValue",value:function(){this.value===this.min?this.deactivateMinus():this.activateMinus(),this.value===this.max?this.deactivatePlus():this.activatePlus()}},{key:"isMin",value:function(){return this.value===this.min}},{key:"isZerro",value:function(){return 0===this.value}},{key:"getValue",value:function(){return this.value}},{key:"activatePlus",value:function(){this.plusButton.classList.contains("dropdown-counters__plus_disabled")&&(this.plusButton.classList.remove("dropdown-counters__plus_disabled"),this.plusButton.removeAttribute("disabled"))}},{key:"deactivatePlus",value:function(){this.plusButton.classList.add("dropdown-counters__plus_disabled"),this.plusButton.setAttribute("disabled","true")}},{key:"activateMinus",value:function(){this.minusButton.classList.contains("dropdown-counters__minus_disabled")&&this.minusButton.classList.remove("dropdown-counters__minus_disabled")}},{key:"deactivateMinus",value:function(){this.minusButton.classList.add("dropdown-counters__minus_disabled")}}])&&i(e.prototype,n),r&&i(e,r),t}();function s(t){return function(t){if(Array.isArray(t))return o(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return o(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var a=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.dropdown=e,this.findElement(),this.handlersBind(),this.defaultSum(),this.controls=s(this.values).map((function(t){return new r(t,(function(){return n.update()}))})),this.update()}var e,n,i;return e=t,(n=[{key:"findElement",value:function(){this.menu=this.dropdown.querySelector(".dropdown__menu"),this.toggle=this.dropdown.querySelector(".dropdown__section"),this.title=this.dropdown.querySelector(".dropdown__title"),this.isGuests=this.dropdown.classList.contains("dropdown_guest"),this.defaultTitle=this.dropdown.dataset.default||"",this.values=this.dropdown.querySelectorAll(".dropdown-counters"),this.buttonClear=this.dropdown.querySelector(".dropdown__button_clear")||void 0,this.buttonUse=this.dropdown.querySelector(".dropdown__button_use")||void 0}},{key:"handlersBind",value:function(){this.handlerMenu=this.handlerMenu.bind(this),this.toggle.addEventListener("click",this.handlerMenu),this.handlerDocument=this.handlerDocument.bind(this),document.addEventListener("click",this.handlerDocument),this.buttonUse&&(this.handlerUse=this.handlerUse.bind(this)),this.buttonUse.addEventListener("click",this.handlerUse),this.buttonClear&&(this.handlerClear=this.handlerClear.bind(this)),this.buttonClear.addEventListener("click",this.handlerClear)}},{key:"handlerMenu",value:function(){this.menu.classList.toggle("dropdown_active"),this.title.classList.toggle("title-active")}},{key:"handlerDocument",value:function(t){t.target.closest(".dropdown")!==this.dropdown&&this.closeDropdown()}},{key:"closeDropdown",value:function(){this.menu.classList.contains("dropdown_active")&&this.menu.classList.remove("dropdown_active")}},{key:"handlerUse",value:function(t){0!==this.sumGuests&&(t.preventDefault(),this.closeDropdown())}},{key:"handlerClear",value:function(t){t.preventDefault(),this.controls.forEach((function(t){t.upValue(0)}))}},{key:"update",value:function(){this.updateTitle(),this.checkAdultButtonUse()}},{key:"checkButtonClear",value:function(){!0==!this.controls.map((function(t){return t.isMin()})).includes(!1)?this.hiddenClearButton():this.visibleClearButton()}},{key:"checkButtonUse",value:function(){!0==!this.controls.map((function(t){return t.isZerro()})).includes(!1)?this.hiddenButtonUse():this.visibleButtonUse()}},{key:"checkAdultButtonUse",value:function(){0===this.sumAdult&&this.sumBabies>0&&this.hiddenButtonUse()}},{key:"hiddenClearButton",value:function(){this.buttonClear.style.display="none"}},{key:"visibleClearButton",value:function(){this.buttonClear.style.display="block"}},{key:"hiddenButtonUse",value:function(){this.buttonUse.style.display="none"}},{key:"visibleButtonUse",value:function(){this.buttonUse.style.display="block"}},{key:"formDeclension",value:function(t,e){var n=(t=Math.abs(t)%100)%10;return t>10&&t<20?e[2]:n>1&&n<5?e[1]:1===n?e[0]:e[2]}},{key:"defaultSum",value:function(){var t=this,e=0;this.values.forEach((function(n){t.AllInput=n.querySelectorAll(".dropdown-counters__value"),t.AllInput.forEach((function(t){e+=Number(t.value)}))})),this.DefaultSum=e}},{key:"updateTitle",value:function(){!0===this.isGuests?this.updateDropdownGuests():this.updateDropdownRoom()}},{key:"updateDropdownGuests",value:function(){var t=this,e=this.controls.map((function(t){return t.getValue()})),n=[e[0],e[1],e[2]],i=n[0],r=n[1],s=n[2];if(this.sumGuests=i+r+s,this.sumAdult=i+r,this.sumBabies=s,i+r<10?this.controls.map((function(t){return t.activatePlus()})):(this.sumAdult=10,this.length=this.controls.length,this.controls.forEach((function(e,n){n!==t.length-1&&e.deactivatePlus()}))),10===s){var o=this.controls.length;this.controls.forEach((function(t,e){e===o-1&&t.deactivatePlus()}))}i>0||r>0?(this.checkButtonClear(),this.checkButtonUse()):this.checkButtonClear(),this.messageGuests=this.formDeclension(this.sumAdult,["гость","гостя","гостей"]),this.messageNewborns=this.formDeclension(this.sumBabies,["младенец","младенца","младенцев"]),0===this.sumBabies&&0===this.sumAdult?this.title.innerHTML="Сколько гостей":0!==this.sumAdult&&0===this.sumBabies?this.title.innerHTML="".concat(this.sumAdult," ").concat(this.messageGuests):this.title.innerHTML="".concat(this.sumAdult," ").concat(this.messageGuests,", ").concat(this.sumBabies," ").concat(this.messageNewborns)}},{key:"updateDropdownRoom",value:function(){var t=this.controls.map((function(t){return t.getValue()})),e=[t[0],t[1],t[2]],n=e[0],i=e[1],r=e[2],s=n+i+r;s!==this.DefaultSum&&(this.checkButtonClear(),this.checkButtonUse());var o=this.formDeclension(n,["спальня","спальни","спален"]),u=this.formDeclension(i,["кровать","кровати","кроватей"]),a=this.formDeclension(r,["ванная","ванные","ванных"]);this.title.innerHTML=s>0&&r>0?"".concat(n," ").concat(o,", ").concat(i," ").concat(u,",").concat(r," ").concat(a)+"...":"".concat(n," ").concat(o,", ").concat(i," ").concat(u,"...")}}])&&u(e.prototype,n),i&&u(e,i),t}();window.addEventListener("load",(function(){document.querySelectorAll(".dropdown").forEach((function(t){return new a(t)}))}))},function(t,e,n){"use strict";document.querySelectorAll(".header-main").forEach((function(t){var e=t.querySelector(".burger__item"),n=t.querySelector(".header-main__nav");e.addEventListener("click",(function(){e.classList.toggle("active"),n.classList.toggle("header-main__open-menu")}))}))},,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(5),n(2),n(30),n(6),n(32)},function(t,e,n){var i=n(31);"string"==typeof i&&(i=[[t.i,i,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(i,r);i.locals&&(t.exports=i.locals)},function(t,e,n){},function(t,e,n){"use strict";var i=document.querySelector(".button_signIn"),r=document.querySelector(".button_regCreate"),s=document.querySelector(".registration-container__signin"),o=document.querySelector(".registration-container__reg"),u=document.querySelector(".registration-container");null==i||i.addEventListener("click",(function(){null==s||s.classList.toggle("registration-container_active"),null==o||o.classList.remove("registration-container_active"),window.history.pushState({param:"Value"},"","signin.html"),null==u||u.classList.remove("registration-container_reg-bg"),null==u||u.classList.add("registration-container_signIn-bg")})),null==r||r.addEventListener("click",(function(){null==o||o.classList.toggle("registration-container_active"),null==s||s.classList.remove("registration-container_active"),window.history.pushState({param:"Value"},"","registration.html"),null==u||u.classList.add("registration-container_reg-bg"),null==u||u.classList.remove("registration-container_signIn-bg")}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3NzL21haW4uc2Nzcz9hOTgzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Jsb2Nrcy9kcm9wZG93bi1jb250cm9sL0Ryb3Bkb3duQ29udHJvbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYmxvY2tzL2Ryb3Bkb3duL0Ryb3Bkb3duLmpzIiwid2VicGFjazovLy8uL3NyYy9ibG9ja3MvZHJvcGRvd24vZHJvcGRvd24taW5pdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYmxvY2tzL2J1cmdlci9idXJnZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uc2Nzcz83YzJmIiwid2VicGFjazovLy8uL3NyYy9ibG9ja3MvbG9naWMtcm9vbS1yZWcvbG9naWMtcm9vbS1yZWcudHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJmbiIsIm1lbW8iLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFsbCIsImF0b2IiLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJnZXRUYXJnZXQiLCJ0YXJnZXQiLCJwYXJlbnQiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0RWxlbWVudCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwib3B0aW9ucyIsImxlbmd0aCIsIml0ZW0iLCJkb21TdHlsZSIsImlkIiwicmVmcyIsImoiLCJwYXJ0cyIsInB1c2giLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsImxpc3QiLCJuZXdTdHlsZXMiLCJiYXNlIiwicGFydCIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJpbnNlcnRJbnRvIiwiRXJyb3IiLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInVuZGVmaW5lZCIsImF0dHJzIiwidHlwZSIsIm5vbmNlIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsImVsIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJvYmoiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJ0cmFuc2Zvcm0iLCJkZWZhdWx0Iiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwiYnRvYSIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsInVwZGF0ZUxpbmsiLCJocmVmIiwiYXBwbHlUb1RhZyIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwiaW5kZXgiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJibG9iIiwib2xkU3JjIiwiY29udGVudCIsImxvY2FscyIsImxvY2F0aW9uIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsInJlcGxhY2UiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwidHJpbSIsIiQxIiwidGVzdCIsIkRyb3Bkb3duQ29udHJvbCIsImVsZW1lbnQiLCJpdGVtcyIsImhhbmRsZXJzQmluZCIsImNoZWNrVmFsdWUiLCJvcHRpb24iLCJpbnB1dCIsIm1heCIsIk51bWJlciIsIm1pbiIsInBsdXNBbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwicGx1cyIsInBsdXNCdXR0b24iLCJtaW51c0FsbCIsIm1pbnVzIiwibWludXNCdXR0b24iLCJoYW5kbGVyUGx1cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVyTWludXMiLCJ1cFZhbHVlIiwidmFsIiwidXBkYXRlVmFsdWUiLCJkZWFjdGl2YXRlTWludXMiLCJhY3RpdmF0ZU1pbnVzIiwiZGVhY3RpdmF0ZVBsdXMiLCJhY3RpdmF0ZVBsdXMiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInJlbW92ZUF0dHJpYnV0ZSIsImFkZCIsIkRyb3Bkb3duIiwiZHJvcGRvd24iLCJmaW5kRWxlbWVudCIsImRlZmF1bHRTdW0iLCJjb250cm9scyIsInZhbHVlcyIsIm1hcCIsIm1lbnUiLCJ0b2dnbGUiLCJ0aXRsZSIsImlzR3Vlc3RzIiwiZGVmYXVsdFRpdGxlIiwiZGF0YXNldCIsImJ1dHRvbkNsZWFyIiwiYnV0dG9uVXNlIiwiaGFuZGxlck1lbnUiLCJoYW5kbGVyRG9jdW1lbnQiLCJoYW5kbGVyVXNlIiwiaGFuZGxlckNsZWFyIiwiZXZlbnQiLCJjbG9zZXN0IiwiY2xvc2VEcm9wZG93biIsInN1bUd1ZXN0cyIsInByZXZlbnREZWZhdWx0IiwidXBkYXRlVGl0bGUiLCJjaGVja0FkdWx0QnV0dG9uVXNlIiwiaXNNaW4iLCJpbmNsdWRlcyIsImhpZGRlbkNsZWFyQnV0dG9uIiwidmlzaWJsZUNsZWFyQnV0dG9uIiwiaXNaZXJybyIsImhpZGRlbkJ1dHRvblVzZSIsInZpc2libGVCdXR0b25Vc2UiLCJzdW1BZHVsdCIsInN1bUJhYmllcyIsImRpc3BsYXkiLCJudW1iZXIiLCJmb3JtIiwibjEiLCJNYXRoIiwiYWJzIiwiRGVmYXVsdFN1bSIsIkFsbElucHV0IiwidXBkYXRlRHJvcGRvd25HdWVzdHMiLCJ1cGRhdGVEcm9wZG93blJvb20iLCJhcnJheSIsImdldFZhbHVlIiwiYWR1bHRzIiwiY2hpbGRyZW4iLCJiYWJpZXMiLCJjaGVja0J1dHRvbkNsZWFyIiwiY2hlY2tCdXR0b25Vc2UiLCJtZXNzYWdlR3Vlc3RzIiwiZm9ybURlY2xlbnNpb24iLCJtZXNzYWdlTmV3Ym9ybnMiLCJpbm5lckhUTUwiLCJCZWRyb29tIiwiQmVkIiwiQmF0aHJvb20iLCJzdW0iLCJtZXNzYWdlQmVkcm9vbSIsIm1lc3NhZ2VCZWQiLCJtZXNzYWdlQmF0aHJvb20iLCJidXJnZXIiLCJidXR0b24iLCJuYXZiYXIiLCJzaWduSW4iLCJjcmVhdGVBY291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TyxRQUFRQyxVQUFVLENBQUVDLE1BQU8sU0FBVyxHQUFJLHFCQUNqRHZILFNBQWtEQSxFQUFRMkMsVUFBVUcsSUFBSSxpQ0FDeEU5QyxTQUFrREEsRUFBUTJDLFVBQVVwRixPQUFPIiwiZmlsZSI6InJlZ2lzdHJhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyOSk7XG4iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCwgcGFyZW50KSB7XG4gIGlmIChwYXJlbnQpe1xuICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICB9XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0LCBwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCwgcGFyZW50KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUsIHRhcmdldCk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0aWYob3B0aW9ucy5hdHRycy5ub25jZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcblx0XHRpZiAobm9uY2UpIHtcblx0XHRcdG9wdGlvbnMuYXR0cnMubm9uY2UgPSBub25jZTtcblx0XHR9XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBnZXROb25jZSgpIHtcblx0aWYgKHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHJldHVybiBfX3dlYnBhY2tfbm9uY2VfXztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSB0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0gPT09ICdmdW5jdGlvbidcblx0XHQgPyBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKSBcblx0XHQgOiBvcHRpb25zLnRyYW5zZm9ybS5kZWZhdWx0KG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iLCJjbGFzcyBEcm9wZG93bkNvbnRyb2wge1xuICBjb25zdHJ1Y3RvcihlbGVtZW50LCB1cGRhdGUpIHtcbiAgICB0aGlzLml0ZW1zID0gZWxlbWVudDtcbiAgICB0aGlzLmdldEVsZW1lbnQoKTtcbiAgICB0aGlzLmhhbmRsZXJzQmluZCgpO1xuICAgIHRoaXMuY2hlY2tWYWx1ZSgpO1xuICAgIHRoaXMudXBkYXRlID0gdXBkYXRlO1xuICB9XG5cbiAgZ2V0RWxlbWVudCgpIHtcbiAgICB0aGlzLm9wdGlvbiA9IHRoaXMuaXRlbXMucXVlcnlTZWxlY3RvcignLmRyb3Bkb3duLWNvdW50ZXJzX19jb250cm9scycpO1xuXG4gICAgdGhpcy5pbnB1dCA9IHRoaXMuaXRlbXMucXVlcnlTZWxlY3RvcignLmRyb3Bkb3duLWNvdW50ZXJzX192YWx1ZScpO1xuICAgIHRoaXMubWF4ID0gTnVtYmVyKHRoaXMuaW5wdXQubWF4KTtcbiAgICB0aGlzLm1pbiA9IE51bWJlcih0aGlzLmlucHV0Lm1pbik7XG4gICAgdGhpcy52YWx1ZSA9IE51bWJlcih0aGlzLmlucHV0LnZhbHVlKTtcbiAgICB0aGlzLnBsdXNBbGwgPSB0aGlzLml0ZW1zLnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcm9wZG93bi1jb3VudGVyc19fcGx1cycpO1xuICAgIHRoaXMucGx1c0FsbC5mb3JFYWNoKChwbHVzKSA9PiB7XG4gICAgICB0aGlzLnBsdXNCdXR0b24gPSBwbHVzO1xuICAgIH0pO1xuICAgIHRoaXMubWludXNBbGwgPSB0aGlzLml0ZW1zLnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcm9wZG93bi1jb3VudGVyc19fbWludXMnKTtcbiAgICB0aGlzLm1pbnVzQWxsLmZvckVhY2goKG1pbnVzKSA9PiB7XG4gICAgICB0aGlzLm1pbnVzQnV0dG9uID0gbWludXM7XG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVyc0JpbmQoKSB7XG4gICAgdGhpcy5oYW5kbGVyUGx1cyA9IHRoaXMuaGFuZGxlclBsdXMuYmluZCh0aGlzKTtcbiAgICB0aGlzLnBsdXNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZXJQbHVzKTtcbiAgICB0aGlzLmhhbmRsZXJNaW51cyA9IHRoaXMuaGFuZGxlck1pbnVzLmJpbmQodGhpcyk7XG4gICAgdGhpcy5taW51c0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlck1pbnVzKTtcbiAgfVxuXG4gIGhhbmRsZXJQbHVzKCkge1xuICAgIHRoaXMudXBWYWx1ZSh0aGlzLnZhbHVlICsgMSk7XG4gIH1cblxuICBoYW5kbGVyTWludXMoKSB7XG4gICAgdGhpcy51cFZhbHVlKHRoaXMudmFsdWUgLSAxKTtcbiAgfVxuXG4gIHVwVmFsdWUodmFsKSB7XG4gICAgaWYgKHZhbCA8PSB0aGlzLm1heCAmJiB2YWwgPj0gdGhpcy5taW4pIHtcbiAgICAgIHRoaXMudmFsdWUgPSB2YWw7XG4gICAgfSBlbHNlIGlmICh2YWwgPT09IDApIHtcbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLm1pbjtcbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZVZhbHVlKCk7XG4gICAgdGhpcy5jaGVja1ZhbHVlKCk7XG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxuXG4gIHVwZGF0ZVZhbHVlKCkge1xuICAgIHRoaXMuaW5wdXQudmFsdWUgPSB0aGlzLnZhbHVlO1xuICB9XG5cbiAgY2hlY2tWYWx1ZSgpIHtcbiAgICBpZiAodGhpcy52YWx1ZSA9PT0gdGhpcy5taW4pIHtcbiAgICAgIHRoaXMuZGVhY3RpdmF0ZU1pbnVzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVNaW51cygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnZhbHVlID09PSB0aGlzLm1heCkge1xuICAgICAgdGhpcy5kZWFjdGl2YXRlUGx1cygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFjdGl2YXRlUGx1cygpO1xuICAgIH1cbiAgfVxuXG4gIGlzTWluKCkge1xuICAgIHJldHVybiB0aGlzLnZhbHVlID09PSB0aGlzLm1pbjtcbiAgfVxuXG4gIGlzWmVycm8oKSB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWUgPT09IDA7XG4gIH1cblxuICBnZXRWYWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgfVxuXG4gIGFjdGl2YXRlUGx1cygpIHtcbiAgICBpZiAodGhpcy5wbHVzQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnZHJvcGRvd24tY291bnRlcnNfX3BsdXNfZGlzYWJsZWQnKSkge1xuICAgICAgdGhpcy5wbHVzQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2Ryb3Bkb3duLWNvdW50ZXJzX19wbHVzX2Rpc2FibGVkJyk7XG4gICAgICB0aGlzLnBsdXNCdXR0b24ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgIH1cbiAgfVxuXG4gIGRlYWN0aXZhdGVQbHVzKCkge1xuICAgIHRoaXMucGx1c0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdkcm9wZG93bi1jb3VudGVyc19fcGx1c19kaXNhYmxlZCcpO1xuICAgIHRoaXMucGx1c0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ3RydWUnKTtcbiAgfVxuXG4gIGFjdGl2YXRlTWludXMoKSB7XG4gICAgaWYgKFxuICAgICAgdGhpcy5taW51c0J1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2Ryb3Bkb3duLWNvdW50ZXJzX19taW51c19kaXNhYmxlZCcpXG4gICAgKSB7XG4gICAgICB0aGlzLm1pbnVzQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2Ryb3Bkb3duLWNvdW50ZXJzX19taW51c19kaXNhYmxlZCcpO1xuICAgIH1cbiAgfVxuXG4gIGRlYWN0aXZhdGVNaW51cygpIHtcbiAgICB0aGlzLm1pbnVzQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2Ryb3Bkb3duLWNvdW50ZXJzX19taW51c19kaXNhYmxlZCcpO1xuICB9XG59XG5cbmV4cG9ydCB7XG4gIERyb3Bkb3duQ29udHJvbCxcbn07XG4iLCJpbXBvcnQge1xuICBEcm9wZG93bkNvbnRyb2wsXG59IGZyb20gJy4uL2Ryb3Bkb3duLWNvbnRyb2wvRHJvcGRvd25Db250cm9sJztcblxuY2xhc3MgRHJvcGRvd24ge1xuICBjb25zdHJ1Y3Rvcihkcm9wZG93bikge1xuICAgIHRoaXMuZHJvcGRvd24gPSBkcm9wZG93bjtcbiAgICB0aGlzLmZpbmRFbGVtZW50KCk7XG4gICAgdGhpcy5oYW5kbGVyc0JpbmQoKTtcbiAgICB0aGlzLmRlZmF1bHRTdW0oKTtcbiAgICB0aGlzLmNvbnRyb2xzID0gWy4uLnRoaXMudmFsdWVzXS5tYXAoXG4gICAgICAoaXRlbSkgPT4gbmV3IERyb3Bkb3duQ29udHJvbChpdGVtLCAoKSA9PiB0aGlzLnVwZGF0ZSgpKSxcbiAgICApO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICBmaW5kRWxlbWVudCgpIHtcbiAgICB0aGlzLm1lbnUgPSB0aGlzLmRyb3Bkb3duLnF1ZXJ5U2VsZWN0b3IoJy5kcm9wZG93bl9fbWVudScpO1xuICAgIHRoaXMudG9nZ2xlID0gdGhpcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yKCcuZHJvcGRvd25fX3NlY3Rpb24nKTtcbiAgICB0aGlzLnRpdGxlID0gdGhpcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yKCcuZHJvcGRvd25fX3RpdGxlJyk7XG4gICAgdGhpcy5pc0d1ZXN0cyA9IHRoaXMuZHJvcGRvd24uY2xhc3NMaXN0LmNvbnRhaW5zKCdkcm9wZG93bl9ndWVzdCcpO1xuICAgIHRoaXMuZGVmYXVsdFRpdGxlID0gdGhpcy5kcm9wZG93bi5kYXRhc2V0LmRlZmF1bHQgfHwgJyc7XG4gICAgdGhpcy52YWx1ZXMgPSB0aGlzLmRyb3Bkb3duLnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcm9wZG93bi1jb3VudGVycycpO1xuICAgIHRoaXMuYnV0dG9uQ2xlYXIgPSB0aGlzLmRyb3Bkb3duLnF1ZXJ5U2VsZWN0b3IoJy5kcm9wZG93bl9fYnV0dG9uX2NsZWFyJykgfHwgdW5kZWZpbmVkO1xuICAgIHRoaXMuYnV0dG9uVXNlID0gdGhpcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yKCcuZHJvcGRvd25fX2J1dHRvbl91c2UnKSB8fCB1bmRlZmluZWQ7XG4gIH1cblxuICBoYW5kbGVyc0JpbmQoKSB7XG4gICAgdGhpcy5oYW5kbGVyTWVudSA9IHRoaXMuaGFuZGxlck1lbnUuYmluZCh0aGlzKTtcbiAgICB0aGlzLnRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlck1lbnUpO1xuICAgIHRoaXMuaGFuZGxlckRvY3VtZW50ID0gdGhpcy5oYW5kbGVyRG9jdW1lbnQuYmluZCh0aGlzKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlckRvY3VtZW50KTtcbiAgICBpZiAodGhpcy5idXR0b25Vc2UpIHRoaXMuaGFuZGxlclVzZSA9IHRoaXMuaGFuZGxlclVzZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuYnV0dG9uVXNlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVyVXNlKTtcbiAgICBpZiAodGhpcy5idXR0b25DbGVhcikgdGhpcy5oYW5kbGVyQ2xlYXIgPSB0aGlzLmhhbmRsZXJDbGVhci5iaW5kKHRoaXMpO1xuICAgIHRoaXMuYnV0dG9uQ2xlYXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZXJDbGVhcik7XG4gIH1cblxuICBoYW5kbGVyTWVudSgpIHtcbiAgICB0aGlzLm1lbnUuY2xhc3NMaXN0LnRvZ2dsZSgnZHJvcGRvd25fYWN0aXZlJyk7XG4gICAgdGhpcy50aXRsZS5jbGFzc0xpc3QudG9nZ2xlKCd0aXRsZS1hY3RpdmUnKTtcbiAgfVxuXG4gIGhhbmRsZXJEb2N1bWVudChldmVudCkge1xuICAgIGlmIChldmVudC50YXJnZXQuY2xvc2VzdCgnLmRyb3Bkb3duJykgIT09IHRoaXMuZHJvcGRvd24pIHtcbiAgICAgIHRoaXMuY2xvc2VEcm9wZG93bigpO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlRHJvcGRvd24oKSB7XG4gICAgY29uc3QgaXNEcm9wZG93bkNsb3NlZCA9IHRoaXMubWVudS5jbGFzc0xpc3QuY29udGFpbnMoJ2Ryb3Bkb3duX2FjdGl2ZScpO1xuICAgIGlmIChpc0Ryb3Bkb3duQ2xvc2VkKSB7XG4gICAgICB0aGlzLm1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnZHJvcGRvd25fYWN0aXZlJyk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlclVzZShldmVudCkge1xuICAgIGlmICh0aGlzLnN1bUd1ZXN0cyAhPT0gMCkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuY2xvc2VEcm9wZG93bigpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZXJDbGVhcihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5jb250cm9scy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICBlbGVtZW50LnVwVmFsdWUoMCk7XG4gICAgfSk7XG4gIH1cblxuICB1cGRhdGUoKSB7XG4gICAgdGhpcy51cGRhdGVUaXRsZSgpO1xuICAgIHRoaXMuY2hlY2tBZHVsdEJ1dHRvblVzZSgpO1xuICB9XG5cbiAgY2hlY2tCdXR0b25DbGVhcigpIHtcbiAgICBjb25zdCBhbGxNaW4gPSAhdGhpcy5jb250cm9scy5tYXAoKGl0ZW0pID0+IGl0ZW0uaXNNaW4oKSkuaW5jbHVkZXMoZmFsc2UpO1xuICAgIGlmIChhbGxNaW4gPT09IHRydWUpIHtcbiAgICAgIHRoaXMuaGlkZGVuQ2xlYXJCdXR0b24oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy52aXNpYmxlQ2xlYXJCdXR0b24oKTtcbiAgICB9XG4gIH1cblxuICBjaGVja0J1dHRvblVzZSgpIHtcbiAgICBjb25zdCBpc0FsbFplcnJvID0gIXRoaXMuY29udHJvbHNcbiAgICAgIC5tYXAoKGl0ZW0pID0+IGl0ZW0uaXNaZXJybygpKVxuICAgICAgLmluY2x1ZGVzKGZhbHNlKTtcbiAgICBpZiAoaXNBbGxaZXJybyA9PT0gdHJ1ZSkge1xuICAgICAgdGhpcy5oaWRkZW5CdXR0b25Vc2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy52aXNpYmxlQnV0dG9uVXNlKCk7XG4gICAgfVxuICB9XG5cbiAgY2hlY2tBZHVsdEJ1dHRvblVzZSgpIHtcbiAgICBpZiAodGhpcy5zdW1BZHVsdCA9PT0gMCAmJiB0aGlzLnN1bUJhYmllcyA+IDApIHtcbiAgICAgIHRoaXMuaGlkZGVuQnV0dG9uVXNlKCk7XG4gICAgfVxuICB9XG5cbiAgaGlkZGVuQ2xlYXJCdXR0b24oKSB7XG4gICAgdGhpcy5idXR0b25DbGVhci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB9XG5cbiAgdmlzaWJsZUNsZWFyQnV0dG9uKCkge1xuICAgIHRoaXMuYnV0dG9uQ2xlYXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIH1cblxuICBoaWRkZW5CdXR0b25Vc2UoKSB7XG4gICAgdGhpcy5idXR0b25Vc2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfVxuXG4gIHZpc2libGVCdXR0b25Vc2UoKSB7XG4gICAgdGhpcy5idXR0b25Vc2Uuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIH1cblxuICBmb3JtRGVjbGVuc2lvbihudW1iZXIsIGZvcm0pIHtcbiAgICBudW1iZXIgPSBNYXRoLmFicyhudW1iZXIpICUgMTAwO1xuICAgIGNvbnN0IG4xID0gbnVtYmVyICUgMTA7XG4gICAgaWYgKG51bWJlciA+IDEwICYmIG51bWJlciA8IDIwKSB7XG4gICAgICByZXR1cm4gZm9ybVsyXTtcbiAgICB9XG4gICAgaWYgKG4xID4gMSAmJiBuMSA8IDUpIHtcbiAgICAgIHJldHVybiBmb3JtWzFdO1xuICAgIH1cbiAgICBpZiAobjEgPT09IDEpIHtcbiAgICAgIHJldHVybiBmb3JtWzBdO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybVsyXTtcbiAgfVxuXG4gIGRlZmF1bHRTdW0oKSB7XG4gICAgbGV0IERlZmF1bHRTdW0gPSAwO1xuICAgIHRoaXMudmFsdWVzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHRoaXMuQWxsSW5wdXQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcm9wZG93bi1jb3VudGVyc19fdmFsdWUnKTtcblxuICAgICAgdGhpcy5BbGxJbnB1dC5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgICBEZWZhdWx0U3VtICs9IE51bWJlcihlbC52YWx1ZSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHRoaXMuRGVmYXVsdFN1bSA9IERlZmF1bHRTdW07XG4gIH1cblxuICAvLyDQu9C+0LPQuNC60LAg0LLRgdC10YUg0LfQsNCz0L7Qu9C+0LLQutC+0LJcbiAgdXBkYXRlVGl0bGUoKSB7XG4gICAgaWYgKHRoaXMuaXNHdWVzdHMgPT09IHRydWUpIHtcbiAgICAgIHRoaXMudXBkYXRlRHJvcGRvd25HdWVzdHMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy51cGRhdGVEcm9wZG93blJvb20oKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVEcm9wZG93bkd1ZXN0cygpIHtcbiAgICBjb25zdCBhcnJheSA9IHRoaXMuY29udHJvbHMubWFwKChpdGVtKSA9PiBpdGVtLmdldFZhbHVlKCkpO1xuXG4gICAgY29uc3QgW2FkdWx0cyxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgYmFiaWVzXSA9IFthcnJheVswXSxcbiAgICAgIGFycmF5WzFdLFxuICAgICAgYXJyYXlbMl1dO1xuXG4gICAgdGhpcy5zdW1HdWVzdHMgPSBhZHVsdHMgKyBjaGlsZHJlbiArIGJhYmllcztcbiAgICB0aGlzLnN1bUFkdWx0ID0gYWR1bHRzICsgY2hpbGRyZW47XG4gICAgdGhpcy5zdW1CYWJpZXMgPSBiYWJpZXM7XG5cbiAgICBpZiAoYWR1bHRzICsgY2hpbGRyZW4gPCAxMCkge1xuICAgICAgdGhpcy5jb250cm9scy5tYXAoKGl0ZW0pID0+IGl0ZW0uYWN0aXZhdGVQbHVzKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN1bUFkdWx0ID0gMTA7XG4gICAgICB0aGlzLmxlbmd0aCA9IHRoaXMuY29udHJvbHMubGVuZ3RoO1xuICAgICAgdGhpcy5jb250cm9scy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAoaW5kZXggIT09IHRoaXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIGl0ZW0uZGVhY3RpdmF0ZVBsdXMoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChiYWJpZXMgPT09IDEwKSB7XG4gICAgICBjb25zdCB7IGxlbmd0aCB9ID0gdGhpcy5jb250cm9scztcbiAgICAgIHRoaXMuY29udHJvbHMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKGluZGV4ID09PSBsZW5ndGggLSAxKSB7XG4gICAgICAgICAgaXRlbS5kZWFjdGl2YXRlUGx1cygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoYWR1bHRzID4gMCB8fCBjaGlsZHJlbiA+IDApIHtcbiAgICAgIHRoaXMuY2hlY2tCdXR0b25DbGVhcigpO1xuICAgICAgdGhpcy5jaGVja0J1dHRvblVzZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNoZWNrQnV0dG9uQ2xlYXIoKTtcbiAgICB9XG5cbiAgICBjb25zdCBmb3JtR3Vlc3RzID0gWyfQs9C+0YHRgtGMJyxcbiAgICAgICfQs9C+0YHRgtGPJyxcbiAgICAgICfQs9C+0YHRgtC10LknXTtcbiAgICBjb25zdCBmb3JtTmV3Ym9ybnMgPSBbJ9C80LvQsNC00LXQvdC10YYnLFxuICAgICAgJ9C80LvQsNC00LXQvdGG0LAnLFxuICAgICAgJ9C80LvQsNC00LXQvdGG0LXQsiddO1xuICAgIHRoaXMubWVzc2FnZUd1ZXN0cyA9IHRoaXMuZm9ybURlY2xlbnNpb24odGhpcy5zdW1BZHVsdCwgZm9ybUd1ZXN0cyk7XG5cbiAgICB0aGlzLm1lc3NhZ2VOZXdib3JucyA9IHRoaXMuZm9ybURlY2xlbnNpb24odGhpcy5zdW1CYWJpZXMsIGZvcm1OZXdib3Jucyk7XG4gICAgaWYgKHRoaXMuc3VtQmFiaWVzID09PSAwICYmIHRoaXMuc3VtQWR1bHQgPT09IDApIHtcbiAgICAgIHRoaXMudGl0bGUuaW5uZXJIVE1MID0gJ9Ch0LrQvtC70YzQutC+INCz0L7RgdGC0LXQuSc7XG4gICAgfSBlbHNlIGlmICh0aGlzLnN1bUFkdWx0ICE9PSAwICYmIHRoaXMuc3VtQmFiaWVzID09PSAwKSB7XG4gICAgICB0aGlzLnRpdGxlLmlubmVySFRNTCA9IGAke3RoaXMuc3VtQWR1bHR9ICR7dGhpcy5tZXNzYWdlR3Vlc3RzfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudGl0bGUuaW5uZXJIVE1MID0gYCR7dGhpcy5zdW1BZHVsdH0gJHt0aGlzLm1lc3NhZ2VHdWVzdHN9LCAke3RoaXMuc3VtQmFiaWVzfSAke3RoaXMubWVzc2FnZU5ld2Jvcm5zfWA7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlRHJvcGRvd25Sb29tKCkge1xuICAgIGNvbnN0IGFycmF5ID0gdGhpcy5jb250cm9scy5tYXAoKGl0ZW0pID0+IGl0ZW0uZ2V0VmFsdWUoKSk7XG5cbiAgICBjb25zdCBbQmVkcm9vbSxcbiAgICAgIEJlZCxcbiAgICAgIEJhdGhyb29tXSA9IFthcnJheVswXSxcbiAgICAgIGFycmF5WzFdLFxuICAgICAgYXJyYXlbMl1dO1xuXG4gICAgY29uc3Qgc3VtID0gQmVkcm9vbSArIEJlZCArIEJhdGhyb29tO1xuXG4gICAgaWYgKHN1bSAhPT0gdGhpcy5EZWZhdWx0U3VtKSB7XG4gICAgICB0aGlzLmNoZWNrQnV0dG9uQ2xlYXIoKTtcbiAgICAgIHRoaXMuY2hlY2tCdXR0b25Vc2UoKTtcbiAgICB9XG5cbiAgICBjb25zdCBmb3JtQmVkcm9vbSA9IFsn0YHQv9Cw0LvRjNC90Y8nLFxuICAgICAgJ9GB0L/QsNC70YzQvdC4JyxcbiAgICAgICfRgdC/0LDQu9C10L0nXTtcbiAgICBjb25zdCBmb3JtQmVkID0gWyfQutGA0L7QstCw0YLRjCcsXG4gICAgICAn0LrRgNC+0LLQsNGC0LgnLFxuICAgICAgJ9C60YDQvtCy0LDRgtC10LknXTtcbiAgICBjb25zdCBmb3JtQmF0aHJvb20gPSBbJ9Cy0LDQvdC90LDRjycsXG4gICAgICAn0LLQsNC90L3Ri9C1JyxcbiAgICAgICfQstCw0L3QvdGL0YUnXTtcblxuICAgIGNvbnN0IG1lc3NhZ2VCZWRyb29tID0gdGhpcy5mb3JtRGVjbGVuc2lvbihCZWRyb29tLCBmb3JtQmVkcm9vbSk7XG4gICAgY29uc3QgbWVzc2FnZUJlZCA9IHRoaXMuZm9ybURlY2xlbnNpb24oQmVkLCBmb3JtQmVkKTtcbiAgICBjb25zdCBtZXNzYWdlQmF0aHJvb20gPSB0aGlzLmZvcm1EZWNsZW5zaW9uKEJhdGhyb29tLCBmb3JtQmF0aHJvb20pO1xuXG4gICAgaWYgKHN1bSA+IDAgJiYgQmF0aHJvb20gPiAwKSB7XG4gICAgICB0aGlzLnRpdGxlLmlubmVySFRNTCA9IGAke0JlZHJvb219ICR7bWVzc2FnZUJlZHJvb219LCAke0JlZH0gJHttZXNzYWdlQmVkfSwke0JhdGhyb29tfSAke21lc3NhZ2VCYXRocm9vbX1gXG4gICAgICArICcuLi4nO1xuICAgIH0gZWxzZSB0aGlzLnRpdGxlLmlubmVySFRNTCA9IGAke0JlZHJvb219ICR7bWVzc2FnZUJlZHJvb219LCAke0JlZH0gJHttZXNzYWdlQmVkfS4uLmA7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIERyb3Bkb3duLFxufTtcbiIsImltcG9ydCB7IERyb3Bkb3duIH0gZnJvbSAnLi9Ecm9wZG93bic7XG5cbmZ1bmN0aW9uIG9uTG9hZCgpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRyb3Bkb3duJykuZm9yRWFjaCgoaXRlbSkgPT4gbmV3IERyb3Bkb3duKGl0ZW0pKTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBvbkxvYWQpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaGVhZGVyLW1haW4nKS5mb3JFYWNoKGZ1bmN0aW9uIChidXJnZXIpIHtcbiAgICB2YXIgYnV0dG9uID0gYnVyZ2VyLnF1ZXJ5U2VsZWN0b3IoJy5idXJnZXJfX2l0ZW0nKTtcbiAgICB2YXIgbmF2YmFyID0gYnVyZ2VyLnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXItbWFpbl9fbmF2Jyk7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tNZW51KTtcbiAgICBmdW5jdGlvbiBjbGlja01lbnUoKSB7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKTtcbiAgICAgICAgbmF2YmFyLmNsYXNzTGlzdC50b2dnbGUoJ2hlYWRlci1tYWluX19vcGVuLW1lbnUnKTtcbiAgICB9XG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xucmVxdWlyZShcIi4uLy4uL2Jsb2Nrcy9kcm9wZG93bi9kcm9wZG93bi1pbml0XCIpO1xucmVxdWlyZShcIi4uLy4uL3Njc3MvbWFpbi5zY3NzXCIpO1xucmVxdWlyZShcIi4vcmVnaXN0cmF0aW9uLnNjc3NcIik7XG5yZXF1aXJlKFwiLi4vLi4vYmxvY2tzL2J1cmdlci9idXJnZXJcIik7XG5yZXF1aXJlKFwiLi4vLi4vYmxvY2tzL2xvZ2ljLXJvb20tcmVnL2xvZ2ljLXJvb20tcmVnXCIpO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZWdpc3RyYXRpb24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3JlZ2lzdHJhdGlvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3JlZ2lzdHJhdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgc2lnbkluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbl9zaWduSW4nKTtcbnZhciBjcmVhdGVBY291bnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uX3JlZ0NyZWF0ZScpO1xudmFyIGZvcm1TaWduSW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVnaXN0cmF0aW9uLWNvbnRhaW5lcl9fc2lnbmluJyk7XG52YXIgZm9ybUNyZWF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZWdpc3RyYXRpb24tY29udGFpbmVyX19yZWcnKTtcbnZhciBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJlZ2lzdHJhdGlvbi1jb250YWluZXInKTtcbnNpZ25JbiA9PT0gbnVsbCB8fCBzaWduSW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNpZ25Jbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNpZ24pO1xuY3JlYXRlQWNvdW50ID09PSBudWxsIHx8IGNyZWF0ZUFjb3VudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY3JlYXRlQWNvdW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmVnKTtcbmZ1bmN0aW9uIHNpZ24oKSB7XG4gICAgZm9ybVNpZ25JbiA9PT0gbnVsbCB8fCBmb3JtU2lnbkluID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmb3JtU2lnbkluLmNsYXNzTGlzdC50b2dnbGUoJ3JlZ2lzdHJhdGlvbi1jb250YWluZXJfYWN0aXZlJyk7XG4gICAgZm9ybUNyZWF0ZSA9PT0gbnVsbCB8fCBmb3JtQ3JlYXRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmb3JtQ3JlYXRlLmNsYXNzTGlzdC5yZW1vdmUoJ3JlZ2lzdHJhdGlvbi1jb250YWluZXJfYWN0aXZlJyk7XG4gICAgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKHsgcGFyYW06ICdWYWx1ZScgfSwgJycsICdzaWduaW4uaHRtbCcpO1xuICAgIGNvbnRlbnQgPT09IG51bGwgfHwgY29udGVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX3JlZy1iZycpO1xuICAgIGNvbnRlbnQgPT09IG51bGwgfHwgY29udGVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudC5jbGFzc0xpc3QuYWRkKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX3NpZ25Jbi1iZycpO1xufVxuZnVuY3Rpb24gcmVnKCkge1xuICAgIGZvcm1DcmVhdGUgPT09IG51bGwgfHwgZm9ybUNyZWF0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZm9ybUNyZWF0ZS5jbGFzc0xpc3QudG9nZ2xlKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX2FjdGl2ZScpO1xuICAgIGZvcm1TaWduSW4gPT09IG51bGwgfHwgZm9ybVNpZ25JbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogZm9ybVNpZ25Jbi5jbGFzc0xpc3QucmVtb3ZlKCdyZWdpc3RyYXRpb24tY29udGFpbmVyX2FjdGl2ZScpO1xuICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSh7IHBhcmFtOiAnVmFsdWUnIH0sICcnLCAncmVnaXN0cmF0aW9uLmh0bWwnKTtcbiAgICBjb250ZW50ID09PSBudWxsIHx8IGNvbnRlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgncmVnaXN0cmF0aW9uLWNvbnRhaW5lcl9yZWctYmcnKTtcbiAgICBjb250ZW50ID09PSBudWxsIHx8IGNvbnRlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnQuY2xhc3NMaXN0LnJlbW92ZSgncmVnaXN0cmF0aW9uLWNvbnRhaW5lcl9zaWduSW4tYmcnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=