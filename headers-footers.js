!function(t){var e={};function o(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.m=t,o.c=e,o.d=function(t,e,i){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)o.d(i,s,function(e){return t[e]}.bind(null,s));return i},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=47)}({1:function(t,e,o){var i,s,n={},r=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===s&&(s=i.apply(this,arguments)),s}),a=function(t,e){return e?e.querySelector(t):document.querySelector(t)},l=function(t){var e={};return function(t,o){if("function"==typeof t)return t();if(void 0===e[t]){var i=a.call(this,t,o);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}}(),c=null,h=0,f=[],p=o(4);function u(t,e){for(var o=0;o<t.length;o++){var i=t[o],s=n[i.id];if(s){s.refs++;for(var r=0;r<s.parts.length;r++)s.parts[r](i.parts[r]);for(;r<i.parts.length;r++)s.parts.push(b(i.parts[r],e))}else{var a=[];for(r=0;r<i.parts.length;r++)a.push(b(i.parts[r],e));n[i.id]={id:i.id,refs:1,parts:a}}}}function d(t,e){for(var o=[],i={},s=0;s<t.length;s++){var n=t[s],r=e.base?n[0]+e.base:n[0],a={css:n[1],media:n[2],sourceMap:n[3]};i[r]?i[r].parts.push(a):o.push(i[r]={id:r,parts:[a]})}return o}function y(t,e){var o=l(t.insertInto);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=f[f.length-1];if("top"===t.insertAt)i?i.nextSibling?o.insertBefore(e,i.nextSibling):o.appendChild(e):o.insertBefore(e,o.firstChild),f.push(e);else if("bottom"===t.insertAt)o.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var s=l(t.insertAt.before,o);o.insertBefore(e,s)}}function g(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=f.indexOf(t);e>=0&&f.splice(e,1)}function v(t){var e=document.createElement("style");if(void 0===t.attrs.type&&(t.attrs.type="text/css"),void 0===t.attrs.nonce){var i=function(){0;return o.nc}();i&&(t.attrs.nonce=i)}return m(e,t.attrs),y(t,e),e}function m(t,e){Object.keys(e).forEach((function(o){t.setAttribute(o,e[o])}))}function b(t,e){var o,i,s,n;if(e.transform&&t.css){if(!(n="function"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=n}if(e.singleton){var r=h++;o=c||(c=v(e)),i=w.bind(null,o,r,!1),s=w.bind(null,o,r,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(o=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",m(e,t.attrs),y(t,e),e}(e),i=S.bind(null,o,e),s=function(){g(o),o.href&&URL.revokeObjectURL(o.href)}):(o=v(e),i=k.bind(null,o),s=function(){g(o)});return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else s()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=r()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var o=d(t,e);return u(o,e),function(t){for(var i=[],s=0;s<o.length;s++){var r=o[s];(a=n[r.id]).refs--,i.push(a)}t&&u(d(t,e),e);for(s=0;s<i.length;s++){var a;if(0===(a=i[s]).refs){for(var l=0;l<a.parts.length;l++)a.parts[l]();delete n[a.id]}}}};var x,_=(x=[],function(t,e){return x[t]=e,x.filter(Boolean).join("\n")});function w(t,e,o,i){var s=o?"":i.css;if(t.styleSheet)t.styleSheet.cssText=_(e,s);else{var n=document.createTextNode(s),r=t.childNodes;r[e]&&t.removeChild(r[e]),r.length?t.insertBefore(n,r[e]):t.appendChild(n)}}function k(t,e){var o=e.css,i=e.media;if(i&&t.setAttribute("media",i),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}function S(t,e,o){var i=o.css,s=o.sourceMap,n=void 0===e.convertToAbsoluteUrls&&s;(e.convertToAbsoluteUrls||n)&&(i=p(i)),s&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */");var r=new Blob([i],{type:"text/css"}),a=t.href;t.href=URL.createObjectURL(r),a&&URL.revokeObjectURL(a)}},2:function(t,e,o){var i=o(3);"string"==typeof i&&(i=[[t.i,i,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};o(1)(i,s);i.locals&&(t.exports=i.locals)},3:function(t,e,o){},4:function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var o=e.protocol+"//"+e.host,i=o+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(t,e){var s,n=e.trim().replace(/^"(.*)"$/,(function(t,e){return e})).replace(/^'(.*)'$/,(function(t,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(n)?t:(s=0===n.indexOf("//")?n:0===n.indexOf("/")?o+n:i+n.replace(/^\.\//,""),"url("+JSON.stringify(s)+")")}))}},47:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),o(2),o(48),o(9),o(5),o(6)},48:function(t,e,o){var i=o(49);"string"==typeof i&&(i=[[t.i,i,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};o(1)(i,s);i.locals&&(t.exports=i.locals)},49:function(t,e,o){},5:function(t,e){new function(){this.init=function(){this.generateUI(),this.getOptions(),this.fillOptions(),this.bind([this.c.lock],"click",this.proxy("toggleLock")),this.bind([this.c.show],"click",this.proxy("toggleShow")),this.bind([this.c.close],"click",this.proxy("toggleEntry")),this.bind([this.c.url,this.c.position.x,this.c.position.y,this.c.opacity,this.c.zIndex],"keyup",this.proxy("updateOptions")),this.bind([this.c.position.x,this.c.position.y,this.c.opacity,this.c.zIndex],"keydown",this.proxy("valueChange")),this.bind([this.c.head,this.layer],"mousedown",this.proxy("dragTo")),this.bind([this.c.head,this.layer],"dragstart",(function(t){t.preventDefault()}))},this.generateUI=function(){this.pf=document.createElement("div"),this.pf.className=this.o.namespaces.wrapper,this.pf.innerHTML='<div class="pf_head" data-pf="head"><ul class="pf_layer-control"><li data-pf="show" class="pf_icon __off"></li><li data-pf="lock" class="pf_icon __unlock"></li></ul><h3 data-pf="close" class="pf_title">Perfetto</h3></div><div data-pf="entry" class="pf_entry __visible"><form action="#" class="pf_form"><fieldset class="pf_field_wrap"><div class="pf_field"><label>URL</label><input type="text" name="url"/></div></fieldset><fieldset class="pf_field_group"><div class="pf_field __first"><label>X</label><input type="text" name="pos-x"/></div><div class="pf_field"><label>Y</label><input type="text" name="pos-y"/></div></fieldset><fieldset class="pf_field_group"><div class="pf_field __first"><label>Opacity</label><input type="text" name="opacity"/></div><div class="pf_field"><label>z-Index</label><input type="text" name="zindex"/></div></fieldset></form></div>',this.layer=document.createElement("div"),this.layer.className=this.o.namespaces.layer,this.c={head:this.pf.querySelector('[data-pf="head"]'),show:this.pf.querySelector('[data-pf="show"]'),lock:this.pf.querySelector('[data-pf="lock"]'),close:this.pf.querySelector('[data-pf="close"]'),entry:this.pf.querySelector('[data-pf="entry"]'),url:this.pf.querySelector('[name="url"]'),position:{x:this.pf.querySelector('[name="pos-x"]'),y:this.pf.querySelector('[name="pos-y"]')},opacity:this.pf.querySelector('[name="opacity"]'),zIndex:this.pf.querySelector('[name="zindex"]')},document.body.appendChild(this.pf),document.body.appendChild(this.layer)},this.saveOptions=function(){localStorage.Perfetto=!0,localStorage["Perfetto.o.position"]=this.o.position,localStorage["Perfetto.o.close"]=this.o.close,localStorage["Perfetto.o.layer.current"]=this.o.layer.current,localStorage["Perfetto.o.layer.show"]=this.o.layer.show,localStorage["Perfetto.o.layer.lock"]=this.o.layer.lock,localStorage["Perfetto.o.layer.url"]=this.o.layer.url,localStorage["Perfetto.o.layer.position"]=this.o.layer.position,localStorage["Perfetto.o.layer.opacity"]=this.o.layer.opacity,localStorage["Perfetto.o.layer.zIndex"]=this.o.layer.zIndex},this.getOptions=function(){if("true"===localStorage.Perfetto){var t=localStorage["Perfetto.o.position"].split(","),e=localStorage["Perfetto.o.layer.position"].split(",");this.o.position=[parseInt(t[0]),parseInt(t[1])],this.o.close="true"===localStorage["Perfetto.o.close"],this.o.layer.current=parseInt(localStorage["Perfetto.o.layer.current"]),this.o.layer.show="true"===localStorage["Perfetto.o.layer.show"],this.o.layer.lock="true"===localStorage["Perfetto.o.layer.lock"],this.o.layer.url=localStorage["Perfetto.o.layer.url"],this.o.layer.position=[parseInt(e[0]),parseInt(e[1])],this.o.layer.opacity=parseFloat(localStorage["Perfetto.o.layer.opacity"]),this.o.layer.zIndex=parseInt(localStorage["Perfetto.o.layer.zIndex"])}},this.fillOptions=function(){this.pf.style.left=this.o.position[0]+"px",this.pf.style.top=this.o.position[1]+"px ",this.o.close?this.toggleEntryToHidden():this.toggleEntryToVisible(),this.o.layer.show?this.toggleShowToVisible():this.toggleShowToHidden(),this.o.layer.lock?this.toggleLockToLocked():this.toggleLockToUnlocked(),this.c.url.value=this.o.layer.url,this.changeURL(),this.c.position.x.value=this.o.layer.position[0],this.c.position.y.value=this.o.layer.position[1],this.changePosition(),this.c.opacity.value=this.o.layer.opacity,this.changeOpacity(),this.c.zIndex.value=this.o.layer.zIndex,this.changeZIndex()},this.updateOptions=function(t){switch(t.currentTarget.name){case"url":this.o.layer.url=this.c.url.value,this.changeURL();break;case"pos-x":this.o.layer.position[0]=this.c.position.x.value,this.changePosition();break;case"pos-y":this.o.layer.position[1]=this.c.position.y.value,this.changePosition();break;case"opacity":this.o.layer.opacity=this.c.opacity.value,this.changeOpacity();break;case"zindex":this.o.layer.zIndex=this.c.zIndex.value,this.changeZIndex()}this.saveOptions()},this.valueChange=function(t){if(38==t.keyCode)"opacity"==t.currentTarget.name?((e=10*t.currentTarget.value+1)>10&&(e=10),this.c.opacity.value=e/10):("pos-x"==t.currentTarget.name||"pos-y"==t.currentTarget.name)&&this.o.layer.lock||t.currentTarget.value++;else if(40==t.keyCode){var e;if("opacity"==t.currentTarget.name)(e=10*t.currentTarget.value-1)<0&&(e=0),this.c.opacity.value=e/10;else("pos-x"==t.currentTarget.name||"pos-y"==t.currentTarget.name)&&this.o.layer.lock||t.currentTarget.value--}},this.dragTo=function(t){var e=this,o=t.currentTarget;if(o==this.c.head&&(o=this.pf),o.className!=e.o.namespaces.layer||o.className==e.o.namespaces.layer&&!e.o.layer.lock){var i=function(t){var i=t.pageX-s,r=t.pageY-n;o.style.left=i+"px",o.style.top=r+"px",o.className==e.o.namespaces.wrapper&&(e.o.position[0]=i,e.o.position[1]=r),o.className==e.o.namespaces.layer&&(e.c.position.x.value=e.o.layer.position[0]=i,e.c.position.y.value=e.o.layer.position[1]=r),e.saveOptions()},s=t.pageX-o.offsetLeft,n=t.pageY-o.offsetTop;e.bind([document],"mousemove",i),e.bind([document],"mouseup",(function t(){e.unbind([document],"mousemove",i),e.unbind([document],"mouseup",t)}))}},this.toggleLock=function(){this.o.layer.lock?(this.toggleLockToUnlocked(),this.o.layer.lock=!1):(this.toggleLockToLocked(),this.o.layer.lock=!0),this.saveOptions()},this.toggleLockToLocked=function(){this.removeClass(this.c.lock,"__unlock"),this.addClass(this.c.lock,"__lock")},this.toggleLockToUnlocked=function(){this.removeClass(this.c.lock,"__lock"),this.addClass(this.c.lock,"__unlock")},this.toggleShow=function(){this.o.layer.show?(this.toggleShowToHidden(),this.o.layer.show=!1):(this.toggleShowToVisible(),this.o.layer.show=!0),this.saveOptions()},this.toggleShowToVisible=function(){this.removeClass(this.c.show,"__off"),this.addClass(this.c.show,"__on"),this.layer.style.display="block"},this.toggleShowToHidden=function(){this.removeClass(this.c.show,"__on"),this.addClass(this.c.show,"__off"),this.layer.style.display="none"},this.toggleEntry=function(){this.o.close?(this.toggleEntryToVisible(),this.o.close=!1):(this.toggleEntryToHidden(),this.o.close=!0),this.saveOptions()},this.toggleEntryToVisible=function(){this.addClass(this.c.entry,"__visible"),this.c.entry.style.display="block"},this.toggleEntryToHidden=function(){this.removeClass(this.c.entry,"__visible"),this.c.entry.style.display="none"},this.changeURL=function(){this.layer.innerHTML='<img src="'+this.o.layer.url+'"/>'},this.changePosition=function(){this.layer.style.left=this.o.layer.position[0]+"px",this.layer.style.top=this.o.layer.position[1]+"px"},this.changeOpacity=function(){this.layer.style.opacity=this.o.layer.opacity},this.changeZIndex=function(){this.layer.style.zIndex=this.o.layer.zIndex},this.hasClass=function(t,e){return new RegExp(" "+e+" ").test(" "+t.className+" ")},this.addClass=function(t,e){this.hasClass(t,e)||(t.className+=" "+e)},this.removeClass=function(t,e){var o=" "+t.className.replace(/[\t\r\n]/g," ")+" ";if(this.hasClass(t,e)){for(;o.indexOf(" "+e+" ")>=0;)o=o.replace(" "+e+" "," ");t.className=o.replace(/^\s+|\s+$/g,"")}},this.bind=function(t,e,o){for(var i=0;i<t.length;i++)t[i].addEventListener?t[i].addEventListener(e,o):t[i].attachEvent("on"+e,o)},this.unbind=function(t,e,o){for(var i=0;i<t.length;i++)t[i].removeEventListener?t[i].removeEventListener(e,o):t[i].detachEvent("on"+e,o)},this.proxy=function(t,e,o){return o=o||this,e=e||[],"string"==typeof t&&(t=o[t]),function(){for(var i=e.slice(),s=0;s<arguments.length;s++)void 0!==i[s]&&null!==i[s]||(i[s]=arguments[s]);return t.apply(o,i)}},this.o={namespaces:{wrapper:"pf",layer:"pf_layer"},position:[15,15],close:!1,layer:{current:0,show:!0,lock:!1,url:"/perfetto/layers/index.jpg",position:[0,0],opacity:.5,zIndex:1e3}},this.init()}},6:function(t,e,o){var i=o(7);"string"==typeof i&&(i=[[t.i,i,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};o(1)(i,s);i.locals&&(t.exports=i.locals)},7:function(t,e,o){},9:function(t,e,o){"use strict";document.querySelectorAll(".header-main").forEach((function(t){var e=t.querySelector(".burger__item"),o=t.querySelector(".header-main__nav");e.addEventListener("click",(function(){e.classList.toggle("active"),o.classList.toggle("header-main__open-menu")}))}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,